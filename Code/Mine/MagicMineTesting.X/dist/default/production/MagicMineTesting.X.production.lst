

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Thu Mar 31 13:30:45 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    73                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    74  0000                     
    75                           	psect	idataCOMRAM
    76  001DD0                     __pidataCOMRAM:
    77                           	opt stack 0
    78                           
    79                           ;initializer for _selector
    80  001DD0  80                 	db	128
    81                           
    82                           	psect	idataBANK0
    83  001D42                     __pidataBANK0:
    84                           	opt stack 0
    85                           
    86                           ;initializer for _mask
    87  001D42  80                 	db	128
    88  001D43  40                 	db	64
    89  001D44  20                 	db	32
    90  001D45  10                 	db	16
    91  001D46  08                 	db	8
    92  001D47  04                 	db	4
    93  001D48  02                 	db	2
    94  001D49  01                 	db	1
    95                           
    96                           ;initializer for _HALT
    97  001D4A  FFFF               	dw	65535
    98                           
    99                           ;initializer for _PLAY_PAUSE
   100  001D4C  FFFE               	dw	65534
   101                           
   102                           ;initializer for _VOLUME_MAX
   103  001D4E  FFF7               	dw	65527
   104                           
   105                           ;initializer for _VOLUME_MIN
   106  001D50  FFF0               	dw	65520
   107                           
   108                           ;initializer for __busyPinState
   109  001D52  0001               	dw	1
   110                           
   111                           ;initializer for _length
   112  001D54  002F               	dw	47
   113                           
   114                           	psect	smallconst
   115  001000                     __psmallconst:
   116                           	opt stack 0
   117  001000  00                 	db	0
   118  001001                     _id_h:
   119                           	opt stack 0
   120  001001  00                 	db	0
   121  001002                     __end_of_id_h:
   122                           	opt stack 0
   123  001002                     _id_l:
   124                           	opt stack 0
   125  001002  01                 	db	1
   126  001003                     __end_of_id_l:
   127                           	opt stack 0
   128  001003  43                 	db	67	;'C'
   129  001004  4D                 	db	77	;'M'
   130  001005  44                 	db	68	;'D'
   131  001006  00                 	db	0
   132                           
   133                           ; #config settings
   134  001007  00                 	db	0	; dummy byte at the end
   135  0000                     
   136                           	psect	nvCOMRAM
   137  000040                     __pnvCOMRAM:
   138                           	opt stack 0
   139  000040                     _timer3ReloadVal:
   140                           	opt stack 0
   141  000040                     	ds	2
   142                           
   143                           	psect	nvBANK0
   144  0000E5                     __pnvBANK0:
   145                           	opt stack 0
   146  0000E5                     _TMR3_InterruptHandler:
   147                           	opt stack 0
   148  0000E5                     	ds	2
   149  0000E7                     _timer1ReloadVal:
   150                           	opt stack 0
   151  0000E7                     	ds	2
   152  0000E9                     _eusart1TxBufferRemaining:
   153                           	opt stack 0
   154  0000E9                     	ds	1
   155  0000EA                     _eusart2TxBufferRemaining:
   156                           	opt stack 0
   157  0000EA                     	ds	1
   158  0000                     _ANSELA	set	3896
   159  0000                     _ANSELB	set	3897
   160  0000                     _ANSELC	set	3898
   161  0000                     _CCP4CON	set	3927
   162  0000                     _CCP5CON	set	3924
   163  0000                     _CCPR4H	set	3929
   164  0000                     _CCPR4L	set	3928
   165  0000                     _CCPR5H	set	3926
   166  0000                     _CCPR5L	set	3925
   167  0000                     _CCPTMRS1bits	set	3912
   168  0000                     _PR4	set	3922
   169  0000                     _T4CON	set	3921
   170  0000                     _T4CONbits	set	3921
   171  0000                     _TMR4	set	3923
   172  0000                     _TMR1	set	4046
   173  0000                     _TMR3	set	4018
   174  0000                     _BAUDCON1	set	4024
   175  0000                     _BAUDCON2	set	3952
   176  0000                     _INTCON2bits	set	4081
   177  0000                     _INTCONbits	set	4082
   178  0000                     _IPR1bits	set	3999
   179  0000                     _IPR2bits	set	4002
   180  0000                     _IPR3bits	set	4005
   181  0000                     _IPR4bits	set	3964
   182  0000                     _LATA	set	3977
   183  0000                     _LATB	set	3978
   184  0000                     _LATBbits	set	3978
   185  0000                     _LATC	set	3979
   186  0000                     _OSCCON	set	4051
   187  0000                     _OSCCON2	set	4050
   188  0000                     _OSCTUNE	set	3995
   189  0000                     _PIE1bits	set	3997
   190  0000                     _PIE2bits	set	4000
   191  0000                     _PIE3bits	set	4003
   192  0000                     _PIE4bits	set	3962
   193  0000                     _PIR1bits	set	3998
   194  0000                     _PIR2bits	set	4001
   195  0000                     _PIR3bits	set	4004
   196  0000                     _PIR4bits	set	3963
   197  0000                     _PIR5bits	set	3966
   198  0000                     _PORTCbits	set	3970
   199  0000                     _PR2	set	4027
   200  0000                     _RCONbits	set	4048
   201  0000                     _RCREG1	set	4014
   202  0000                     _RCREG2	set	3956
   203  0000                     _RCSTA1	set	4011
   204  0000                     _RCSTA1bits	set	4011
   205  0000                     _RCSTA2	set	3953
   206  0000                     _RCSTA2bits	set	3953
   207  0000                     _SPBRG1	set	4015
   208  0000                     _SPBRG2	set	3957
   209  0000                     _SPBRGH1	set	4016
   210  0000                     _SPBRGH2	set	3958
   211  0000                     _SSP1ADD	set	4040
   212  0000                     _SSP1BUF	set	4041
   213  0000                     _SSP1CON1	set	4038
   214  0000                     _SSP1CON1bits	set	4038
   215  0000                     _SSP1STAT	set	4039
   216  0000                     _SSP1STATbits	set	4039
   217  0000                     _SSP2ADD	set	3950
   218  0000                     _SSP2BUF	set	3951
   219  0000                     _SSP2CON1	set	3948
   220  0000                     _SSP2CON1bits	set	3948
   221  0000                     _SSP2CON2bits	set	3947
   222  0000                     _SSP2CON3	set	3945
   223  0000                     _SSP2STAT	set	3949
   224  0000                     _T1CON	set	4045
   225  0000                     _T1CONbits	set	4045
   226  0000                     _T1GCON	set	4044
   227  0000                     _T1GCONbits	set	4044
   228  0000                     _T2CON	set	4026
   229  0000                     _T2CONbits	set	4026
   230  0000                     _T3CON	set	4017
   231  0000                     _T3CONbits	set	4017
   232  0000                     _T3GCON	set	4020
   233  0000                     _T3GCONbits	set	4020
   234  0000                     _TMR1H	set	4047
   235  0000                     _TMR1L	set	4046
   236  0000                     _TMR2	set	4028
   237  0000                     _TMR3H	set	4019
   238  0000                     _TMR3L	set	4018
   239  0000                     _TRISA	set	3986
   240  0000                     _TRISB	set	3987
   241  0000                     _TRISC	set	3988
   242  0000                     _TX1REG	set	4013
   243  0000                     _TX2REG	set	3955
   244  0000                     _TXREG1	set	4013
   245  0000                     _TXREG2	set	3955
   246  0000                     _TXSTA1	set	4012
   247  0000                     _TXSTA2	set	3954
   248  0000                     _WPUB	set	3937
   249  0000                     _IOCB4	set	31508
   250  0000                     _LATC2	set	31834
   251  0000                     _LATC3	set	31835
   252  0000                     _LATC5	set	31837
   253  0000                     _RBIF	set	32656
   254                           
   255                           	psect	cinit
   256  0017F8                     __pcinit:
   257                           	opt stack 0
   258  0017F8                     start_initialization:
   259                           	opt stack 0
   260  0017F8                     __initialization:
   261                           	opt stack 0
   262                           
   263                           ; Clear objects allocated to BANK1 (72 bytes)
   264  0017F8  EE01  F000         	lfsr	0,__pbssBANK1
   265  0017FC  0E48               	movlw	72
   266  0017FE                     clear_0:
   267  0017FE  6AEE               	clrf	postinc0,c
   268  001800  06E8               	decf	wreg,f,c
   269  001802  E1FD               	bnz	clear_0
   270                           
   271                           ; Clear objects allocated to BANK0 (113 bytes)
   272  001804  EE00  F060         	lfsr	0,__pbssBANK0
   273  001808  0E71               	movlw	113
   274  00180A                     clear_1:
   275  00180A  6AEE               	clrf	postinc0,c
   276  00180C  06E8               	decf	wreg,f,c
   277  00180E  E1FD               	bnz	clear_1
   278                           
   279                           ; Clear objects allocated to COMRAM (32 bytes)
   280  001810  EE00  F001         	lfsr	0,__pbssCOMRAM
   281  001814  0E20               	movlw	32
   282  001816                     clear_2:
   283  001816  6AEE               	clrf	postinc0,c
   284  001818  06E8               	decf	wreg,f,c
   285  00181A  E1FD               	bnz	clear_2
   286                           
   287                           ; Initialize objects allocated to BANK0 (20 bytes)
   288                           ; load TBLPTR registers with __pidataBANK0
   289  00181C  0E42               	movlw	low __pidataBANK0
   290  00181E  6EF6               	movwf	tblptrl,c
   291  001820  0E1D               	movlw	high __pidataBANK0
   292  001822  6EF7               	movwf	tblptrh,c
   293  001824  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   294  001826  6EF8               	movwf	tblptru,c
   295  001828  EE00  F0D1         	lfsr	0,__pdataBANK0
   296  00182C  EE10 F014          	lfsr	1,20
   297  001830                     copy_data0:
   298  001830  0009               	tblrd		*+
   299  001832  CFF5 FFEE          	movff	tablat,postinc0
   300  001836  50E5               	movf	postdec1,w,c
   301  001838  50E1               	movf	fsr1l,w,c
   302  00183A  E1FA               	bnz	copy_data0
   303                           
   304                           ; Initialize objects allocated to COMRAM (1 bytes)
   305                           ; load TBLPTR registers with __pidataCOMRAM
   306  00183C  0ED0               	movlw	low __pidataCOMRAM
   307  00183E  6EF6               	movwf	tblptrl,c
   308  001840  0E1D               	movlw	high __pidataCOMRAM
   309  001842  6EF7               	movwf	tblptrh,c
   310  001844  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   311  001846  6EF8               	movwf	tblptru,c
   312  001848  0009               	tblrd		*+	;fetch initializer
   313  00184A  CFF5 F042          	movff	tablat,__pdataCOMRAM
   314  00184E                     end_of_initialization:
   315                           	opt stack 0
   316  00184E                     __end_of__initialization:
   317                           	opt stack 0
   318  00184E  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   319  001850  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   320  001852  0100               	movlb	0
   321  001854  EF3B  F009         	goto	_main	;jump to C main() function
   322                           tblptru	equ	0xFF8
   323                           tblptrh	equ	0xFF7
   324                           tblptrl	equ	0xFF6
   325                           tablat	equ	0xFF5
   326                           postinc0	equ	0xFEE
   327                           wreg	equ	0xFE8
   328                           postdec1	equ	0xFE5
   329                           fsr1l	equ	0xFE1
   330                           
   331                           	psect	bssCOMRAM
   332  000001                     __pbssCOMRAM:
   333                           	opt stack 0
   334  000001                     _k:
   335                           	opt stack 0
   336  000001                     	ds	2
   337  000003                     _p:
   338                           	opt stack 0
   339  000003                     	ds	2
   340  000005                     _p_i2c2_trb_current:
   341                           	opt stack 0
   342  000005                     	ds	2
   343  000007                     I2C2_ISR@i2c_10bit_address_restart:
   344                           	opt stack 0
   345  000007                     	ds	1
   346  000008                     I2C2_ISR@i2c_bytes_left:
   347                           	opt stack 0
   348  000008                     	ds	1
   349  000009                     _audio_controller_online:
   350                           	opt stack 0
   351  000009                     	ds	1
   352  00000A                     _bluetooth_to_PIU_online:
   353                           	opt stack 0
   354  00000A                     	ds	1
   355  00000B                     _bluetooth_to_remote_online:
   356                           	opt stack 0
   357  00000B                     	ds	1
   358  00000C                     _currentBit:
   359                           	opt stack 0
   360  00000C                     	ds	1
   361  00000D                     _eusart1RxCount:
   362                           	opt stack 0
   363  00000D                     	ds	1
   364  00000E                     _eusart1RxHead:
   365                           	opt stack 0
   366  00000E                     	ds	1
   367  00000F                     _eusart1RxTail:
   368                           	opt stack 0
   369  00000F                     	ds	1
   370  000010                     _eusart1TxHead:
   371                           	opt stack 0
   372  000010                     	ds	1
   373  000011                     _eusart1TxTail:
   374                           	opt stack 0
   375  000011                     	ds	1
   376  000012                     _eusart2RxCount:
   377                           	opt stack 0
   378  000012                     	ds	1
   379  000013                     _eusart2RxHead:
   380                           	opt stack 0
   381  000013                     	ds	1
   382  000014                     _eusart2RxTail:
   383                           	opt stack 0
   384  000014                     	ds	1
   385  000015                     _eusart2TxHead:
   386                           	opt stack 0
   387  000015                     	ds	1
   388  000016                     _eusart2TxTail:
   389                           	opt stack 0
   390  000016                     	ds	1
   391  000017                     _i2c2_state:
   392                           	opt stack 0
   393  000017                     	ds	1
   394  000018                     _i2c2_trb_count:
   395                           	opt stack 0
   396  000018                     	ds	1
   397  000019                     _last_pattern_was_heal:
   398                           	opt stack 0
   399  000019                     	ds	1
   400  00001A                     _nextBit:
   401                           	opt stack 0
   402  00001A                     	ds	1
   403  00001B                     _num:
   404                           	opt stack 0
   405  00001B                     	ds	1
   406  00001C                     _packet_uuid:
   407                           	opt stack 0
   408  00001C                     	ds	1
   409  00001D                     _previousBit:
   410                           	opt stack 0
   411  00001D                     	ds	1
   412  00001E                     _self_test_passed:
   413                           	opt stack 0
   414  00001E                     	ds	1
   415  00001F                     I2C2_ISR@i2c_address:
   416                           	opt stack 0
   417  00001F                     	ds	2
   418                           tblptru	equ	0xFF8
   419                           tblptrh	equ	0xFF7
   420                           tblptrl	equ	0xFF6
   421                           tablat	equ	0xFF5
   422                           postinc0	equ	0xFEE
   423                           wreg	equ	0xFE8
   424                           postdec1	equ	0xFE5
   425                           fsr1l	equ	0xFE1
   426                           
   427                           	psect	dataCOMRAM
   428  000042                     __pdataCOMRAM:
   429                           	opt stack 0
   430  000042                     _selector:
   431                           	opt stack 0
   432  000042                     	ds	1
   433                           tblptru	equ	0xFF8
   434                           tblptrh	equ	0xFF7
   435                           tblptrl	equ	0xFF6
   436                           tablat	equ	0xFF5
   437                           postinc0	equ	0xFEE
   438                           wreg	equ	0xFE8
   439                           postdec1	equ	0xFE5
   440                           fsr1l	equ	0xFE1
   441                           
   442                           	psect	bssBANK0
   443  000060                     __pbssBANK0:
   444                           	opt stack 0
   445  000060                     	ds	13
   446  00006D                     _eusart1RxBuffer:
   447                           	opt stack 0
   448  00006D                     	ds	8
   449  000075                     _eusart1TxBuffer:
   450                           	opt stack 0
   451  000075                     	ds	8
   452  00007D                     _eusart2RxBuffer:
   453                           	opt stack 0
   454  00007D                     	ds	8
   455  000085                     _eusart2TxBuffer:
   456                           	opt stack 0
   457  000085                     	ds	8
   458  00008D                     _i2c2_object:
   459                           	opt stack 0
   460  00008D                     	ds	7
   461  000094                     _mirp0:
   462                           	opt stack 0
   463  000094                     	ds	6
   464  00009A                     I2C2_ISR@pi2c_buf_ptr:
   465                           	opt stack 0
   466  00009A                     	ds	2
   467  00009C                     TMR3_ISR@CountCallBack:
   468                           	opt stack 0
   469  00009C                     	ds	2
   470  00009E                     _a:
   471                           	opt stack 0
   472  00009E                     	ds	2
   473  0000A0                     _b:
   474                           	opt stack 0
   475  0000A0                     	ds	2
   476  0000A2                     _counter:
   477                           	opt stack 0
   478  0000A2                     	ds	2
   479  0000A4                     _i:
   480                           	opt stack 0
   481  0000A4                     	ds	2
   482  0000A6                     _j:
   483                           	opt stack 0
   484  0000A6                     	ds	2
   485  0000A8                     _p_i2c2_current:
   486                           	opt stack 0
   487  0000A8                     	ds	2
   488  0000AA                     _bit_test_result:
   489                           	opt stack 0
   490  0000AA                     	ds	1
   491  0000AB                     _bit_to_test:
   492                           	opt stack 0
   493  0000AB                     	ds	1
   494  0000AC                     _byte_to_test:
   495                           	opt stack 0
   496  0000AC                     	ds	1
   497  0000AD                     _device_state:
   498                           	opt stack 0
   499  0000AD                     	ds	1
   500  0000AE                     _piu_bt_state:
   501                           	opt stack 0
   502  0000AE                     	ds	1
   503  0000AF                     	ds	1
   504  0000B0                     _to_return:
   505                           	opt stack 0
   506  0000B0                     	ds	1
   507  0000B1                     	ds	1
   508  0000B2                     _piu_buff:
   509                           	opt stack 0
   510  0000B2                     	ds	13
   511  0000BF                     I2C2_MasterRead@trBlock:
   512                           	opt stack 0
   513  0000BF                     	ds	6
   514  0000C5                     I2C2_MasterWrite@trBlock:
   515                           	opt stack 0
   516  0000C5                     	ds	6
   517  0000CB                     _i2c2_tr_queue:
   518                           	opt stack 0
   519  0000CB                     	ds	6
   520                           tblptru	equ	0xFF8
   521                           tblptrh	equ	0xFF7
   522                           tblptrl	equ	0xFF6
   523                           tablat	equ	0xFF5
   524                           postinc0	equ	0xFEE
   525                           wreg	equ	0xFE8
   526                           postdec1	equ	0xFE5
   527                           fsr1l	equ	0xFE1
   528                           
   529                           	psect	dataBANK0
   530  0000D1                     __pdataBANK0:
   531                           	opt stack 0
   532  0000D1                     _mask:
   533                           	opt stack 0
   534  0000D1                     	ds	8
   535  0000D9                     _HALT:
   536                           	opt stack 0
   537  0000D9                     	ds	2
   538  0000DB                     _PLAY_PAUSE:
   539                           	opt stack 0
   540  0000DB                     	ds	2
   541  0000DD                     _VOLUME_MAX:
   542                           	opt stack 0
   543  0000DD                     	ds	2
   544  0000DF                     _VOLUME_MIN:
   545                           	opt stack 0
   546  0000DF                     	ds	2
   547  0000E1                     __busyPinState:
   548                           	opt stack 0
   549  0000E1                     	ds	2
   550  0000E3                     _length:
   551                           	opt stack 0
   552  0000E3                     	ds	2
   553                           tblptru	equ	0xFF8
   554                           tblptrh	equ	0xFF7
   555                           tblptrl	equ	0xFF6
   556                           tablat	equ	0xFF5
   557                           postinc0	equ	0xFEE
   558                           wreg	equ	0xFE8
   559                           postdec1	equ	0xFE5
   560                           fsr1l	equ	0xFE1
   561                           
   562                           	psect	bssBANK1
   563  000100                     __pbssBANK1:
   564                           	opt stack 0
   565  000100                     _bluePixels:
   566                           	opt stack 0
   567  000100                     	ds	24
   568  000118                     _greenPixels:
   569                           	opt stack 0
   570  000118                     	ds	24
   571  000130                     _redPixels:
   572                           	opt stack 0
   573  000130                     	ds	24
   574                           tblptru	equ	0xFF8
   575                           tblptrh	equ	0xFF7
   576                           tblptrl	equ	0xFF6
   577                           tablat	equ	0xFF5
   578                           postinc0	equ	0xFEE
   579                           wreg	equ	0xFE8
   580                           postdec1	equ	0xFE5
   581                           fsr1l	equ	0xFE1
   582                           
   583                           	psect	cstackBANK1
   584  000148                     __pcstackBANK1:
   585                           	opt stack 0
   586  000148                     main@char_buff:
   587                           	opt stack 0
   588                           
   589                           ; 15 bytes @ 0x0
   590  000148                     	ds	15
   591  000157                     main@read_byte:
   592                           	opt stack 0
   593                           
   594                           ; 1 bytes @ 0xF
   595  000157                     	ds	1
   596  000158                     main@i:
   597                           	opt stack 0
   598                           
   599                           ; 1 bytes @ 0x10
   600  000158                     	ds	1
   601  000159                     main@to_send:
   602                           	opt stack 0
   603                           
   604                           ; 6 bytes @ 0x11
   605  000159                     	ds	6
   606                           tblptru	equ	0xFF8
   607                           tblptrh	equ	0xFF7
   608                           tblptrl	equ	0xFF6
   609                           tablat	equ	0xFF5
   610                           postinc0	equ	0xFEE
   611                           wreg	equ	0xFE8
   612                           postdec1	equ	0xFE5
   613                           fsr1l	equ	0xFE1
   614                           
   615                           	psect	cstackBANK0
   616  0000EB                     __pcstackBANK0:
   617                           	opt stack 0
   618  0000EB                     memcpy@s:
   619                           	opt stack 0
   620                           
   621                           ; 3 bytes @ 0x0
   622  0000EB                     	ds	3
   623  0000EE                     memcpy@d:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x3
   627  0000EE                     	ds	2
   628                           tblptru	equ	0xFF8
   629                           tblptrh	equ	0xFF7
   630                           tblptrl	equ	0xFF6
   631                           tablat	equ	0xFF5
   632                           postinc0	equ	0xFEE
   633                           wreg	equ	0xFE8
   634                           postdec1	equ	0xFE5
   635                           fsr1l	equ	0xFE1
   636                           
   637                           	psect	cstackCOMRAM
   638  000021                     __pcstackCOMRAM:
   639                           	opt stack 0
   640  000021                     ??_I2C2_Stop:
   641  000021                     ??_playDamage:
   642  000021                     ??_playHeal:
   643  000021                     ??_playStun:
   644  000021                     draw@pixel:
   645                           	opt stack 0
   646  000021                     clearPattern@i:
   647                           	opt stack 0
   648  000021                     delay_25ms_n_times@n:
   649                           	opt stack 0
   650                           
   651                           ; 2 bytes @ 0x0
   652  000021                     	ds	1
   653  000022                     draw@bitCount:
   654                           	opt stack 0
   655  000022                     playDamage@i:
   656                           	opt stack 0
   657  000022                     playHeal@i:
   658                           	opt stack 0
   659  000022                     playStun@i:
   660                           	opt stack 0
   661                           
   662                           ; 2 bytes @ 0x1
   663  000022                     	ds	1
   664  000023                     ??_delay_25ms_n_times:
   665  000023                     I2C2_Stop@completion_code:
   666                           	opt stack 0
   667                           
   668                           ; 1 bytes @ 0x2
   669  000023                     	ds	1
   670  000024                     ??_I2C2_ISR:
   671  000024                     pulse@pixel:
   672                           	opt stack 0
   673                           
   674                           ; 1 bytes @ 0x3
   675  000024                     	ds	1
   676  000025                     pulse@i:
   677                           	opt stack 0
   678                           
   679                           ; 1 bytes @ 0x4
   680  000025                     	ds	1
   681  000026                     playPattern@pattern:
   682                           	opt stack 0
   683                           
   684                           ; 1 bytes @ 0x5
   685  000026                     	ds	1
   686  000027                     CCP4_CallBack@capturedValue:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0x6
   690  000027                     	ds	2
   691  000029                     CCP4_CaptureISR@module:
   692                           	opt stack 0
   693                           
   694                           ; 2 bytes @ 0x8
   695  000029                     	ds	2
   696  00002B                     ??_INTERRUPT_InterruptManager:
   697                           
   698                           ; 1 bytes @ 0xA
   699  00002B                     	ds	14
   700  000039                     EUSART1_Read@readValue:
   701                           	opt stack 0
   702  000039                     TMR3_SetInterruptHandler@InterruptHandler:
   703                           	opt stack 0
   704  000039                     memcpy@d1:
   705                           	opt stack 0
   706  000039                     PIU_bt_transmit_packet@packet:
   707                           	opt stack 0
   708                           
   709                           ; 6 bytes @ 0x18
   710  000039                     	ds	2
   711  00003B                     memcpy@s1:
   712                           	opt stack 0
   713                           
   714                           ; 3 bytes @ 0x1A
   715  00003B                     	ds	3
   716  00003E                     memcpy@n:
   717                           	opt stack 0
   718                           
   719                           ; 2 bytes @ 0x1D
   720  00003E                     	ds	1
   721  00003F                     ??_PIU_bt_transmit_packet:
   722                           
   723                           ; 1 bytes @ 0x1E
   724  00003F                     	ds	1
   725  000040                     tblptru	equ	0xFF8
   726                           tblptrh	equ	0xFF7
   727                           tblptrl	equ	0xFF6
   728                           tablat	equ	0xFF5
   729                           postinc0	equ	0xFEE
   730                           wreg	equ	0xFE8
   731                           postdec1	equ	0xFE5
   732                           fsr1l	equ	0xFE1
   733                           
   734                           ; 1 bytes @ 0x1F
   735 ;;
   736 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   737 ;;
   738 ;; *************** function _main *****************
   739 ;; Defined at:
   740 ;;		line 57 in file "main.c"
   741 ;; Parameters:    Size  Location     Type
   742 ;;		None
   743 ;; Auto vars:     Size  Location     Type
   744 ;;  i               1   16[BANK1 ] unsigned char 
   745 ;;  char_buff      15    0[BANK1 ] unsigned char [15]
   746 ;;  to_send         6   17[BANK1 ] struct bt_packet
   747 ;;  read_byte       1   15[BANK1 ] unsigned char 
   748 ;; Return value:  Size  Location     Type
   749 ;;                  1    wreg      void 
   750 ;; Registers used:
   751 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   758 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   760 ;;      Totals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   761 ;;Total ram usage:       23 bytes
   762 ;; Hardware stack levels required when called:   10
   763 ;; This function calls:
   764 ;;		_EUSART1_Read
   765 ;;		_PIU_bt_transmit_packet
   766 ;;		_SYSTEM_Initialize
   767 ;;		_memcpy
   768 ;; This function is called by:
   769 ;;		Startup code after reset
   770 ;; This function uses a non-reentrant model
   771 ;;
   772                           
   773                           	psect	text0
   774  001276                     __ptext0:
   775                           	opt stack 0
   776  001276                     _main:
   777                           	opt stack 21
   778                           
   779                           ;main.c: 59: SYSTEM_Initialize();
   780                           
   781                           ;incstack = 0
   782  001276  ECED  F00C         	call	_SYSTEM_Initialize	;wreg free
   783                           
   784                           ;main.c: 111: TX1REG = 'H';
   785  00127A  0E48               	movlw	72
   786  00127C  6EAD               	movwf	4013,c	;volatile
   787                           
   788                           ;main.c: 112: _delay((unsigned long)((10)*(16000000/4000000.0)));
   789  00127E  0E0D               	movlw	13
   790  001280                     u3307:
   791  001280  2EE8               	decfsz	wreg,f,c
   792  001282  D7FE               	goto	u3307
   793  001284  F000               	nop	
   794                           
   795                           ;main.c: 113: TX1REG = 'I';
   796  001286  0E49               	movlw	73
   797  001288  6EAD               	movwf	4013,c	;volatile
   798                           
   799                           ;main.c: 114: _delay((unsigned long)((10)*(16000000/4000000.0)));
   800  00128A  0E0D               	movlw	13
   801  00128C                     u3317:
   802  00128C  2EE8               	decfsz	wreg,f,c
   803  00128E  D7FE               	goto	u3317
   804  001290  F000               	nop	
   805                           
   806                           ;main.c: 115: TX1REG = '\n';
   807  001292  0E0A               	movlw	10
   808  001294  6EAD               	movwf	4013,c	;volatile
   809                           
   810                           ;main.c: 117: bt_packet_t to_send;
   811                           ;main.c: 119: to_send.start = 0x3C;
   812  001296  0E3C               	movlw	60
   813  001298  0101               	movlb	1	; () banked
   814  00129A  6F59               	movwf	main@to_send& (0+255),b
   815                           
   816                           ; BSR set to: 1
   817                           ;main.c: 120: to_send.func = 0x01;
   818  00129C  0E01               	movlw	1
   819  00129E  0101               	movlb	1	; () banked
   820  0012A0  6F5A               	movwf	(main@to_send+1)& (0+255),b
   821                           
   822                           ; BSR set to: 1
   823                           ;main.c: 121: to_send.data1 = 0x00;
   824  0012A2  0E00               	movlw	0
   825  0012A4  0101               	movlb	1	; () banked
   826  0012A6  6F5B               	movwf	(main@to_send+2)& (0+255),b
   827                           
   828                           ; BSR set to: 1
   829                           ;main.c: 122: to_send.data2 = 0x00;
   830  0012A8  0E00               	movlw	0
   831  0012AA  0101               	movlb	1	; () banked
   832  0012AC  6F5C               	movwf	(main@to_send+3)& (0+255),b
   833                           
   834                           ; BSR set to: 1
   835                           ;main.c: 123: to_send.data3 = 0x00;
   836  0012AE  0E00               	movlw	0
   837  0012B0  0101               	movlb	1	; () banked
   838  0012B2  6F5D               	movwf	(main@to_send+4)& (0+255),b
   839                           
   840                           ; BSR set to: 1
   841                           ;main.c: 125: TX1REG = 'T';
   842  0012B4  0E54               	movlw	84
   843  0012B6  6EAD               	movwf	4013,c	;volatile
   844                           
   845                           ; BSR set to: 1
   846                           ;main.c: 126: _delay((unsigned long)((10)*(16000000/4000000.0)));
   847  0012B8  0E0D               	movlw	13
   848  0012BA                     u3327:
   849  0012BA  2EE8               	decfsz	wreg,f,c
   850  0012BC  D7FE               	goto	u3327
   851  0012BE  F000               	nop	
   852                           
   853                           ;main.c: 127: TX1REG = 'R';
   854  0012C0  0E52               	movlw	82
   855  0012C2  6EAD               	movwf	4013,c	;volatile
   856                           
   857                           ;main.c: 128: _delay((unsigned long)((10)*(16000000/4000000.0)));
   858  0012C4  0E0D               	movlw	13
   859  0012C6                     u3337:
   860  0012C6  2EE8               	decfsz	wreg,f,c
   861  0012C8  D7FE               	goto	u3337
   862  0012CA  F000               	nop	
   863                           
   864                           ;main.c: 129: TX1REG = '\n';
   865  0012CC  0E0A               	movlw	10
   866  0012CE  6EAD               	movwf	4013,c	;volatile
   867                           
   868                           ;main.c: 131: PIU_bt_transmit_packet(to_send);
   869  0012D0  EE21  F059         	lfsr	2,main@to_send
   870  0012D4  EE00  F039         	lfsr	0,PIU_bt_transmit_packet@packet
   871  0012D8  0E05               	movlw	5
   872  0012DA                     u3021:
   873  0012DA  CFDB FFEB          	movff	plusw2,plusw0
   874  0012DE  06E8               	decf	wreg,f,c
   875  0012E0  E2FC               	bc	u3021
   876  0012E2  EC18  F00E         	call	_PIU_bt_transmit_packet	;wreg free
   877  0012E6                     l4575:
   878                           
   879                           ;main.c: 149: if ((eusart2RxCount)) {
   880  0012E6  5012               	movf	_eusart2RxCount,w,c	;volatile
   881  0012E8  B4D8               	btfsc	status,2,c
   882  0012EA  D7FD               	goto	l4575
   883                           
   884                           ;main.c: 151: for (uint8_t i = 0; i < 15; i++) {
   885  0012EC  0E00               	movlw	0
   886  0012EE  0101               	movlb	1	; () banked
   887  0012F0  6F58               	movwf	main@i& (0+255),b
   888  0012F2                     l4579:
   889                           
   890                           ; BSR set to: 1
   891  0012F2  0E0E               	movlw	14
   892  0012F4  0101               	movlb	1	; () banked
   893  0012F6  6558               	cpfsgt	main@i& (0+255),b
   894  0012F8  D001               	goto	l4583
   895  0012FA  D01C               	goto	l4595
   896  0012FC                     l4583:
   897                           
   898                           ; BSR set to: 1
   899                           ;main.c: 152: read_byte = EUSART1_Read();
   900  0012FC  EC59  F00D         	call	_EUSART1_Read	;wreg free
   901  001300  0101               	movlb	1	; () banked
   902  001302  6F57               	movwf	main@read_byte& (0+255),b
   903                           
   904                           ; BSR set to: 1
   905                           ;main.c: 153: char_buff[i] = read_byte;
   906  001304  0101               	movlb	1	; () banked
   907  001306  5158               	movf	main@i& (0+255),w,b
   908  001308  0D01               	mullw	1
   909  00130A  0E48               	movlw	low main@char_buff
   910  00130C  24F3               	addwf	prodl,w,c
   911  00130E  6ED9               	movwf	fsr2l,c
   912  001310  0E01               	movlw	high main@char_buff
   913  001312  20F4               	addwfc	prodh,w,c
   914  001314  6EDA               	movwf	fsr2h,c
   915  001316  C157  FFDF         	movff	main@read_byte,indf2
   916                           
   917                           ; BSR set to: 1
   918                           ;main.c: 155: if (read_byte == '\n' || read_byte == '\0') {
   919  00131A  0E0A               	movlw	10
   920  00131C  0101               	movlb	1	; () banked
   921  00131E  1957               	xorwf	main@read_byte& (0+255),w,b
   922  001320  B4D8               	btfsc	status,2,c
   923  001322  D008               	goto	l4595
   924                           
   925                           ; BSR set to: 1
   926  001324  0101               	movlb	1	; () banked
   927  001326  5157               	movf	main@read_byte& (0+255),w,b
   928  001328  0101               	movlb	1	; () banked
   929  00132A  B4D8               	btfsc	status,2,c
   930  00132C  D003               	goto	l4595
   931                           
   932                           ; BSR set to: 1
   933                           
   934                           ; BSR set to: 1
   935                           
   936                           ; BSR set to: 1
   937                           ;main.c: 156: break;
   938  00132E  0101               	movlb	1	; () banked
   939  001330  2B58               	incf	main@i& (0+255),f,b
   940  001332  D7DF               	goto	l4579
   941  001334                     l4595:
   942                           
   943                           ; BSR set to: 1
   944                           ;main.c: 157: }
   945                           ;main.c: 159: }
   946                           ;main.c: 161: TX1REG = 'A';
   947  001334  0E41               	movlw	65
   948  001336  6EAD               	movwf	4013,c	;volatile
   949                           
   950                           ; BSR set to: 1
   951                           ;main.c: 162: _delay((unsigned long)((10)*(16000000/4000000.0)));
   952  001338  0E0D               	movlw	13
   953  00133A                     u3347:
   954  00133A  2EE8               	decfsz	wreg,f,c
   955  00133C  D7FE               	goto	u3347
   956  00133E  F000               	nop	
   957                           
   958                           ;main.c: 163: TX1REG = 'T';
   959  001340  0E54               	movlw	84
   960  001342  6EAD               	movwf	4013,c	;volatile
   961                           
   962                           ;main.c: 164: _delay((unsigned long)((10)*(16000000/4000000.0)));
   963  001344  0E0D               	movlw	13
   964  001346                     u3357:
   965  001346  2EE8               	decfsz	wreg,f,c
   966  001348  D7FE               	goto	u3357
   967  00134A  F000               	nop	
   968                           
   969                           ;main.c: 165: TX1REG = '\n';
   970  00134C  0E0A               	movlw	10
   971  00134E  6EAD               	movwf	4013,c	;volatile
   972                           
   973                           ;main.c: 166: memcpy(char_buff, '\0', sizeof(char_buff));
   974  001350  0E48               	movlw	low main@char_buff
   975  001352  6E39               	movwf	memcpy@d1,c
   976  001354  0E01               	movlw	high main@char_buff
   977  001356  6E3A               	movwf	memcpy@d1+1,c
   978  001358  0E00               	movlw	0
   979  00135A  6E3B               	movwf	memcpy@s1,c
   980  00135C  0E00               	movlw	0
   981  00135E  6E3C               	movwf	memcpy@s1+1,c
   982  001360  0E00               	movlw	0
   983  001362  6E3D               	movwf	memcpy@s1+2,c
   984  001364  0E00               	movlw	0
   985  001366  6E3F               	movwf	memcpy@n+1,c
   986  001368  0E0F               	movlw	15
   987  00136A  6E3E               	movwf	memcpy@n,c
   988  00136C  EC2C  F00C         	call	_memcpy	;wreg free
   989  001370  D7BA               	goto	l4575
   990  001372                     __end_of_main:
   991                           	opt stack 0
   992                           tblptru	equ	0xFF8
   993                           tblptrh	equ	0xFF7
   994                           tblptrl	equ	0xFF6
   995                           tablat	equ	0xFF5
   996                           prodh	equ	0xFF4
   997                           prodl	equ	0xFF3
   998                           postinc0	equ	0xFEE
   999                           plusw0	equ	0xFEB
  1000                           wreg	equ	0xFE8
  1001                           postdec1	equ	0xFE5
  1002                           fsr1l	equ	0xFE1
  1003                           indf2	equ	0xFDF
  1004                           plusw2	equ	0xFDB
  1005                           fsr2h	equ	0xFDA
  1006                           fsr2l	equ	0xFD9
  1007                           status	equ	0xFD8
  1008                           
  1009 ;; *************** function _memcpy *****************
  1010 ;; Defined at:
  1011 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\memcpy.c"
  1012 ;; Parameters:    Size  Location     Type
  1013 ;;  d1              2   24[COMRAM] PTR void 
  1014 ;;		 -> main@char_buff(15), piu_buff(13), 
  1015 ;;  s1              3   26[COMRAM] PTR const void 
  1016 ;;		 -> ROM(65535), 
  1017 ;;  n               2   29[COMRAM] unsigned int 
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;  s               3    0[BANK0 ] PTR const unsigned char 
  1020 ;;		 -> ROM(65535), 
  1021 ;;  d               2    3[BANK0 ] PTR unsigned char 
  1022 ;;		 -> main@char_buff(15), piu_buff(13), 
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  2   24[COMRAM] PTR void 
  1025 ;; Registers used:
  1026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1032 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1033 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1035 ;;      Totals:         7       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1036 ;;Total ram usage:       12 bytes
  1037 ;; Hardware stack levels used:    1
  1038 ;; Hardware stack levels required when called:    7
  1039 ;; This function calls:
  1040 ;;		Nothing
  1041 ;; This function is called by:
  1042 ;;		_main
  1043 ;;		_PIU_bt_clear_data_buff
  1044 ;;		_PIU_bt_read_cmnd_to_buffer
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           	psect	text1
  1049  001858                     __ptext1:
  1050                           	opt stack 0
  1051  001858                     _memcpy:
  1052                           	opt stack 23
  1053                           
  1054                           ;incstack = 0
  1055  001858  C03B  F0EB         	movff	memcpy@s1,memcpy@s
  1056  00185C  C03C  F0EC         	movff	memcpy@s1+1,memcpy@s+1
  1057  001860  C03D  F0ED         	movff	memcpy@s1+2,memcpy@s+2
  1058  001864  C039  F0EE         	movff	memcpy@d1,memcpy@d
  1059  001868  C03A  F0EF         	movff	memcpy@d1+1,memcpy@d+1
  1060  00186C  D017               	goto	l4413
  1061  00186E                     l4407:
  1062  00186E  C0EB  FFF6         	movff	memcpy@s,tblptrl
  1063  001872  C0EC  FFF7         	movff	memcpy@s+1,tblptrh
  1064  001876  C0ED  FFF8         	movff	memcpy@s+2,tblptru
  1065  00187A  C0EE  FFD9         	movff	memcpy@d,fsr2l
  1066  00187E  C0EF  FFDA         	movff	memcpy@d+1,fsr2h
  1067  001882  0008               	tblrd		*
  1068  001884  CFF5 FFDF          	movff	tablat,indf2
  1069  001888  0100               	movlb	0	; () banked
  1070  00188A  0E01               	movlw	1
  1071  00188C  27EB               	addwf	memcpy@s& (0+255),f,b
  1072  00188E  0E00               	movlw	0
  1073  001890  23EC               	addwfc	(memcpy@s+1)& (0+255),f,b
  1074  001892  0E00               	movlw	0
  1075  001894  23ED               	addwfc	(memcpy@s+2)& (0+255),f,b
  1076                           
  1077                           ; BSR set to: 0
  1078  001896  0100               	movlb	0	; () banked
  1079  001898  4BEE               	infsnz	memcpy@d& (0+255),f,b
  1080  00189A  2BEF               	incf	(memcpy@d+1)& (0+255),f,b
  1081  00189C                     l4413:
  1082  00189C  063E               	decf	memcpy@n,f,c
  1083  00189E  A0D8               	btfss	status,0,c
  1084  0018A0  063F               	decf	memcpy@n+1,f,c
  1085  0018A2  283E               	incf	memcpy@n,w,c
  1086  0018A4  E1E4               	bnz	l4407
  1087  0018A6  283F               	incf	memcpy@n+1,w,c
  1088  0018A8  B4D8               	btfsc	status,2,c
  1089  0018AA  0012               	return	
  1090  0018AC  D7E0               	goto	l4407
  1091  0018AE                     __end_of_memcpy:
  1092                           	opt stack 0
  1093                           tblptru	equ	0xFF8
  1094                           tblptrh	equ	0xFF7
  1095                           tblptrl	equ	0xFF6
  1096                           tablat	equ	0xFF5
  1097                           prodh	equ	0xFF4
  1098                           prodl	equ	0xFF3
  1099                           postinc0	equ	0xFEE
  1100                           plusw0	equ	0xFEB
  1101                           wreg	equ	0xFE8
  1102                           postdec1	equ	0xFE5
  1103                           fsr1l	equ	0xFE1
  1104                           indf2	equ	0xFDF
  1105                           plusw2	equ	0xFDB
  1106                           fsr2h	equ	0xFDA
  1107                           fsr2l	equ	0xFD9
  1108                           status	equ	0xFD8
  1109                           
  1110 ;; *************** function _SYSTEM_Initialize *****************
  1111 ;; Defined at:
  1112 ;;		line 112 in file "mcc_generated_files/mcc.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;		None
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;		None
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  1    wreg      void 
  1119 ;; Registers used:
  1120 ;;		wreg, status,2, status,0, cstack
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1130 ;;Total ram usage:        0 bytes
  1131 ;; Hardware stack levels used:    1
  1132 ;; Hardware stack levels required when called:    9
  1133 ;; This function calls:
  1134 ;;		_CCP4_Initialize
  1135 ;;		_EUSART1_Initialize
  1136 ;;		_EUSART2_Initialize
  1137 ;;		_I2C2_Initialize
  1138 ;;		_INTERRUPT_Initialize
  1139 ;;		_OSCILLATOR_Initialize
  1140 ;;		_PIN_MANAGER_Initialize
  1141 ;;		_PWM5_Initialize
  1142 ;;		_SPI1_Initialize
  1143 ;;		_TMR1_Initialize
  1144 ;;		_TMR2_Initialize
  1145 ;;		_TMR3_Initialize
  1146 ;;		_TMR4_Initialize
  1147 ;; This function is called by:
  1148 ;;		_main
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152                           	psect	text2
  1153  0019DA                     __ptext2:
  1154                           	opt stack 0
  1155  0019DA                     _SYSTEM_Initialize:
  1156                           	opt stack 21
  1157                           
  1158                           ;mcc.c: 115: INTERRUPT_Initialize();
  1159                           
  1160                           ;incstack = 0
  1161  0019DA  ECB5  F00E         	call	_INTERRUPT_Initialize	;wreg free
  1162                           
  1163                           ;mcc.c: 116: PIN_MANAGER_Initialize();
  1164  0019DE  EC08  F00D         	call	_PIN_MANAGER_Initialize	;wreg free
  1165                           
  1166                           ;mcc.c: 117: OSCILLATOR_Initialize();
  1167  0019E2  ECC6  F00E         	call	_OSCILLATOR_Initialize	;wreg free
  1168                           
  1169                           ;mcc.c: 118: SPI1_Initialize();
  1170  0019E6  ECBF  F00E         	call	_SPI1_Initialize	;wreg free
  1171                           
  1172                           ;mcc.c: 119: I2C2_Initialize();
  1173  0019EA  EC78  F00C         	call	_I2C2_Initialize	;wreg free
  1174                           
  1175                           ;mcc.c: 120: CCP4_Initialize();
  1176  0019EE  EC60  F00E         	call	_CCP4_Initialize	;wreg free
  1177                           
  1178                           ;mcc.c: 121: TMR3_Initialize();
  1179  0019F2  ECD6  F00D         	call	_TMR3_Initialize	;wreg free
  1180                           
  1181                           ;mcc.c: 122: TMR4_Initialize();
  1182  0019F6  EC7D  F00E         	call	_TMR4_Initialize	;wreg free
  1183                           
  1184                           ;mcc.c: 123: PWM5_Initialize();
  1185  0019FA  EC51  F00E         	call	_PWM5_Initialize	;wreg free
  1186                           
  1187                           ;mcc.c: 124: TMR2_Initialize();
  1188  0019FE  ECAB  F00E         	call	_TMR2_Initialize	;wreg free
  1189                           
  1190                           ;mcc.c: 125: TMR1_Initialize();
  1191  001A02  EC6F  F00E         	call	_TMR1_Initialize	;wreg free
  1192                           
  1193                           ;mcc.c: 126: EUSART1_Initialize();
  1194  001A06  EC3E  F00D         	call	_EUSART1_Initialize	;wreg free
  1195                           
  1196                           ;mcc.c: 127: EUSART2_Initialize();
  1197  001A0A  EC23  F00D         	call	_EUSART2_Initialize	;wreg free
  1198  001A0E  0012               	return		;funcret
  1199  001A10                     __end_of_SYSTEM_Initialize:
  1200                           	opt stack 0
  1201                           tblptru	equ	0xFF8
  1202                           tblptrh	equ	0xFF7
  1203                           tblptrl	equ	0xFF6
  1204                           tablat	equ	0xFF5
  1205                           prodh	equ	0xFF4
  1206                           prodl	equ	0xFF3
  1207                           postinc0	equ	0xFEE
  1208                           plusw0	equ	0xFEB
  1209                           wreg	equ	0xFE8
  1210                           postdec1	equ	0xFE5
  1211                           fsr1l	equ	0xFE1
  1212                           indf2	equ	0xFDF
  1213                           plusw2	equ	0xFDB
  1214                           fsr2h	equ	0xFDA
  1215                           fsr2l	equ	0xFD9
  1216                           status	equ	0xFD8
  1217                           
  1218 ;; *************** function _TMR4_Initialize *****************
  1219 ;; Defined at:
  1220 ;;		line 58 in file "mcc_generated_files/tmr4.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;		None
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;		None
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  1    wreg      void 
  1227 ;; Registers used:
  1228 ;;		wreg, status,2, cstack
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1238 ;;Total ram usage:        0 bytes
  1239 ;; Hardware stack levels used:    1
  1240 ;; Hardware stack levels required when called:    8
  1241 ;; This function calls:
  1242 ;;		_TMR4_StartTimer
  1243 ;; This function is called by:
  1244 ;;		_SYSTEM_Initialize
  1245 ;; This function uses a non-reentrant model
  1246 ;;
  1247                           
  1248                           	psect	text3
  1249  001CFA                     __ptext3:
  1250                           	opt stack 0
  1251  001CFA                     _TMR4_Initialize:
  1252                           	opt stack 21
  1253                           
  1254                           ;tmr4.c: 63: T4CON = 0x00;
  1255                           
  1256                           ;incstack = 0
  1257  001CFA  0E00               	movlw	0
  1258  001CFC  010F               	movlb	15	; () banked
  1259  001CFE  6F51               	movwf	81,b	;volatile
  1260                           
  1261                           ;tmr4.c: 66: PR4 = 0x67;
  1262  001D00  0E67               	movlw	103
  1263  001D02  010F               	movlb	15	; () banked
  1264  001D04  6F52               	movwf	82,b	;volatile
  1265                           
  1266                           ;tmr4.c: 69: TMR4 = 0x00;
  1267  001D06  0E00               	movlw	0
  1268  001D08  010F               	movlb	15	; () banked
  1269  001D0A  6F53               	movwf	83,b	;volatile
  1270                           
  1271                           ; BSR set to: 15
  1272                           ;tmr4.c: 72: PIR5bits.TMR4IF = 0;
  1273  001D0C  907E               	bcf	3966,0,c	;volatile
  1274                           
  1275                           ; BSR set to: 15
  1276                           ;tmr4.c: 75: TMR4_StartTimer();
  1277  001D0E  ECDD  F00E         	call	_TMR4_StartTimer	;wreg free
  1278  001D12  0012               	return		;funcret
  1279  001D14                     __end_of_TMR4_Initialize:
  1280                           	opt stack 0
  1281                           tblptru	equ	0xFF8
  1282                           tblptrh	equ	0xFF7
  1283                           tblptrl	equ	0xFF6
  1284                           tablat	equ	0xFF5
  1285                           prodh	equ	0xFF4
  1286                           prodl	equ	0xFF3
  1287                           postinc0	equ	0xFEE
  1288                           plusw0	equ	0xFEB
  1289                           wreg	equ	0xFE8
  1290                           postdec1	equ	0xFE5
  1291                           fsr1l	equ	0xFE1
  1292                           indf2	equ	0xFDF
  1293                           plusw2	equ	0xFDB
  1294                           fsr2h	equ	0xFDA
  1295                           fsr2l	equ	0xFD9
  1296                           status	equ	0xFD8
  1297                           
  1298 ;; *************** function _TMR4_StartTimer *****************
  1299 ;; Defined at:
  1300 ;;		line 78 in file "mcc_generated_files/tmr4.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;		None
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;		None
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  1    wreg      void 
  1307 ;; Registers used:
  1308 ;;		None
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1318 ;;Total ram usage:        0 bytes
  1319 ;; Hardware stack levels used:    1
  1320 ;; Hardware stack levels required when called:    7
  1321 ;; This function calls:
  1322 ;;		Nothing
  1323 ;; This function is called by:
  1324 ;;		_TMR4_Initialize
  1325 ;; This function uses a non-reentrant model
  1326 ;;
  1327                           
  1328                           	psect	text4
  1329  001DBA                     __ptext4:
  1330                           	opt stack 0
  1331  001DBA                     _TMR4_StartTimer:
  1332                           	opt stack 21
  1333                           
  1334                           ;tmr4.c: 81: T4CONbits.TMR4ON = 1;
  1335                           
  1336                           ;incstack = 0
  1337  001DBA  010F               	movlb	15	; () banked
  1338  001DBC  8551               	bsf	81,2,b	;volatile
  1339                           
  1340                           ; BSR set to: 15
  1341  001DBE  0012               	return		;funcret
  1342  001DC0                     __end_of_TMR4_StartTimer:
  1343                           	opt stack 0
  1344                           tblptru	equ	0xFF8
  1345                           tblptrh	equ	0xFF7
  1346                           tblptrl	equ	0xFF6
  1347                           tablat	equ	0xFF5
  1348                           prodh	equ	0xFF4
  1349                           prodl	equ	0xFF3
  1350                           postinc0	equ	0xFEE
  1351                           plusw0	equ	0xFEB
  1352                           wreg	equ	0xFE8
  1353                           postdec1	equ	0xFE5
  1354                           fsr1l	equ	0xFE1
  1355                           indf2	equ	0xFDF
  1356                           plusw2	equ	0xFDB
  1357                           fsr2h	equ	0xFDA
  1358                           fsr2l	equ	0xFD9
  1359                           status	equ	0xFD8
  1360                           
  1361 ;; *************** function _TMR3_Initialize *****************
  1362 ;; Defined at:
  1363 ;;		line 63 in file "mcc_generated_files/tmr3.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;		None
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;		None
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1    wreg      void 
  1370 ;; Registers used:
  1371 ;;		wreg, status,2, status,0, cstack
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1381 ;;Total ram usage:        0 bytes
  1382 ;; Hardware stack levels used:    1
  1383 ;; Hardware stack levels required when called:    8
  1384 ;; This function calls:
  1385 ;;		_TMR3_SetInterruptHandler
  1386 ;;		_TMR3_StartTimer
  1387 ;; This function is called by:
  1388 ;;		_SYSTEM_Initialize
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392                           	psect	text5
  1393  001BAC                     __ptext5:
  1394                           	opt stack 0
  1395  001BAC                     _TMR3_Initialize:
  1396                           	opt stack 21
  1397                           
  1398                           ;tmr3.c: 68: T3CON = 0x00;
  1399                           
  1400                           ; BSR set to: 15
  1401                           ;incstack = 0
  1402  001BAC  0E00               	movlw	0
  1403  001BAE  6EB1               	movwf	4017,c	;volatile
  1404                           
  1405                           ;tmr3.c: 71: T3GCON = 0x00;
  1406  001BB0  0E00               	movlw	0
  1407  001BB2  6EB4               	movwf	4020,c	;volatile
  1408                           
  1409                           ;tmr3.c: 74: TMR3H = 0xFF;
  1410  001BB4  68B3               	setf	4019,c	;volatile
  1411                           
  1412                           ;tmr3.c: 77: TMR3L = 0x98;
  1413  001BB6  0E98               	movlw	152
  1414  001BB8  6EB2               	movwf	4018,c	;volatile
  1415                           
  1416                           ;tmr3.c: 80: timer3ReloadVal=TMR3;
  1417  001BBA  CFB2 F040          	movff	4018,_timer3ReloadVal	;volatile
  1418  001BBE  CFB3 F041          	movff	4019,_timer3ReloadVal+1	;volatile
  1419                           
  1420                           ;tmr3.c: 83: PIR2bits.TMR3IF = 0;
  1421  001BC2  92A1               	bcf	4001,1,c	;volatile
  1422                           
  1423                           ;tmr3.c: 86: PIE2bits.TMR3IE = 1;
  1424  001BC4  82A0               	bsf	4000,1,c	;volatile
  1425                           
  1426                           ;tmr3.c: 89: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
  1427  001BC6  0ECC               	movlw	low _TMR3_DefaultInterruptHandler
  1428  001BC8  6E39               	movwf	TMR3_SetInterruptHandler@InterruptHandler,c
  1429  001BCA  0E1D               	movlw	high _TMR3_DefaultInterruptHandler
  1430  001BCC  6E3A               	movwf	TMR3_SetInterruptHandler@InterruptHandler+1,c
  1431  001BCE  ECD3  F00E         	call	_TMR3_SetInterruptHandler	;wreg free
  1432                           
  1433                           ;tmr3.c: 92: TMR3_StartTimer();
  1434  001BD2  ECE0  F00E         	call	_TMR3_StartTimer	;wreg free
  1435  001BD6  0012               	return		;funcret
  1436  001BD8                     __end_of_TMR3_Initialize:
  1437                           	opt stack 0
  1438                           tblptru	equ	0xFF8
  1439                           tblptrh	equ	0xFF7
  1440                           tblptrl	equ	0xFF6
  1441                           tablat	equ	0xFF5
  1442                           prodh	equ	0xFF4
  1443                           prodl	equ	0xFF3
  1444                           postinc0	equ	0xFEE
  1445                           plusw0	equ	0xFEB
  1446                           wreg	equ	0xFE8
  1447                           postdec1	equ	0xFE5
  1448                           fsr1l	equ	0xFE1
  1449                           indf2	equ	0xFDF
  1450                           plusw2	equ	0xFDB
  1451                           fsr2h	equ	0xFDA
  1452                           fsr2l	equ	0xFD9
  1453                           status	equ	0xFD8
  1454                           
  1455 ;; *************** function _TMR3_StartTimer *****************
  1456 ;; Defined at:
  1457 ;;		line 95 in file "mcc_generated_files/tmr3.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;		None
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;		None
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  1    wreg      void 
  1464 ;; Registers used:
  1465 ;;		None
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1475 ;;Total ram usage:        0 bytes
  1476 ;; Hardware stack levels used:    1
  1477 ;; Hardware stack levels required when called:    7
  1478 ;; This function calls:
  1479 ;;		Nothing
  1480 ;; This function is called by:
  1481 ;;		_TMR3_Initialize
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           
  1485                           	psect	text6
  1486  001DC0                     __ptext6:
  1487                           	opt stack 0
  1488  001DC0                     _TMR3_StartTimer:
  1489                           	opt stack 21
  1490                           
  1491                           ;tmr3.c: 98: T3CONbits.TMR3ON = 1;
  1492                           
  1493                           ;incstack = 0
  1494  001DC0  80B1               	bsf	4017,0,c	;volatile
  1495  001DC2  0012               	return		;funcret
  1496  001DC4                     __end_of_TMR3_StartTimer:
  1497                           	opt stack 0
  1498                           tblptru	equ	0xFF8
  1499                           tblptrh	equ	0xFF7
  1500                           tblptrl	equ	0xFF6
  1501                           tablat	equ	0xFF5
  1502                           prodh	equ	0xFF4
  1503                           prodl	equ	0xFF3
  1504                           postinc0	equ	0xFEE
  1505                           plusw0	equ	0xFEB
  1506                           wreg	equ	0xFE8
  1507                           postdec1	equ	0xFE5
  1508                           fsr1l	equ	0xFE1
  1509                           indf2	equ	0xFDF
  1510                           plusw2	equ	0xFDB
  1511                           fsr2h	equ	0xFDA
  1512                           fsr2l	equ	0xFD9
  1513                           status	equ	0xFD8
  1514                           
  1515 ;; *************** function _TMR3_SetInterruptHandler *****************
  1516 ;; Defined at:
  1517 ;;		line 191 in file "mcc_generated_files/tmr3.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;  InterruptHan    2   24[COMRAM] PTR void 
  1520 ;;		 -> TMR3_DefaultInterruptHandler(1), 
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;		None
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  1    wreg      void 
  1525 ;; Registers used:
  1526 ;;		wreg, status,2, status,0
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1532 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1535 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1536 ;;Total ram usage:        2 bytes
  1537 ;; Hardware stack levels used:    1
  1538 ;; Hardware stack levels required when called:    7
  1539 ;; This function calls:
  1540 ;;		Nothing
  1541 ;; This function is called by:
  1542 ;;		_TMR3_Initialize
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           	psect	text7
  1547  001DA6                     __ptext7:
  1548                           	opt stack 0
  1549  001DA6                     _TMR3_SetInterruptHandler:
  1550                           	opt stack 21
  1551                           
  1552                           ;tmr3.c: 192: TMR3_InterruptHandler = InterruptHandler;
  1553                           
  1554                           ;incstack = 0
  1555  001DA6  C039  F0E5         	movff	TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
  1556  001DAA  C03A  F0E6         	movff	TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
  1557  001DAE  0012               	return		;funcret
  1558  001DB0                     __end_of_TMR3_SetInterruptHandler:
  1559                           	opt stack 0
  1560                           tblptru	equ	0xFF8
  1561                           tblptrh	equ	0xFF7
  1562                           tblptrl	equ	0xFF6
  1563                           tablat	equ	0xFF5
  1564                           prodh	equ	0xFF4
  1565                           prodl	equ	0xFF3
  1566                           postinc0	equ	0xFEE
  1567                           plusw0	equ	0xFEB
  1568                           wreg	equ	0xFE8
  1569                           postdec1	equ	0xFE5
  1570                           fsr1l	equ	0xFE1
  1571                           indf2	equ	0xFDF
  1572                           plusw2	equ	0xFDB
  1573                           fsr2h	equ	0xFDA
  1574                           fsr2l	equ	0xFD9
  1575                           status	equ	0xFD8
  1576                           
  1577 ;; *************** function _TMR2_Initialize *****************
  1578 ;; Defined at:
  1579 ;;		line 58 in file "mcc_generated_files/tmr2.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;		None
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;		None
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  1    wreg      void 
  1586 ;; Registers used:
  1587 ;;		wreg, status,2, cstack
  1588 ;; Tracked objects:
  1589 ;;		On entry : 0/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1597 ;;Total ram usage:        0 bytes
  1598 ;; Hardware stack levels used:    1
  1599 ;; Hardware stack levels required when called:    8
  1600 ;; This function calls:
  1601 ;;		_TMR2_StartTimer
  1602 ;; This function is called by:
  1603 ;;		_SYSTEM_Initialize
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           	psect	text8
  1608  001D56                     __ptext8:
  1609                           	opt stack 0
  1610  001D56                     _TMR2_Initialize:
  1611                           	opt stack 21
  1612                           
  1613                           ;tmr2.c: 63: T2CON = 0x02;
  1614                           
  1615                           ;incstack = 0
  1616  001D56  0E02               	movlw	2
  1617  001D58  6EBA               	movwf	4026,c	;volatile
  1618                           
  1619                           ;tmr2.c: 66: PR2 = 0x63;
  1620  001D5A  0E63               	movlw	99
  1621  001D5C  6EBB               	movwf	4027,c	;volatile
  1622                           
  1623                           ;tmr2.c: 69: TMR2 = 0x00;
  1624  001D5E  0E00               	movlw	0
  1625  001D60  6EBC               	movwf	4028,c	;volatile
  1626                           
  1627                           ;tmr2.c: 72: PIR1bits.TMR2IF = 0;
  1628  001D62  929E               	bcf	3998,1,c	;volatile
  1629                           
  1630                           ;tmr2.c: 75: TMR2_StartTimer();
  1631  001D64  ECE2  F00E         	call	_TMR2_StartTimer	;wreg free
  1632  001D68  0012               	return		;funcret
  1633  001D6A                     __end_of_TMR2_Initialize:
  1634                           	opt stack 0
  1635                           tblptru	equ	0xFF8
  1636                           tblptrh	equ	0xFF7
  1637                           tblptrl	equ	0xFF6
  1638                           tablat	equ	0xFF5
  1639                           prodh	equ	0xFF4
  1640                           prodl	equ	0xFF3
  1641                           postinc0	equ	0xFEE
  1642                           plusw0	equ	0xFEB
  1643                           wreg	equ	0xFE8
  1644                           postdec1	equ	0xFE5
  1645                           fsr1l	equ	0xFE1
  1646                           indf2	equ	0xFDF
  1647                           plusw2	equ	0xFDB
  1648                           fsr2h	equ	0xFDA
  1649                           fsr2l	equ	0xFD9
  1650                           status	equ	0xFD8
  1651                           
  1652 ;; *************** function _TMR2_StartTimer *****************
  1653 ;; Defined at:
  1654 ;;		line 78 in file "mcc_generated_files/tmr2.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;		None
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;		None
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      void 
  1661 ;; Registers used:
  1662 ;;		None
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1672 ;;Total ram usage:        0 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:    7
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		_TMR2_Initialize
  1679 ;;		_modulate15Cycles
  1680 ;;		_modulate30Cycles
  1681 ;;		_modulate_us
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           	psect	text9
  1686  001DC4                     __ptext9:
  1687                           	opt stack 0
  1688  001DC4                     _TMR2_StartTimer:
  1689                           	opt stack 21
  1690                           
  1691                           ;tmr2.c: 81: T2CONbits.TMR2ON = 1;
  1692                           
  1693                           ;incstack = 0
  1694  001DC4  84BA               	bsf	4026,2,c	;volatile
  1695  001DC6  0012               	return		;funcret
  1696  001DC8                     __end_of_TMR2_StartTimer:
  1697                           	opt stack 0
  1698                           tblptru	equ	0xFF8
  1699                           tblptrh	equ	0xFF7
  1700                           tblptrl	equ	0xFF6
  1701                           tablat	equ	0xFF5
  1702                           prodh	equ	0xFF4
  1703                           prodl	equ	0xFF3
  1704                           postinc0	equ	0xFEE
  1705                           plusw0	equ	0xFEB
  1706                           wreg	equ	0xFE8
  1707                           postdec1	equ	0xFE5
  1708                           fsr1l	equ	0xFE1
  1709                           indf2	equ	0xFDF
  1710                           plusw2	equ	0xFDB
  1711                           fsr2h	equ	0xFDA
  1712                           fsr2l	equ	0xFD9
  1713                           status	equ	0xFD8
  1714                           
  1715 ;; *************** function _TMR1_Initialize *****************
  1716 ;; Defined at:
  1717 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;		None
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;		None
  1722 ;; Return value:  Size  Location     Type
  1723 ;;                  1    wreg      void 
  1724 ;; Registers used:
  1725 ;;		wreg, status,2, cstack
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1735 ;;Total ram usage:        0 bytes
  1736 ;; Hardware stack levels used:    1
  1737 ;; Hardware stack levels required when called:    8
  1738 ;; This function calls:
  1739 ;;		_TMR1_StartTimer
  1740 ;; This function is called by:
  1741 ;;		_SYSTEM_Initialize
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745                           	psect	text10
  1746  001CDE                     __ptext10:
  1747                           	opt stack 0
  1748  001CDE                     _TMR1_Initialize:
  1749                           	opt stack 21
  1750                           
  1751                           ;tmr1.c: 68: T1CON = 0x00;
  1752                           
  1753                           ;incstack = 0
  1754  001CDE  0E00               	movlw	0
  1755  001CE0  6ECD               	movwf	4045,c	;volatile
  1756                           
  1757                           ;tmr1.c: 71: T1GCON = 0x00;
  1758  001CE2  0E00               	movlw	0
  1759  001CE4  6ECC               	movwf	4044,c	;volatile
  1760                           
  1761                           ;tmr1.c: 74: TMR1H = 0xFF;
  1762  001CE6  68CF               	setf	4047,c	;volatile
  1763                           
  1764                           ;tmr1.c: 77: TMR1L = 0xFF;
  1765  001CE8  68CE               	setf	4046,c	;volatile
  1766                           
  1767                           ;tmr1.c: 80: timer1ReloadVal=TMR1;
  1768  001CEA  CFCE F0E7          	movff	4046,_timer1ReloadVal	;volatile
  1769  001CEE  CFCF F0E8          	movff	4047,_timer1ReloadVal+1	;volatile
  1770                           
  1771                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
  1772  001CF2  909E               	bcf	3998,0,c	;volatile
  1773                           
  1774                           ;tmr1.c: 86: TMR1_StartTimer();
  1775  001CF4  ECE4  F00E         	call	_TMR1_StartTimer	;wreg free
  1776  001CF8  0012               	return		;funcret
  1777  001CFA                     __end_of_TMR1_Initialize:
  1778                           	opt stack 0
  1779                           tblptru	equ	0xFF8
  1780                           tblptrh	equ	0xFF7
  1781                           tblptrl	equ	0xFF6
  1782                           tablat	equ	0xFF5
  1783                           prodh	equ	0xFF4
  1784                           prodl	equ	0xFF3
  1785                           postinc0	equ	0xFEE
  1786                           plusw0	equ	0xFEB
  1787                           wreg	equ	0xFE8
  1788                           postdec1	equ	0xFE5
  1789                           fsr1l	equ	0xFE1
  1790                           indf2	equ	0xFDF
  1791                           plusw2	equ	0xFDB
  1792                           fsr2h	equ	0xFDA
  1793                           fsr2l	equ	0xFD9
  1794                           status	equ	0xFD8
  1795                           
  1796 ;; *************** function _TMR1_StartTimer *****************
  1797 ;; Defined at:
  1798 ;;		line 89 in file "mcc_generated_files/tmr1.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;		None
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;		None
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  1    wreg      void 
  1805 ;; Registers used:
  1806 ;;		None
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1816 ;;Total ram usage:        0 bytes
  1817 ;; Hardware stack levels used:    1
  1818 ;; Hardware stack levels required when called:    7
  1819 ;; This function calls:
  1820 ;;		Nothing
  1821 ;; This function is called by:
  1822 ;;		_TMR1_Initialize
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826                           	psect	text11
  1827  001DC8                     __ptext11:
  1828                           	opt stack 0
  1829  001DC8                     _TMR1_StartTimer:
  1830                           	opt stack 21
  1831                           
  1832                           ;tmr1.c: 92: T1CONbits.TMR1ON = 1;
  1833                           
  1834                           ;incstack = 0
  1835  001DC8  80CD               	bsf	4045,0,c	;volatile
  1836  001DCA  0012               	return		;funcret
  1837  001DCC                     __end_of_TMR1_StartTimer:
  1838                           	opt stack 0
  1839                           tblptru	equ	0xFF8
  1840                           tblptrh	equ	0xFF7
  1841                           tblptrl	equ	0xFF6
  1842                           tablat	equ	0xFF5
  1843                           prodh	equ	0xFF4
  1844                           prodl	equ	0xFF3
  1845                           postinc0	equ	0xFEE
  1846                           plusw0	equ	0xFEB
  1847                           wreg	equ	0xFE8
  1848                           postdec1	equ	0xFE5
  1849                           fsr1l	equ	0xFE1
  1850                           indf2	equ	0xFDF
  1851                           plusw2	equ	0xFDB
  1852                           fsr2h	equ	0xFDA
  1853                           fsr2l	equ	0xFD9
  1854                           status	equ	0xFD8
  1855                           
  1856 ;; *************** function _SPI1_Initialize *****************
  1857 ;; Defined at:
  1858 ;;		line 64 in file "mcc_generated_files/spi1.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;		None
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;		None
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  1    wreg      void 
  1865 ;; Registers used:
  1866 ;;		wreg, status,2
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1876 ;;Total ram usage:        0 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    7
  1879 ;; This function calls:
  1880 ;;		Nothing
  1881 ;; This function is called by:
  1882 ;;		_SYSTEM_Initialize
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           	psect	text12
  1887  001D7E                     __ptext12:
  1888                           	opt stack 0
  1889  001D7E                     _SPI1_Initialize:
  1890                           	opt stack 22
  1891                           
  1892                           ;spi1.c: 69: SSP1STAT = 0x00;
  1893                           
  1894                           ;incstack = 0
  1895  001D7E  0E00               	movlw	0
  1896  001D80  6EC7               	movwf	4039,c	;volatile
  1897                           
  1898                           ;spi1.c: 72: SSP1CON1 = 0x33;
  1899  001D82  0E33               	movlw	51
  1900  001D84  6EC6               	movwf	4038,c	;volatile
  1901                           
  1902                           ;spi1.c: 75: SSP1ADD = 0x00;
  1903  001D86  0E00               	movlw	0
  1904  001D88  6EC8               	movwf	4040,c	;volatile
  1905  001D8A  0012               	return		;funcret
  1906  001D8C                     __end_of_SPI1_Initialize:
  1907                           	opt stack 0
  1908                           tblptru	equ	0xFF8
  1909                           tblptrh	equ	0xFF7
  1910                           tblptrl	equ	0xFF6
  1911                           tablat	equ	0xFF5
  1912                           prodh	equ	0xFF4
  1913                           prodl	equ	0xFF3
  1914                           postinc0	equ	0xFEE
  1915                           plusw0	equ	0xFEB
  1916                           wreg	equ	0xFE8
  1917                           postdec1	equ	0xFE5
  1918                           fsr1l	equ	0xFE1
  1919                           indf2	equ	0xFDF
  1920                           plusw2	equ	0xFDB
  1921                           fsr2h	equ	0xFDA
  1922                           fsr2l	equ	0xFD9
  1923                           status	equ	0xFD8
  1924                           
  1925 ;; *************** function _PWM5_Initialize *****************
  1926 ;; Defined at:
  1927 ;;		line 64 in file "mcc_generated_files/pwm5.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;		None
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;		None
  1932 ;; Return value:  Size  Location     Type
  1933 ;;                  1    wreg      void 
  1934 ;; Registers used:
  1935 ;;		wreg, status,2
  1936 ;; Tracked objects:
  1937 ;;		On entry : 0/0
  1938 ;;		On exit  : 0/0
  1939 ;;		Unchanged: 0/0
  1940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1945 ;;Total ram usage:        0 bytes
  1946 ;; Hardware stack levels used:    1
  1947 ;; Hardware stack levels required when called:    7
  1948 ;; This function calls:
  1949 ;;		Nothing
  1950 ;; This function is called by:
  1951 ;;		_SYSTEM_Initialize
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955                           	psect	text13
  1956  001CA2                     __ptext13:
  1957                           	opt stack 0
  1958  001CA2                     _PWM5_Initialize:
  1959                           	opt stack 22
  1960                           
  1961                           ;pwm5.c: 69: CCP5CON = 0x3C;
  1962                           
  1963                           ;incstack = 0
  1964  001CA2  0E3C               	movlw	60
  1965  001CA4  010F               	movlb	15	; () banked
  1966  001CA6  6F54               	movwf	84,b	;volatile
  1967                           
  1968                           ;pwm5.c: 72: CCPR5L = 0x1E;
  1969  001CA8  0E1E               	movlw	30
  1970  001CAA  010F               	movlb	15	; () banked
  1971  001CAC  6F55               	movwf	85,b	;volatile
  1972                           
  1973                           ;pwm5.c: 75: CCPR5H = 0x00;
  1974  001CAE  0E00               	movlw	0
  1975  001CB0  010F               	movlb	15	; () banked
  1976  001CB2  6F56               	movwf	86,b	;volatile
  1977                           
  1978                           ;pwm5.c: 78: CCPTMRS1bits.C5TSEL = 0x1;
  1979  001CB4  010F               	movlb	15	; () banked
  1980  001CB6  5148               	movf	72,w,b	;volatile
  1981  001CB8  0BF3               	andlw	-13
  1982  001CBA  0904               	iorlw	4
  1983  001CBC  6F48               	movwf	72,b	;volatile
  1984                           
  1985                           ; BSR set to: 15
  1986  001CBE  0012               	return		;funcret
  1987  001CC0                     __end_of_PWM5_Initialize:
  1988                           	opt stack 0
  1989                           tblptru	equ	0xFF8
  1990                           tblptrh	equ	0xFF7
  1991                           tblptrl	equ	0xFF6
  1992                           tablat	equ	0xFF5
  1993                           prodh	equ	0xFF4
  1994                           prodl	equ	0xFF3
  1995                           postinc0	equ	0xFEE
  1996                           plusw0	equ	0xFEB
  1997                           wreg	equ	0xFE8
  1998                           postdec1	equ	0xFE5
  1999                           fsr1l	equ	0xFE1
  2000                           indf2	equ	0xFDF
  2001                           plusw2	equ	0xFDB
  2002                           fsr2h	equ	0xFDA
  2003                           fsr2l	equ	0xFD9
  2004                           status	equ	0xFD8
  2005                           
  2006 ;; *************** function _PIN_MANAGER_Initialize *****************
  2007 ;; Defined at:
  2008 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;		None
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;		None
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  1    wreg      void 
  2015 ;; Registers used:
  2016 ;;		wreg, status,2
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2026 ;;Total ram usage:        0 bytes
  2027 ;; Hardware stack levels used:    1
  2028 ;; Hardware stack levels required when called:    7
  2029 ;; This function calls:
  2030 ;;		Nothing
  2031 ;; This function is called by:
  2032 ;;		_SYSTEM_Initialize
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036                           	psect	text14
  2037  001A10                     __ptext14:
  2038                           	opt stack 0
  2039  001A10                     _PIN_MANAGER_Initialize:
  2040                           	opt stack 22
  2041                           
  2042                           ;pin_manager.c: 51: LATB = 0x1;
  2043                           
  2044                           ; BSR set to: 15
  2045                           ;incstack = 0
  2046  001A10  0E01               	movlw	1
  2047  001A12  6E8A               	movwf	3978,c	;volatile
  2048                           
  2049                           ;pin_manager.c: 52: LATA = 0x0;
  2050  001A14  0E00               	movlw	0
  2051  001A16  6E89               	movwf	3977,c	;volatile
  2052                           
  2053                           ;pin_manager.c: 53: LATC = 0x0;
  2054  001A18  0E00               	movlw	0
  2055  001A1A  6E8B               	movwf	3979,c	;volatile
  2056                           
  2057                           ;pin_manager.c: 54: ANSELA = 0xE;
  2058  001A1C  0E0E               	movlw	14
  2059  001A1E  010F               	movlb	15	; () banked
  2060  001A20  6F38               	movwf	56,b	;volatile
  2061                           
  2062                           ;pin_manager.c: 55: ANSELB = 0x0;
  2063  001A22  0E00               	movlw	0
  2064  001A24  010F               	movlb	15	; () banked
  2065  001A26  6F39               	movwf	57,b	;volatile
  2066                           
  2067                           ;pin_manager.c: 56: ANSELC = 0x0;
  2068  001A28  0E00               	movlw	0
  2069  001A2A  010F               	movlb	15	; () banked
  2070  001A2C  6F3A               	movwf	58,b	;volatile
  2071                           
  2072                           ;pin_manager.c: 57: TRISB = 0x9F;
  2073  001A2E  0E9F               	movlw	159
  2074  001A30  6E93               	movwf	3987,c	;volatile
  2075                           
  2076                           ;pin_manager.c: 58: TRISC = 0x91;
  2077  001A32  0E91               	movlw	145
  2078  001A34  6E94               	movwf	3988,c	;volatile
  2079                           
  2080                           ;pin_manager.c: 59: WPUB = 0x6;
  2081  001A36  0E06               	movlw	6
  2082  001A38  6E61               	movwf	3937,c	;volatile
  2083                           
  2084                           ;pin_manager.c: 60: TRISA = 0xEF;
  2085  001A3A  0EEF               	movlw	239
  2086  001A3C  6E92               	movwf	3986,c	;volatile
  2087                           
  2088                           ; BSR set to: 15
  2089                           ;pin_manager.c: 62: INTCON2bits.nRBPU = 0x1;
  2090  001A3E  8EF1               	bsf	intcon2,7,c	;volatile
  2091                           
  2092                           ; BSR set to: 15
  2093                           ;pin_manager.c: 65: IOCB4 = 1;
  2094  001A40  8862               	bsf	3938,4,c	;volatile
  2095                           
  2096                           ; BSR set to: 15
  2097                           ;pin_manager.c: 68: INTCONbits.RBIE = 0;
  2098  001A42  96F2               	bcf	intcon,3,c	;volatile
  2099                           
  2100                           ; BSR set to: 15
  2101  001A44  0012               	return		;funcret
  2102  001A46                     __end_of_PIN_MANAGER_Initialize:
  2103                           	opt stack 0
  2104                           tblptru	equ	0xFF8
  2105                           tblptrh	equ	0xFF7
  2106                           tblptrl	equ	0xFF6
  2107                           tablat	equ	0xFF5
  2108                           prodh	equ	0xFF4
  2109                           prodl	equ	0xFF3
  2110                           intcon	equ	0xFF2
  2111                           intcon2	equ	0xFF1
  2112                           postinc0	equ	0xFEE
  2113                           plusw0	equ	0xFEB
  2114                           wreg	equ	0xFE8
  2115                           postdec1	equ	0xFE5
  2116                           fsr1l	equ	0xFE1
  2117                           indf2	equ	0xFDF
  2118                           plusw2	equ	0xFDB
  2119                           fsr2h	equ	0xFDA
  2120                           fsr2l	equ	0xFD9
  2121                           status	equ	0xFD8
  2122                           
  2123 ;; *************** function _OSCILLATOR_Initialize *****************
  2124 ;; Defined at:
  2125 ;;		line 130 in file "mcc_generated_files/mcc.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;		None
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;		None
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      void 
  2132 ;; Registers used:
  2133 ;;		wreg, status,2
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;Total ram usage:        0 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:    7
  2146 ;; This function calls:
  2147 ;;		Nothing
  2148 ;; This function is called by:
  2149 ;;		_SYSTEM_Initialize
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           	psect	text15
  2154  001D8C                     __ptext15:
  2155                           	opt stack 0
  2156  001D8C                     _OSCILLATOR_Initialize:
  2157                           	opt stack 22
  2158                           
  2159                           ;mcc.c: 133: OSCCON = 0x72;
  2160                           
  2161                           ; BSR set to: 15
  2162                           ;incstack = 0
  2163  001D8C  0E72               	movlw	114
  2164  001D8E  6ED3               	movwf	4051,c	;volatile
  2165                           
  2166                           ;mcc.c: 135: OSCCON2 = 0x04;
  2167  001D90  0E04               	movlw	4
  2168  001D92  6ED2               	movwf	4050,c	;volatile
  2169                           
  2170                           ;mcc.c: 137: OSCTUNE = 0x00;
  2171  001D94  0E00               	movlw	0
  2172  001D96  6E9B               	movwf	3995,c	;volatile
  2173  001D98  0012               	return		;funcret
  2174  001D9A                     __end_of_OSCILLATOR_Initialize:
  2175                           	opt stack 0
  2176                           tblptru	equ	0xFF8
  2177                           tblptrh	equ	0xFF7
  2178                           tblptrl	equ	0xFF6
  2179                           tablat	equ	0xFF5
  2180                           prodh	equ	0xFF4
  2181                           prodl	equ	0xFF3
  2182                           intcon	equ	0xFF2
  2183                           intcon2	equ	0xFF1
  2184                           postinc0	equ	0xFEE
  2185                           plusw0	equ	0xFEB
  2186                           wreg	equ	0xFE8
  2187                           postdec1	equ	0xFE5
  2188                           fsr1l	equ	0xFE1
  2189                           indf2	equ	0xFDF
  2190                           plusw2	equ	0xFDB
  2191                           fsr2h	equ	0xFDA
  2192                           fsr2l	equ	0xFD9
  2193                           status	equ	0xFD8
  2194                           
  2195 ;; *************** function _INTERRUPT_Initialize *****************
  2196 ;; Defined at:
  2197 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;		None
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;		None
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  1    wreg      void 
  2204 ;; Registers used:
  2205 ;;		None
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2215 ;;Total ram usage:        0 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; Hardware stack levels required when called:    7
  2218 ;; This function calls:
  2219 ;;		Nothing
  2220 ;; This function is called by:
  2221 ;;		_SYSTEM_Initialize
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           	psect	text16
  2226  001D6A                     __ptext16:
  2227                           	opt stack 0
  2228  001D6A                     _INTERRUPT_Initialize:
  2229                           	opt stack 22
  2230                           
  2231                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  2232                           
  2233                           ;incstack = 0
  2234  001D6A  9ED0               	bcf	4048,7,c	;volatile
  2235                           
  2236                           ;interrupt_manager.c: 60: IPR3bits.BCL2IP = 0;
  2237  001D6C  9CA5               	bcf	4005,6,c	;volatile
  2238                           
  2239                           ;interrupt_manager.c: 62: IPR3bits.SSP2IP = 0;
  2240  001D6E  9EA5               	bcf	4005,7,c	;volatile
  2241                           
  2242                           ;interrupt_manager.c: 64: IPR3bits.TX2IP = 0;
  2243  001D70  98A5               	bcf	4005,4,c	;volatile
  2244                           
  2245                           ;interrupt_manager.c: 66: IPR3bits.RC2IP = 0;
  2246  001D72  9AA5               	bcf	4005,5,c	;volatile
  2247                           
  2248                           ;interrupt_manager.c: 68: IPR4bits.CCP4IP = 0;
  2249  001D74  927C               	bcf	3964,1,c	;volatile
  2250                           
  2251                           ;interrupt_manager.c: 70: IPR1bits.TX1IP = 0;
  2252  001D76  989F               	bcf	3999,4,c	;volatile
  2253                           
  2254                           ;interrupt_manager.c: 72: IPR1bits.RC1IP = 0;
  2255  001D78  9A9F               	bcf	3999,5,c	;volatile
  2256                           
  2257                           ;interrupt_manager.c: 74: IPR2bits.TMR3IP = 0;
  2258  001D7A  92A2               	bcf	4002,1,c	;volatile
  2259  001D7C  0012               	return		;funcret
  2260  001D7E                     __end_of_INTERRUPT_Initialize:
  2261                           	opt stack 0
  2262                           tblptru	equ	0xFF8
  2263                           tblptrh	equ	0xFF7
  2264                           tblptrl	equ	0xFF6
  2265                           tablat	equ	0xFF5
  2266                           prodh	equ	0xFF4
  2267                           prodl	equ	0xFF3
  2268                           intcon	equ	0xFF2
  2269                           intcon2	equ	0xFF1
  2270                           postinc0	equ	0xFEE
  2271                           plusw0	equ	0xFEB
  2272                           wreg	equ	0xFE8
  2273                           postdec1	equ	0xFE5
  2274                           fsr1l	equ	0xFE1
  2275                           indf2	equ	0xFDF
  2276                           plusw2	equ	0xFDB
  2277                           fsr2h	equ	0xFDA
  2278                           fsr2l	equ	0xFD9
  2279                           status	equ	0xFD8
  2280                           
  2281 ;; *************** function _I2C2_Initialize *****************
  2282 ;; Defined at:
  2283 ;;		line 199 in file "mcc_generated_files/i2c2.c"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;		None
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;		None
  2288 ;; Return value:  Size  Location     Type
  2289 ;;                  1    wreg      void 
  2290 ;; Registers used:
  2291 ;;		wreg, status,2, status,0
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2301 ;;Total ram usage:        0 bytes
  2302 ;; Hardware stack levels used:    1
  2303 ;; Hardware stack levels required when called:    7
  2304 ;; This function calls:
  2305 ;;		Nothing
  2306 ;; This function is called by:
  2307 ;;		_SYSTEM_Initialize
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           	psect	text17
  2312  0018F0                     __ptext17:
  2313                           	opt stack 0
  2314  0018F0                     _I2C2_Initialize:
  2315                           	opt stack 22
  2316                           
  2317                           ;i2c2.c: 201: i2c2_object.pTrHead = i2c2_tr_queue;
  2318                           
  2319                           ;incstack = 0
  2320  0018F0  0ECB               	movlw	low _i2c2_tr_queue
  2321  0018F2  0100               	movlb	0	; () banked
  2322  0018F4  6F8F               	movwf	(_i2c2_object+2)& (0+255),b
  2323  0018F6  0E00               	movlw	high _i2c2_tr_queue
  2324  0018F8  0100               	movlb	0	; () banked
  2325  0018FA  6F90               	movwf	(_i2c2_object+3)& (0+255),b
  2326                           
  2327                           ;i2c2.c: 202: i2c2_object.pTrTail = i2c2_tr_queue;
  2328  0018FC  0ECB               	movlw	low _i2c2_tr_queue
  2329  0018FE  0100               	movlb	0	; () banked
  2330  001900  6F8D               	movwf	_i2c2_object& (0+255),b
  2331  001902  0E00               	movlw	high _i2c2_tr_queue
  2332  001904  0100               	movlb	0	; () banked
  2333  001906  6F8E               	movwf	(_i2c2_object+1)& (0+255),b
  2334                           
  2335                           ; BSR set to: 0
  2336                           ;i2c2.c: 203: i2c2_object.trStatus.s.empty = 1;
  2337  001908  0100               	movlb	0	; () banked
  2338  00190A  8391               	bsf	(_i2c2_object+4)& (0+255),1,b
  2339                           
  2340                           ; BSR set to: 0
  2341                           ;i2c2.c: 204: i2c2_object.trStatus.s.full = 0;
  2342  00190C  0100               	movlb	0	; () banked
  2343  00190E  9191               	bcf	(_i2c2_object+4)& (0+255),0,b
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;i2c2.c: 206: i2c2_object.i2cErrors = 0;
  2347  001910  0E00               	movlw	0
  2348  001912  0100               	movlb	0	; () banked
  2349  001914  6F93               	movwf	(_i2c2_object+6)& (0+255),b
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;i2c2.c: 209: SSP2STAT = 0x40;
  2353  001916  0E40               	movlw	64
  2354  001918  6E6D               	movwf	3949,c	;volatile
  2355                           
  2356                           ; BSR set to: 0
  2357                           ;i2c2.c: 211: SSP2CON1 = 0x28;
  2358  00191A  0E28               	movlw	40
  2359  00191C  6E6C               	movwf	3948,c	;volatile
  2360                           
  2361                           ; BSR set to: 0
  2362                           ;i2c2.c: 213: SSP2CON3 = 0x00;
  2363  00191E  0E00               	movlw	0
  2364  001920  6E69               	movwf	3945,c	;volatile
  2365                           
  2366                           ; BSR set to: 0
  2367                           ;i2c2.c: 215: SSP2ADD = 0x09;
  2368  001922  0E09               	movlw	9
  2369  001924  6E6E               	movwf	3950,c	;volatile
  2370                           
  2371                           ; BSR set to: 0
  2372                           ;i2c2.c: 219: PIR3bits.SSP2IF = 0;
  2373  001926  9EA4               	bcf	4004,7,c	;volatile
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;i2c2.c: 221: PIE3bits.SSP2IE = 1;
  2377  001928  8EA3               	bsf	4003,7,c	;volatile
  2378                           
  2379                           ; BSR set to: 0
  2380  00192A  0012               	return		;funcret
  2381  00192C                     __end_of_I2C2_Initialize:
  2382                           	opt stack 0
  2383                           tblptru	equ	0xFF8
  2384                           tblptrh	equ	0xFF7
  2385                           tblptrl	equ	0xFF6
  2386                           tablat	equ	0xFF5
  2387                           prodh	equ	0xFF4
  2388                           prodl	equ	0xFF3
  2389                           intcon	equ	0xFF2
  2390                           intcon2	equ	0xFF1
  2391                           postinc0	equ	0xFEE
  2392                           plusw0	equ	0xFEB
  2393                           wreg	equ	0xFE8
  2394                           postdec1	equ	0xFE5
  2395                           fsr1l	equ	0xFE1
  2396                           indf2	equ	0xFDF
  2397                           plusw2	equ	0xFDB
  2398                           fsr2h	equ	0xFDA
  2399                           fsr2l	equ	0xFD9
  2400                           status	equ	0xFD8
  2401                           
  2402 ;; *************** function _EUSART2_Initialize *****************
  2403 ;; Defined at:
  2404 ;;		line 76 in file "mcc_generated_files/eusart2.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;		None
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;		None
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg, status,2
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;Total ram usage:        0 bytes
  2423 ;; Hardware stack levels used:    1
  2424 ;; Hardware stack levels required when called:    7
  2425 ;; This function calls:
  2426 ;;		Nothing
  2427 ;; This function is called by:
  2428 ;;		_SYSTEM_Initialize
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           	psect	text18
  2433  001A46                     __ptext18:
  2434                           	opt stack 0
  2435  001A46                     _EUSART2_Initialize:
  2436                           	opt stack 22
  2437                           
  2438                           ;eusart2.c: 79: PIE3bits.RC2IE = 0;
  2439                           
  2440                           ; BSR set to: 0
  2441                           ;incstack = 0
  2442  001A46  9AA3               	bcf	4003,5,c	;volatile
  2443                           
  2444                           ;eusart2.c: 80: PIE3bits.TX2IE = 0;
  2445  001A48  98A3               	bcf	4003,4,c	;volatile
  2446                           
  2447                           ;eusart2.c: 85: BAUDCON2 = 0x08;
  2448  001A4A  0E08               	movlw	8
  2449  001A4C  6E70               	movwf	3952,c	;volatile
  2450                           
  2451                           ;eusart2.c: 88: RCSTA2 = 0x90;
  2452  001A4E  0E90               	movlw	144
  2453  001A50  6E71               	movwf	3953,c	;volatile
  2454                           
  2455                           ;eusart2.c: 91: TXSTA2 = 0x24;
  2456  001A52  0E24               	movlw	36
  2457  001A54  6E72               	movwf	3954,c	;volatile
  2458                           
  2459                           ;eusart2.c: 94: SPBRG2 = 0x22;
  2460  001A56  0E22               	movlw	34
  2461  001A58  6E75               	movwf	3957,c	;volatile
  2462                           
  2463                           ;eusart2.c: 97: SPBRGH2 = 0x00;
  2464  001A5A  0E00               	movlw	0
  2465  001A5C  6E76               	movwf	3958,c	;volatile
  2466                           
  2467                           ;eusart2.c: 101: eusart2TxHead = 0;
  2468  001A5E  0E00               	movlw	0
  2469  001A60  6E15               	movwf	_eusart2TxHead,c
  2470                           
  2471                           ;eusart2.c: 102: eusart2TxTail = 0;
  2472  001A62  0E00               	movlw	0
  2473  001A64  6E16               	movwf	_eusart2TxTail,c
  2474                           
  2475                           ;eusart2.c: 103: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
  2476  001A66  0E08               	movlw	8
  2477  001A68  0100               	movlb	0	; () banked
  2478  001A6A  6FEA               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  2479                           
  2480                           ;eusart2.c: 105: eusart2RxHead = 0;
  2481  001A6C  0E00               	movlw	0
  2482  001A6E  6E13               	movwf	_eusart2RxHead,c
  2483                           
  2484                           ;eusart2.c: 106: eusart2RxTail = 0;
  2485  001A70  0E00               	movlw	0
  2486  001A72  6E14               	movwf	_eusart2RxTail,c
  2487                           
  2488                           ;eusart2.c: 107: eusart2RxCount = 0;
  2489  001A74  0E00               	movlw	0
  2490  001A76  6E12               	movwf	_eusart2RxCount,c	;volatile
  2491                           
  2492                           ; BSR set to: 0
  2493                           ;eusart2.c: 110: PIE3bits.RC2IE = 1;
  2494  001A78  8AA3               	bsf	4003,5,c	;volatile
  2495                           
  2496                           ; BSR set to: 0
  2497  001A7A  0012               	return		;funcret
  2498  001A7C                     __end_of_EUSART2_Initialize:
  2499                           	opt stack 0
  2500                           tblptru	equ	0xFF8
  2501                           tblptrh	equ	0xFF7
  2502                           tblptrl	equ	0xFF6
  2503                           tablat	equ	0xFF5
  2504                           prodh	equ	0xFF4
  2505                           prodl	equ	0xFF3
  2506                           intcon	equ	0xFF2
  2507                           intcon2	equ	0xFF1
  2508                           postinc0	equ	0xFEE
  2509                           plusw0	equ	0xFEB
  2510                           wreg	equ	0xFE8
  2511                           postdec1	equ	0xFE5
  2512                           fsr1l	equ	0xFE1
  2513                           indf2	equ	0xFDF
  2514                           plusw2	equ	0xFDB
  2515                           fsr2h	equ	0xFDA
  2516                           fsr2l	equ	0xFD9
  2517                           status	equ	0xFD8
  2518                           
  2519 ;; *************** function _EUSART1_Initialize *****************
  2520 ;; Defined at:
  2521 ;;		line 77 in file "mcc_generated_files/eusart1.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;		None
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;		None
  2526 ;; Return value:  Size  Location     Type
  2527 ;;                  1    wreg      void 
  2528 ;; Registers used:
  2529 ;;		wreg, status,2
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/0
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2539 ;;Total ram usage:        0 bytes
  2540 ;; Hardware stack levels used:    1
  2541 ;; Hardware stack levels required when called:    7
  2542 ;; This function calls:
  2543 ;;		Nothing
  2544 ;; This function is called by:
  2545 ;;		_SYSTEM_Initialize
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549                           	psect	text19
  2550  001A7C                     __ptext19:
  2551                           	opt stack 0
  2552  001A7C                     _EUSART1_Initialize:
  2553                           	opt stack 22
  2554                           
  2555                           ;eusart1.c: 80: PIE1bits.RC1IE = 0;
  2556                           
  2557                           ; BSR set to: 0
  2558                           ;incstack = 0
  2559  001A7C  9A9D               	bcf	3997,5,c	;volatile
  2560                           
  2561                           ;eusart1.c: 81: PIE1bits.TX1IE = 0;
  2562  001A7E  989D               	bcf	3997,4,c	;volatile
  2563                           
  2564                           ;eusart1.c: 86: BAUDCON1 = 0x08;
  2565  001A80  0E08               	movlw	8
  2566  001A82  6EB8               	movwf	4024,c	;volatile
  2567                           
  2568                           ;eusart1.c: 89: RCSTA1 = 0x90;
  2569  001A84  0E90               	movlw	144
  2570  001A86  6EAB               	movwf	4011,c	;volatile
  2571                           
  2572                           ;eusart1.c: 92: TXSTA1 = 0x24;
  2573  001A88  0E24               	movlw	36
  2574  001A8A  6EAC               	movwf	4012,c	;volatile
  2575                           
  2576                           ;eusart1.c: 95: SPBRG1 = 0xA0;
  2577  001A8C  0EA0               	movlw	160
  2578  001A8E  6EAF               	movwf	4015,c	;volatile
  2579                           
  2580                           ;eusart1.c: 98: SPBRGH1 = 0x01;
  2581  001A90  0E01               	movlw	1
  2582  001A92  6EB0               	movwf	4016,c	;volatile
  2583                           
  2584                           ;eusart1.c: 102: eusart1TxHead = 0;
  2585  001A94  0E00               	movlw	0
  2586  001A96  6E10               	movwf	_eusart1TxHead,c
  2587                           
  2588                           ;eusart1.c: 103: eusart1TxTail = 0;
  2589  001A98  0E00               	movlw	0
  2590  001A9A  6E11               	movwf	_eusart1TxTail,c
  2591                           
  2592                           ;eusart1.c: 104: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  2593  001A9C  0E08               	movlw	8
  2594  001A9E  0100               	movlb	0	; () banked
  2595  001AA0  6FE9               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  2596                           
  2597                           ;eusart1.c: 106: eusart1RxHead = 0;
  2598  001AA2  0E00               	movlw	0
  2599  001AA4  6E0E               	movwf	_eusart1RxHead,c
  2600                           
  2601                           ;eusart1.c: 107: eusart1RxTail = 0;
  2602  001AA6  0E00               	movlw	0
  2603  001AA8  6E0F               	movwf	_eusart1RxTail,c
  2604                           
  2605                           ;eusart1.c: 108: eusart1RxCount = 0;
  2606  001AAA  0E00               	movlw	0
  2607  001AAC  6E0D               	movwf	_eusart1RxCount,c	;volatile
  2608                           
  2609                           ; BSR set to: 0
  2610                           ;eusart1.c: 111: PIE1bits.RC1IE = 1;
  2611  001AAE  8A9D               	bsf	3997,5,c	;volatile
  2612                           
  2613                           ; BSR set to: 0
  2614  001AB0  0012               	return		;funcret
  2615  001AB2                     __end_of_EUSART1_Initialize:
  2616                           	opt stack 0
  2617                           tblptru	equ	0xFF8
  2618                           tblptrh	equ	0xFF7
  2619                           tblptrl	equ	0xFF6
  2620                           tablat	equ	0xFF5
  2621                           prodh	equ	0xFF4
  2622                           prodl	equ	0xFF3
  2623                           intcon	equ	0xFF2
  2624                           intcon2	equ	0xFF1
  2625                           postinc0	equ	0xFEE
  2626                           plusw0	equ	0xFEB
  2627                           wreg	equ	0xFE8
  2628                           postdec1	equ	0xFE5
  2629                           fsr1l	equ	0xFE1
  2630                           indf2	equ	0xFDF
  2631                           plusw2	equ	0xFDB
  2632                           fsr2h	equ	0xFDA
  2633                           fsr2l	equ	0xFD9
  2634                           status	equ	0xFD8
  2635                           
  2636 ;; *************** function _CCP4_Initialize *****************
  2637 ;; Defined at:
  2638 ;;		line 60 in file "mcc_generated_files/ccp4.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;		None
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;		None
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  1    wreg      void 
  2645 ;; Registers used:
  2646 ;;		wreg, status,2
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2656 ;;Total ram usage:        0 bytes
  2657 ;; Hardware stack levels used:    1
  2658 ;; Hardware stack levels required when called:    7
  2659 ;; This function calls:
  2660 ;;		Nothing
  2661 ;; This function is called by:
  2662 ;;		_SYSTEM_Initialize
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           	psect	text20
  2667  001CC0                     __ptext20:
  2668                           	opt stack 0
  2669  001CC0                     _CCP4_Initialize:
  2670                           	opt stack 22
  2671                           
  2672                           ;ccp4.c: 65: CCP4CON = 0x04;
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;incstack = 0
  2676  001CC0  0E04               	movlw	4
  2677  001CC2  010F               	movlb	15	; () banked
  2678  001CC4  6F57               	movwf	87,b	;volatile
  2679                           
  2680                           ;ccp4.c: 68: CCPR4L = 0x00;
  2681  001CC6  0E00               	movlw	0
  2682  001CC8  010F               	movlb	15	; () banked
  2683  001CCA  6F58               	movwf	88,b	;volatile
  2684                           
  2685                           ;ccp4.c: 71: CCPR4H = 0x00;
  2686  001CCC  0E00               	movlw	0
  2687  001CCE  010F               	movlb	15	; () banked
  2688  001CD0  6F59               	movwf	89,b	;volatile
  2689                           
  2690                           ;ccp4.c: 74: CCPTMRS1bits.C4TSEL = 0x0;
  2691  001CD2  0EFC               	movlw	-4
  2692  001CD4  010F               	movlb	15	; () banked
  2693  001CD6  1748               	andwf	72,f,b	;volatile
  2694                           
  2695                           ; BSR set to: 15
  2696                           ;ccp4.c: 77: PIR4bits.CCP4IF = 0;
  2697  001CD8  927B               	bcf	3963,1,c	;volatile
  2698                           
  2699                           ; BSR set to: 15
  2700                           ;ccp4.c: 80: PIE4bits.CCP4IE = 1;
  2701  001CDA  827A               	bsf	3962,1,c	;volatile
  2702                           
  2703                           ; BSR set to: 15
  2704  001CDC  0012               	return		;funcret
  2705  001CDE                     __end_of_CCP4_Initialize:
  2706                           	opt stack 0
  2707                           tblptru	equ	0xFF8
  2708                           tblptrh	equ	0xFF7
  2709                           tblptrl	equ	0xFF6
  2710                           tablat	equ	0xFF5
  2711                           prodh	equ	0xFF4
  2712                           prodl	equ	0xFF3
  2713                           intcon	equ	0xFF2
  2714                           intcon2	equ	0xFF1
  2715                           postinc0	equ	0xFEE
  2716                           plusw0	equ	0xFEB
  2717                           wreg	equ	0xFE8
  2718                           postdec1	equ	0xFE5
  2719                           fsr1l	equ	0xFE1
  2720                           indf2	equ	0xFDF
  2721                           plusw2	equ	0xFDB
  2722                           fsr2h	equ	0xFDA
  2723                           fsr2l	equ	0xFD9
  2724                           status	equ	0xFD8
  2725                           
  2726 ;; *************** function _PIU_bt_transmit_packet *****************
  2727 ;; Defined at:
  2728 ;;		line 64 in file "bt_to_PIU.c"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;  packet          6   24[COMRAM] struct bt_packet
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;		None
  2733 ;; Return value:  Size  Location     Type
  2734 ;;                  1    wreg      void 
  2735 ;; Registers used:
  2736 ;;		wreg, status,2, status,0
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2742 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2744 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2745 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2746 ;;Total ram usage:        7 bytes
  2747 ;; Hardware stack levels used:    1
  2748 ;; Hardware stack levels required when called:    7
  2749 ;; This function calls:
  2750 ;;		Nothing
  2751 ;; This function is called by:
  2752 ;;		_main
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           	psect	text21
  2757  001C30                     __ptext21:
  2758                           	opt stack 0
  2759  001C30                     _PIU_bt_transmit_packet:
  2760                           	opt stack 23
  2761                           
  2762                           ;bt_to_PIU.c: 67: packet.crc = 0xFF - (packet.func + packet.data1 + packet.data2 + packe
      +                          t.data3);
  2763                           
  2764                           ; BSR set to: 15
  2765                           ;incstack = 0
  2766  001C30  503A               	movf	PIU_bt_transmit_packet@packet+1,w,c
  2767  001C32  243B               	addwf	PIU_bt_transmit_packet@packet+2,w,c
  2768  001C34  243C               	addwf	PIU_bt_transmit_packet@packet+3,w,c
  2769  001C36  243D               	addwf	PIU_bt_transmit_packet@packet+4,w,c
  2770  001C38  0800               	sublw	0
  2771  001C3A  6E3F               	movwf	??_PIU_bt_transmit_packet& (0+255),c
  2772  001C3C  043F               	decf	??_PIU_bt_transmit_packet,w,c
  2773  001C3E  6E3E               	movwf	PIU_bt_transmit_packet@packet+5,c
  2774                           
  2775                           ;bt_to_PIU.c: 69: TX2REG = packet.start;
  2776  001C40  C039  FF73         	movff	PIU_bt_transmit_packet@packet,3955	;volatile
  2777                           
  2778                           ;bt_to_PIU.c: 70: TX2REG = packet.func;
  2779  001C44  C03A  FF73         	movff	PIU_bt_transmit_packet@packet+1,3955	;volatile
  2780                           
  2781                           ;bt_to_PIU.c: 71: TX2REG = packet.data1;
  2782  001C48  C03B  FF73         	movff	PIU_bt_transmit_packet@packet+2,3955	;volatile
  2783                           
  2784                           ;bt_to_PIU.c: 72: TX2REG = packet.data2;
  2785  001C4C  C03C  FF73         	movff	PIU_bt_transmit_packet@packet+3,3955	;volatile
  2786                           
  2787                           ;bt_to_PIU.c: 73: TX2REG = packet.data3;
  2788  001C50  C03D  FF73         	movff	PIU_bt_transmit_packet@packet+4,3955	;volatile
  2789                           
  2790                           ;bt_to_PIU.c: 74: TX2REG = packet.crc;
  2791  001C54  C03E  FF73         	movff	PIU_bt_transmit_packet@packet+5,3955	;volatile
  2792  001C58  0012               	return		;funcret
  2793  001C5A                     __end_of_PIU_bt_transmit_packet:
  2794                           	opt stack 0
  2795                           tblptru	equ	0xFF8
  2796                           tblptrh	equ	0xFF7
  2797                           tblptrl	equ	0xFF6
  2798                           tablat	equ	0xFF5
  2799                           prodh	equ	0xFF4
  2800                           prodl	equ	0xFF3
  2801                           intcon	equ	0xFF2
  2802                           intcon2	equ	0xFF1
  2803                           postinc0	equ	0xFEE
  2804                           plusw0	equ	0xFEB
  2805                           wreg	equ	0xFE8
  2806                           postdec1	equ	0xFE5
  2807                           fsr1l	equ	0xFE1
  2808                           indf2	equ	0xFDF
  2809                           plusw2	equ	0xFDB
  2810                           fsr2h	equ	0xFDA
  2811                           fsr2l	equ	0xFD9
  2812                           status	equ	0xFD8
  2813                           
  2814 ;; *************** function _EUSART1_Read *****************
  2815 ;; Defined at:
  2816 ;;		line 114 in file "mcc_generated_files/eusart1.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;		None
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;  readValue       1   24[COMRAM] unsigned char 
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  1    wreg      unsigned char 
  2823 ;; Registers used:
  2824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2831 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2833 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2834 ;;Total ram usage:        1 bytes
  2835 ;; Hardware stack levels used:    1
  2836 ;; Hardware stack levels required when called:    7
  2837 ;; This function calls:
  2838 ;;		Nothing
  2839 ;; This function is called by:
  2840 ;;		_main
  2841 ;;		_PIU_bt_read_cmnd_to_buffer
  2842 ;;		_getch
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           	psect	text22
  2847  001AB2                     __ptext22:
  2848                           	opt stack 0
  2849  001AB2                     _EUSART1_Read:
  2850                           	opt stack 23
  2851                           
  2852                           ;eusart1.c: 116: uint8_t readValue = 0;
  2853                           
  2854                           ;incstack = 0
  2855  001AB2  0E00               	movlw	0
  2856  001AB4  6E39               	movwf	EUSART1_Read@readValue,c
  2857  001AB6                     l4447:
  2858  001AB6  500D               	movf	_eusart1RxCount,w,c	;volatile
  2859  001AB8  B4D8               	btfsc	status,2,c
  2860  001ABA  D7FD               	goto	l4447
  2861                           
  2862                           ;eusart1.c: 120: }
  2863                           ;eusart1.c: 122: PIE1bits.RC1IE = 0;
  2864  001ABC  9A9D               	bcf	3997,5,c	;volatile
  2865                           
  2866                           ;eusart1.c: 124: readValue = eusart1RxBuffer[eusart1RxTail++];
  2867  001ABE  500F               	movf	_eusart1RxTail,w,c
  2868  001AC0  0D01               	mullw	1
  2869  001AC2  0E6D               	movlw	low _eusart1RxBuffer
  2870  001AC4  24F3               	addwf	prodl,w,c
  2871  001AC6  6ED9               	movwf	fsr2l,c
  2872  001AC8  0E00               	movlw	high _eusart1RxBuffer
  2873  001ACA  20F4               	addwfc	prodh,w,c
  2874  001ACC  6EDA               	movwf	fsr2h,c
  2875  001ACE  50DF               	movf	indf2,w,c
  2876  001AD0  6E39               	movwf	EUSART1_Read@readValue,c
  2877  001AD2  2A0F               	incf	_eusart1RxTail,f,c
  2878                           
  2879                           ;eusart1.c: 125: if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  2880  001AD4  0E07               	movlw	7
  2881  001AD6  640F               	cpfsgt	_eusart1RxTail,c
  2882  001AD8  D002               	goto	l4457
  2883                           
  2884                           ;eusart1.c: 126: {
  2885                           ;eusart1.c: 127: eusart1RxTail = 0;
  2886  001ADA  0E00               	movlw	0
  2887  001ADC  6E0F               	movwf	_eusart1RxTail,c
  2888  001ADE                     l4457:
  2889                           
  2890                           ;eusart1.c: 128: }
  2891                           ;eusart1.c: 129: eusart1RxCount--;
  2892  001ADE  060D               	decf	_eusart1RxCount,f,c	;volatile
  2893                           
  2894                           ;eusart1.c: 130: PIE1bits.RC1IE = 1;
  2895  001AE0  8A9D               	bsf	3997,5,c	;volatile
  2896                           
  2897                           ;eusart1.c: 132: return readValue;
  2898  001AE2  5039               	movf	EUSART1_Read@readValue,w,c
  2899  001AE4  0012               	return	
  2900  001AE6                     __end_of_EUSART1_Read:
  2901                           	opt stack 0
  2902                           tblptru	equ	0xFF8
  2903                           tblptrh	equ	0xFF7
  2904                           tblptrl	equ	0xFF6
  2905                           tablat	equ	0xFF5
  2906                           prodh	equ	0xFF4
  2907                           prodl	equ	0xFF3
  2908                           intcon	equ	0xFF2
  2909                           intcon2	equ	0xFF1
  2910                           postinc0	equ	0xFEE
  2911                           plusw0	equ	0xFEB
  2912                           wreg	equ	0xFE8
  2913                           postdec1	equ	0xFE5
  2914                           fsr1l	equ	0xFE1
  2915                           indf2	equ	0xFDF
  2916                           plusw2	equ	0xFDB
  2917                           fsr2h	equ	0xFDA
  2918                           fsr2l	equ	0xFD9
  2919                           status	equ	0xFD8
  2920                           
  2921 ;; *************** function _INTERRUPT_InterruptManager *****************
  2922 ;; Defined at:
  2923 ;;		line 77 in file "mcc_generated_files/interrupt_manager.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;		None
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;		None
  2928 ;; Return value:  Size  Location     Type
  2929 ;;                  1    wreg      void 
  2930 ;; Registers used:
  2931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2939 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2940 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2941 ;;Total ram usage:       14 bytes
  2942 ;; Hardware stack levels used:    1
  2943 ;; Hardware stack levels required when called:    6
  2944 ;; This function calls:
  2945 ;;		_CCP4_CaptureISR
  2946 ;;		_EUSART1_Receive_ISR
  2947 ;;		_EUSART1_Transmit_ISR
  2948 ;;		_EUSART2_Receive_ISR
  2949 ;;		_EUSART2_Transmit_ISR
  2950 ;;		_I2C2_BusCollisionISR
  2951 ;;		_I2C2_ISR
  2952 ;;		_TMR3_ISR
  2953 ;; This function is called by:
  2954 ;;		Interrupt level 2
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958                           	psect	intcode
  2959  000008                     __pintcode:
  2960                           	opt stack 0
  2961  000008                     _INTERRUPT_InterruptManager:
  2962                           	opt stack 21
  2963                           
  2964                           ;incstack = 0
  2965  000008  8243               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2966  00000A  CFFA F02B          	movff	pclath,??_INTERRUPT_InterruptManager
  2967  00000E  CFFB F02C          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2968  000012  CFE9 F02D          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  2969  000016  CFEA F02E          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  2970  00001A  CFE1 F02F          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  2971  00001E  CFE2 F030          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  2972  000022  CFD9 F031          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  2973  000026  CFDA F032          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  2974  00002A  CFF3 F033          	movff	prodl,??_INTERRUPT_InterruptManager+8
  2975  00002E  CFF4 F034          	movff	prodh,??_INTERRUPT_InterruptManager+9
  2976  000032  CFF6 F035          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  2977  000036  CFF7 F036          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  2978  00003A  CFF8 F037          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  2979  00003E  CFF5 F038          	movff	tablat,??_INTERRUPT_InterruptManager+13
  2980                           
  2981                           ;interrupt_manager.c: 80: if(PIE3bits.BCL2IE == 1 && PIR3bits.BCL2IF == 1)
  2982  000042  BCA3               	btfsc	4003,6,c	;volatile
  2983  000044  ACA4               	btfss	4004,6,c	;volatile
  2984  000046  D003               	goto	i2l367
  2985                           
  2986                           ;interrupt_manager.c: 81: {
  2987                           ;interrupt_manager.c: 82: I2C2_BusCollisionISR();
  2988  000048  ECE7  F00E         	call	_I2C2_BusCollisionISR	;wreg free
  2989                           
  2990                           ;interrupt_manager.c: 83: }
  2991  00004C  D029               	goto	i2l383
  2992  00004E                     i2l367:
  2993                           
  2994                           ;interrupt_manager.c: 84: else if(PIE3bits.SSP2IE == 1 && PIR3bits.SSP2IF == 1)
  2995  00004E  BEA3               	btfsc	4003,7,c	;volatile
  2996  000050  AEA4               	btfss	4004,7,c	;volatile
  2997  000052  D003               	goto	i2l369
  2998                           
  2999                           ;interrupt_manager.c: 85: {
  3000                           ;interrupt_manager.c: 86: I2C2_ISR();
  3001  000054  EC04  F008         	call	_I2C2_ISR	;wreg free
  3002                           
  3003                           ;interrupt_manager.c: 87: }
  3004  000058  D023               	goto	i2l383
  3005  00005A                     i2l369:
  3006                           
  3007                           ;interrupt_manager.c: 88: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
  3008  00005A  B8A3               	btfsc	4003,4,c	;volatile
  3009  00005C  A8A4               	btfss	4004,4,c	;volatile
  3010  00005E  D003               	goto	i2l371
  3011                           
  3012                           ;interrupt_manager.c: 89: {
  3013                           ;interrupt_manager.c: 90: EUSART2_Transmit_ISR();
  3014  000060  EC73  F00D         	call	_EUSART2_Transmit_ISR	;wreg free
  3015                           
  3016                           ;interrupt_manager.c: 91: }
  3017  000064  D01D               	goto	i2l383
  3018  000066                     i2l371:
  3019                           
  3020                           ;interrupt_manager.c: 92: else if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
  3021  000066  BAA3               	btfsc	4003,5,c	;volatile
  3022  000068  AAA4               	btfss	4004,5,c	;volatile
  3023  00006A  D003               	goto	i2l373
  3024                           
  3025                           ;interrupt_manager.c: 93: {
  3026                           ;interrupt_manager.c: 94: EUSART2_Receive_ISR();
  3027  00006C  ECEC  F00D         	call	_EUSART2_Receive_ISR	;wreg free
  3028                           
  3029                           ;interrupt_manager.c: 95: }
  3030  000070  D017               	goto	i2l383
  3031  000072                     i2l373:
  3032                           
  3033                           ;interrupt_manager.c: 96: else if(PIE4bits.CCP4IE == 1 && PIR4bits.CCP4IF == 1)
  3034  000072  B27A               	btfsc	3962,1,c	;volatile
  3035  000074  A27B               	btfss	3963,1,c	;volatile
  3036  000076  D003               	goto	i2l375
  3037                           
  3038                           ;interrupt_manager.c: 97: {
  3039                           ;interrupt_manager.c: 98: CCP4_CaptureISR();
  3040  000078  EC96  F00E         	call	_CCP4_CaptureISR	;wreg free
  3041                           
  3042                           ;interrupt_manager.c: 99: }
  3043  00007C  D011               	goto	i2l383
  3044  00007E                     i2l375:
  3045                           
  3046                           ;interrupt_manager.c: 100: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  3047  00007E  B89D               	btfsc	3997,4,c	;volatile
  3048  000080  A89E               	btfss	3998,4,c	;volatile
  3049  000082  D003               	goto	i2l377
  3050                           
  3051                           ;interrupt_manager.c: 101: {
  3052                           ;interrupt_manager.c: 102: EUSART1_Transmit_ISR();
  3053  000084  EC8C  F00D         	call	_EUSART1_Transmit_ISR	;wreg free
  3054                           
  3055                           ;interrupt_manager.c: 103: }
  3056  000088  D00B               	goto	i2l383
  3057  00008A                     i2l377:
  3058                           
  3059                           ;interrupt_manager.c: 104: else if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  3060  00008A  BA9D               	btfsc	3997,5,c	;volatile
  3061  00008C  AA9E               	btfss	3998,5,c	;volatile
  3062  00008E  D003               	goto	i2l379
  3063                           
  3064                           ;interrupt_manager.c: 105: {
  3065                           ;interrupt_manager.c: 106: EUSART1_Receive_ISR();
  3066  000090  EC02  F00E         	call	_EUSART1_Receive_ISR	;wreg free
  3067                           
  3068                           ;interrupt_manager.c: 107: }
  3069  000094  D005               	goto	i2l383
  3070  000096                     i2l379:
  3071                           
  3072                           ;interrupt_manager.c: 108: else if(PIE2bits.TMR3IE == 1 && PIR2bits.TMR3IF == 1)
  3073  000096  B2A0               	btfsc	4000,1,c	;volatile
  3074  000098  A2A1               	btfss	4001,1,c	;volatile
  3075  00009A  D002               	goto	i2l383
  3076                           
  3077                           ;interrupt_manager.c: 109: {
  3078                           ;interrupt_manager.c: 110: TMR3_ISR();
  3079  00009C  ECBE  F00D         	call	_TMR3_ISR	;wreg free
  3080  0000A0                     i2l383:
  3081  0000A0  C038  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  3082  0000A4  C037  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  3083  0000A8  C036  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  3084  0000AC  C035  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  3085  0000B0  C034  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  3086  0000B4  C033  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  3087  0000B8  C032  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  3088  0000BC  C031  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  3089  0000C0  C030  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  3090  0000C4  C02F  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  3091  0000C8  C02E  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  3092  0000CC  C02D  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  3093  0000D0  C02C  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3094  0000D4  C02B  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3095  0000D8  9243               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3096  0000DA  0011               	retfie		f
  3097  0000DC                     __end_of_INTERRUPT_InterruptManager:
  3098                           	opt stack 0
  3099                           pclatu	equ	0xFFB
  3100                           pclath	equ	0xFFA
  3101                           tblptru	equ	0xFF8
  3102                           tblptrh	equ	0xFF7
  3103                           tblptrl	equ	0xFF6
  3104                           tablat	equ	0xFF5
  3105                           prodh	equ	0xFF4
  3106                           prodl	equ	0xFF3
  3107                           intcon	equ	0xFF2
  3108                           intcon2	equ	0xFF1
  3109                           postinc0	equ	0xFEE
  3110                           plusw0	equ	0xFEB
  3111                           fsr0h	equ	0xFEA
  3112                           fsr0l	equ	0xFE9
  3113                           wreg	equ	0xFE8
  3114                           postdec1	equ	0xFE5
  3115                           fsr1h	equ	0xFE2
  3116                           fsr1l	equ	0xFE1
  3117                           indf2	equ	0xFDF
  3118                           plusw2	equ	0xFDB
  3119                           fsr2h	equ	0xFDA
  3120                           fsr2l	equ	0xFD9
  3121                           status	equ	0xFD8
  3122                           
  3123 ;; *************** function _TMR3_ISR *****************
  3124 ;; Defined at:
  3125 ;;		line 160 in file "mcc_generated_files/tmr3.c"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;		None
  3128 ;; Auto vars:     Size  Location     Type
  3129 ;;		None
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  1    wreg      void 
  3132 ;; Registers used:
  3133 ;;		wreg, status,2, status,0, pclat, tosl, cstack
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3143 ;;Total ram usage:        0 bytes
  3144 ;; Hardware stack levels used:    1
  3145 ;; Hardware stack levels required when called:    2
  3146 ;; This function calls:
  3147 ;;		_TMR3_CallBack
  3148 ;; This function is called by:
  3149 ;;		_INTERRUPT_InterruptManager
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152                           
  3153                           	psect	text24
  3154  001B7C                     __ptext24:
  3155                           	opt stack 0
  3156  001B7C                     _TMR3_ISR:
  3157                           	opt stack 24
  3158                           
  3159                           ;tmr3.c: 162: static volatile unsigned int CountCallBack = 0;
  3160                           ;tmr3.c: 165: PIR2bits.TMR3IF = 0;
  3161                           
  3162                           ;incstack = 0
  3163  001B7C  92A1               	bcf	4001,1,c	;volatile
  3164                           
  3165                           ;tmr3.c: 168: TMR3H = (timer3ReloadVal >> 8);
  3166  001B7E  5041               	movf	_timer3ReloadVal+1,w,c	;volatile
  3167  001B80  6EB3               	movwf	4019,c	;volatile
  3168                           
  3169                           ;tmr3.c: 169: TMR3L = (uint8_t) timer3ReloadVal;
  3170  001B82  C040  FFB2         	movff	_timer3ReloadVal,4018	;volatile
  3171                           
  3172                           ;tmr3.c: 172: if (++CountCallBack >= 30)
  3173  001B86  0100               	movlb	0	; () banked
  3174  001B88  4B9C               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
  3175  001B8A  2B9D               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
  3176  001B8C  0100               	movlb	0	; () banked
  3177  001B8E  519D               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
  3178  001B90  E105               	bnz	i2u204_40
  3179  001B92  0E1E               	movlw	30
  3180  001B94  0100               	movlb	0	; () banked
  3181  001B96  5D9C               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
  3182  001B98  A0D8               	btfss	status,0,c
  3183  001B9A  0012               	return	
  3184  001B9C                     i2u204_40:
  3185                           
  3186                           ; BSR set to: 0
  3187                           ;tmr3.c: 173: {
  3188                           ;tmr3.c: 175: TMR3_CallBack();
  3189  001B9C  EC2D  F00E         	call	_TMR3_CallBack	;wreg free
  3190                           
  3191                           ;tmr3.c: 178: CountCallBack = 0;
  3192  001BA0  0E00               	movlw	0
  3193  001BA2  0100               	movlb	0	; () banked
  3194  001BA4  6F9D               	movwf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
  3195  001BA6  0E00               	movlw	0
  3196  001BA8  6F9C               	movwf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
  3197  001BAA  0012               	return	
  3198  001BAC                     __end_of_TMR3_ISR:
  3199                           	opt stack 0
  3200                           pclatu	equ	0xFFB
  3201                           pclath	equ	0xFFA
  3202                           tblptru	equ	0xFF8
  3203                           tblptrh	equ	0xFF7
  3204                           tblptrl	equ	0xFF6
  3205                           tablat	equ	0xFF5
  3206                           prodh	equ	0xFF4
  3207                           prodl	equ	0xFF3
  3208                           intcon	equ	0xFF2
  3209                           intcon2	equ	0xFF1
  3210                           postinc0	equ	0xFEE
  3211                           plusw0	equ	0xFEB
  3212                           fsr0h	equ	0xFEA
  3213                           fsr0l	equ	0xFE9
  3214                           wreg	equ	0xFE8
  3215                           postdec1	equ	0xFE5
  3216                           fsr1h	equ	0xFE2
  3217                           fsr1l	equ	0xFE1
  3218                           indf2	equ	0xFDF
  3219                           plusw2	equ	0xFDB
  3220                           fsr2h	equ	0xFDA
  3221                           fsr2l	equ	0xFD9
  3222                           status	equ	0xFD8
  3223                           
  3224 ;; *************** function _TMR3_CallBack *****************
  3225 ;; Defined at:
  3226 ;;		line 182 in file "mcc_generated_files/tmr3.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;		None
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;		None
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  1    wreg      void 
  3233 ;; Registers used:
  3234 ;;		wreg, status,2, status,0, pclat, tosl, cstack
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3244 ;;Total ram usage:        0 bytes
  3245 ;; Hardware stack levels used:    1
  3246 ;; Hardware stack levels required when called:    1
  3247 ;; This function calls:
  3248 ;;		Absolute function
  3249 ;;		_TMR3_DefaultInterruptHandler
  3250 ;; This function is called by:
  3251 ;;		_TMR3_ISR
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           	psect	text25
  3256  001C5A                     __ptext25:
  3257                           	opt stack 0
  3258  001C5A                     _TMR3_CallBack:
  3259                           	opt stack 24
  3260                           
  3261                           ;tmr3.c: 185: if(TMR3_InterruptHandler)
  3262                           
  3263                           ; BSR set to: 0
  3264                           ;incstack = 0
  3265  001C5A  0100               	movlb	0	; () banked
  3266  001C5C  51E5               	movf	_TMR3_InterruptHandler& (0+255),w,b
  3267  001C5E  0100               	movlb	0	; () banked
  3268  001C60  11E6               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
  3269  001C62  B4D8               	btfsc	status,2,c
  3270  001C64  0012               	return	
  3271                           
  3272                           ; BSR set to: 0
  3273                           ;tmr3.c: 186: {
  3274                           ;tmr3.c: 187: TMR3_InterruptHandler();
  3275  001C66  D801               	call	i2u176_48
  3276  001C68  0012               	return	
  3277  001C6A                     i2u176_48:
  3278  001C6A  0005               	push	
  3279  001C6C  6EFA               	movwf	pclath,c
  3280  001C6E  0100               	movlb	0	; () banked
  3281  001C70  51E5               	movf	_TMR3_InterruptHandler& (0+255),w,b
  3282  001C72  6EFD               	movwf	tosl,c
  3283  001C74  51E6               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
  3284  001C76  6EFE               	movwf	tosh,c
  3285  001C78  6AFF               	clrf	tosu,c
  3286  001C7A  50FA               	movf	pclath,w,c
  3287  001C7C  0012               	return		;indir
  3288  001C7E                     __end_of_TMR3_CallBack:
  3289                           	opt stack 0
  3290                           tosu	equ	0xFFF
  3291                           tosh	equ	0xFFE
  3292                           tosl	equ	0xFFD
  3293                           pclatu	equ	0xFFB
  3294                           pclath	equ	0xFFA
  3295                           tblptru	equ	0xFF8
  3296                           tblptrh	equ	0xFF7
  3297                           tblptrl	equ	0xFF6
  3298                           tablat	equ	0xFF5
  3299                           prodh	equ	0xFF4
  3300                           prodl	equ	0xFF3
  3301                           intcon	equ	0xFF2
  3302                           intcon2	equ	0xFF1
  3303                           postinc0	equ	0xFEE
  3304                           plusw0	equ	0xFEB
  3305                           fsr0h	equ	0xFEA
  3306                           fsr0l	equ	0xFE9
  3307                           wreg	equ	0xFE8
  3308                           postdec1	equ	0xFE5
  3309                           fsr1h	equ	0xFE2
  3310                           fsr1l	equ	0xFE1
  3311                           indf2	equ	0xFDF
  3312                           plusw2	equ	0xFDB
  3313                           fsr2h	equ	0xFDA
  3314                           fsr2l	equ	0xFD9
  3315                           status	equ	0xFD8
  3316                           
  3317 ;; *************** function _TMR3_DefaultInterruptHandler *****************
  3318 ;; Defined at:
  3319 ;;		line 195 in file "mcc_generated_files/tmr3.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;		None
  3322 ;; Auto vars:     Size  Location     Type
  3323 ;;		None
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  1    wreg      void 
  3326 ;; Registers used:
  3327 ;;		None
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3337 ;;Total ram usage:        0 bytes
  3338 ;; Hardware stack levels used:    1
  3339 ;; This function calls:
  3340 ;;		Nothing
  3341 ;; This function is called by:
  3342 ;;		_TMR3_Initialize
  3343 ;;		_TMR3_CallBack
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347                           	psect	text26
  3348  001DCC                     __ptext26:
  3349                           	opt stack 0
  3350  001DCC                     _TMR3_DefaultInterruptHandler:
  3351                           	opt stack 24
  3352                           
  3353                           ;incstack = 0
  3354  001DCC  0012               	return		;funcret
  3355  001DCE                     __end_of_TMR3_DefaultInterruptHandler:
  3356                           	opt stack 0
  3357                           tosu	equ	0xFFF
  3358                           tosh	equ	0xFFE
  3359                           tosl	equ	0xFFD
  3360                           pclatu	equ	0xFFB
  3361                           pclath	equ	0xFFA
  3362                           tblptru	equ	0xFF8
  3363                           tblptrh	equ	0xFF7
  3364                           tblptrl	equ	0xFF6
  3365                           tablat	equ	0xFF5
  3366                           prodh	equ	0xFF4
  3367                           prodl	equ	0xFF3
  3368                           intcon	equ	0xFF2
  3369                           intcon2	equ	0xFF1
  3370                           postinc0	equ	0xFEE
  3371                           plusw0	equ	0xFEB
  3372                           fsr0h	equ	0xFEA
  3373                           fsr0l	equ	0xFE9
  3374                           wreg	equ	0xFE8
  3375                           postdec1	equ	0xFE5
  3376                           fsr1h	equ	0xFE2
  3377                           fsr1l	equ	0xFE1
  3378                           indf2	equ	0xFDF
  3379                           plusw2	equ	0xFDB
  3380                           fsr2h	equ	0xFDA
  3381                           fsr2l	equ	0xFD9
  3382                           status	equ	0xFD8
  3383                           
  3384 ;; *************** function _I2C2_ISR *****************
  3385 ;; Defined at:
  3386 ;;		line 234 in file "mcc_generated_files/i2c2.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;		None
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;		None
  3391 ;; Return value:  Size  Location     Type
  3392 ;;                  1    wreg      void 
  3393 ;; Registers used:
  3394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/0
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3402 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3403 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3404 ;;Total ram usage:        2 bytes
  3405 ;; Hardware stack levels used:    1
  3406 ;; Hardware stack levels required when called:    1
  3407 ;; This function calls:
  3408 ;;		_I2C2_FunctionComplete
  3409 ;;		_I2C2_Stop
  3410 ;; This function is called by:
  3411 ;;		_INTERRUPT_InterruptManager
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           	psect	text27
  3416  001008                     __ptext27:
  3417                           	opt stack 0
  3418  001008                     _I2C2_ISR:
  3419                           	opt stack 25
  3420                           
  3421                           ;i2c2.c: 237: static uint8_t *pi2c_buf_ptr;
  3422                           ;i2c2.c: 238: static uint16_t i2c_address = 0;
  3423                           ;i2c2.c: 239: static uint8_t i2c_bytes_left = 0;
  3424                           ;i2c2.c: 240: static uint8_t i2c_10bit_address_restart = 0;
  3425                           ;i2c2.c: 242: PIR3bits.SSP2IF = 0;
  3426                           
  3427                           ;incstack = 0
  3428  001008  9EA4               	bcf	4004,7,c	;volatile
  3429                           
  3430                           ;i2c2.c: 246: if(SSP2CON1bits.WCOL)
  3431  00100A  AE6C               	btfss	3948,7,c	;volatile
  3432  00100C  D111               	goto	i2l3669
  3433                           
  3434                           ;i2c2.c: 247: {
  3435                           ;i2c2.c: 249: SSP2CON1bits.WCOL = 0;
  3436  00100E  9E6C               	bcf	3948,7,c	;volatile
  3437                           
  3438                           ;i2c2.c: 250: i2c2_state = S_MASTER_IDLE;
  3439  001010  0E00               	movlw	0
  3440  001012  6E17               	movwf	_i2c2_state,c
  3441                           
  3442                           ;i2c2.c: 251: *(p_i2c2_current->pTrFlag) = I2C2_MESSAGE_FAIL;
  3443  001014  0100               	movlb	0	; () banked
  3444  001016  EE20 F003          	lfsr	2,3
  3445  00101A  51A8               	movf	_p_i2c2_current& (0+255),w,b
  3446  00101C  26D9               	addwf	fsr2l,f,c
  3447  00101E  51A9               	movf	(_p_i2c2_current+1)& (0+255),w,b
  3448  001020  22DA               	addwfc	fsr2h,f,c
  3449  001022  CFDE F024          	movff	postinc2,??_I2C2_ISR
  3450  001026  CFDD F025          	movff	postdec2,??_I2C2_ISR+1
  3451  00102A  C024  FFD9         	movff	??_I2C2_ISR,fsr2l
  3452  00102E  C025  FFDA         	movff	??_I2C2_ISR+1,fsr2h
  3453  001032  0E01               	movlw	1
  3454  001034  6EDF               	movwf	indf2,c
  3455                           
  3456                           ; BSR set to: 0
  3457                           ;i2c2.c: 254: p_i2c2_current = (0);
  3458  001036  0E00               	movlw	0
  3459  001038  0100               	movlb	0	; () banked
  3460  00103A  6FA8               	movwf	_p_i2c2_current& (0+255),b
  3461  00103C  0E00               	movlw	0
  3462  00103E  0100               	movlb	0	; () banked
  3463  001040  6FA9               	movwf	(_p_i2c2_current+1)& (0+255),b
  3464                           
  3465                           ; BSR set to: 0
  3466                           ;i2c2.c: 256: return;
  3467  001042  0012               	return	
  3468  001044                     i2l725:
  3469                           
  3470                           ;i2c2.c: 264: if(i2c2_object.trStatus.s.empty != 1)
  3471  001044  0100               	movlb	0	; () banked
  3472  001046  B391               	btfsc	(_i2c2_object+4)& (0+255),1,b
  3473  001048  0012               	return	
  3474                           
  3475                           ; BSR set to: 0
  3476                           ;i2c2.c: 265: {
  3477                           ;i2c2.c: 267: p_i2c2_current = i2c2_object.pTrHead;
  3478  00104A  C08F  F0A8         	movff	_i2c2_object+2,_p_i2c2_current
  3479  00104E  C090  F0A9         	movff	_i2c2_object+3,_p_i2c2_current+1
  3480                           
  3481                           ; BSR set to: 0
  3482                           ;i2c2.c: 268: i2c2_trb_count = i2c2_object.pTrHead->count;
  3483  001052  C08F  FFD9         	movff	_i2c2_object+2,fsr2l
  3484  001056  C090  FFDA         	movff	_i2c2_object+3,fsr2h
  3485  00105A  50DF               	movf	indf2,w,c
  3486  00105C  6E18               	movwf	_i2c2_trb_count,c
  3487                           
  3488                           ; BSR set to: 0
  3489                           ;i2c2.c: 269: p_i2c2_trb_current = i2c2_object.pTrHead->ptrb_list;
  3490  00105E  0100               	movlb	0	; () banked
  3491  001060  EE20 F001          	lfsr	2,1
  3492  001064  518F               	movf	(_i2c2_object+2)& (0+255),w,b
  3493  001066  26D9               	addwf	fsr2l,f,c
  3494  001068  5190               	movf	(_i2c2_object+3)& (0+255),w,b
  3495  00106A  22DA               	addwfc	fsr2h,f,c
  3496  00106C  CFDE F005          	movff	postinc2,_p_i2c2_trb_current
  3497  001070  CFDD F006          	movff	postdec2,_p_i2c2_trb_current+1
  3498                           
  3499                           ; BSR set to: 0
  3500                           ;i2c2.c: 271: i2c2_object.pTrHead++;
  3501  001074  0E06               	movlw	6
  3502  001076  0100               	movlb	0	; () banked
  3503  001078  278F               	addwf	(_i2c2_object+2)& (0+255),f,b
  3504  00107A  0E00               	movlw	0
  3505  00107C  2390               	addwfc	(_i2c2_object+3)& (0+255),f,b
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;i2c2.c: 274: if(i2c2_object.pTrHead == (i2c2_tr_queue + 1))
  3509  00107E  0ED1               	movlw	low (_i2c2_tr_queue+6)
  3510  001080  0100               	movlb	0	; () banked
  3511  001082  198F               	xorwf	(_i2c2_object+2)& (0+255),w,b
  3512  001084  E10B               	bnz	i2l3561
  3513  001086  0E00               	movlw	high (_i2c2_tr_queue+6)
  3514  001088  0100               	movlb	0	; () banked
  3515  00108A  1990               	xorwf	(_i2c2_object+3)& (0+255),w,b
  3516  00108C  A4D8               	btfss	status,2,c
  3517  00108E  D006               	goto	i2l3561
  3518                           
  3519                           ; BSR set to: 0
  3520                           ;i2c2.c: 275: {
  3521                           ;i2c2.c: 277: i2c2_object.pTrHead = i2c2_tr_queue;
  3522  001090  0ECB               	movlw	low _i2c2_tr_queue
  3523  001092  0100               	movlb	0	; () banked
  3524  001094  6F8F               	movwf	(_i2c2_object+2)& (0+255),b
  3525  001096  0E00               	movlw	high _i2c2_tr_queue
  3526  001098  0100               	movlb	0	; () banked
  3527  00109A  6F90               	movwf	(_i2c2_object+3)& (0+255),b
  3528  00109C                     i2l3561:
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;i2c2.c: 278: }
  3532                           ;i2c2.c: 282: i2c2_object.trStatus.s.full = 0;
  3533  00109C  0100               	movlb	0	; () banked
  3534  00109E  9191               	bcf	(_i2c2_object+4)& (0+255),0,b
  3535                           
  3536                           ;i2c2.c: 285: if(i2c2_object.pTrHead == i2c2_object.pTrTail)
  3537  0010A0  0100               	movlb	0	; () banked
  3538  0010A2  518D               	movf	_i2c2_object& (0+255),w,b
  3539  0010A4  0100               	movlb	0	; () banked
  3540  0010A6  198F               	xorwf	(_i2c2_object+2)& (0+255),w,b
  3541  0010A8  E108               	bnz	i2l728
  3542  0010AA  0100               	movlb	0	; () banked
  3543  0010AC  518E               	movf	(_i2c2_object+1)& (0+255),w,b
  3544  0010AE  0100               	movlb	0	; () banked
  3545  0010B0  1990               	xorwf	(_i2c2_object+3)& (0+255),w,b
  3546  0010B2  A4D8               	btfss	status,2,c
  3547  0010B4  D002               	goto	i2l728
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;i2c2.c: 286: {
  3551                           ;i2c2.c: 288: i2c2_object.trStatus.s.empty = 1;
  3552  0010B6  0100               	movlb	0	; () banked
  3553  0010B8  8391               	bsf	(_i2c2_object+4)& (0+255),1,b
  3554  0010BA                     i2l728:
  3555                           
  3556                           ; BSR set to: 0
  3557                           ;i2c2.c: 289: }
  3558                           ;i2c2.c: 292: SSP2CON2bits.SEN = 1;
  3559  0010BA  806B               	bsf	3947,0,c	;volatile
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;i2c2.c: 295: i2c2_state = S_MASTER_SEND_ADDR;
  3563  0010BC  0E02               	movlw	2
  3564  0010BE  6E17               	movwf	_i2c2_state,c
  3565                           
  3566                           ; BSR set to: 0
  3567                           ;i2c2.c: 296: }
  3568                           ;i2c2.c: 298: break;
  3569  0010C0  0012               	return	
  3570  0010C2                     i2l730:
  3571                           
  3572                           ;i2c2.c: 305: SSP2CON2bits.RSEN = 1;
  3573  0010C2  826B               	bsf	3947,1,c	;volatile
  3574                           
  3575                           ;i2c2.c: 308: i2c2_state = S_MASTER_SEND_ADDR;
  3576  0010C4  0E02               	movlw	2
  3577  0010C6  6E17               	movwf	_i2c2_state,c
  3578                           
  3579                           ;i2c2.c: 310: break;
  3580  0010C8  0012               	return	
  3581  0010CA                     i2l731:
  3582                           
  3583                           ;i2c2.c: 314: if(SSP2CON2bits.ACKSTAT)
  3584  0010CA  AC6B               	btfss	3947,6,c	;volatile
  3585  0010CC  D006               	goto	i2l3573
  3586                           
  3587                           ;i2c2.c: 315: {
  3588                           ;i2c2.c: 316: i2c2_object.i2cErrors++;
  3589  0010CE  0100               	movlb	0	; () banked
  3590  0010D0  2B93               	incf	(_i2c2_object+6)& (0+255),f,b
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;i2c2.c: 317: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  3594  0010D2  0E04               	movlw	4
  3595  0010D4  EC57  F00C         	call	_I2C2_Stop
  3596                           
  3597                           ;i2c2.c: 318: }
  3598  0010D8  0012               	return	
  3599  0010DA                     i2l3573:
  3600                           
  3601                           ;i2c2.c: 319: else
  3602                           ;i2c2.c: 320: {
  3603                           ;i2c2.c: 322: SSP2BUF = (i2c_address >> 1) & 0x00FF;
  3604  0010DA  90D8               	bcf	status,0,c
  3605  0010DC  3020               	rrcf	I2C2_ISR@i2c_address+1,w,c
  3606  0010DE  6E25               	movwf	(??_I2C2_ISR+1)& (0+255),c
  3607  0010E0  301F               	rrcf	I2C2_ISR@i2c_address,w,c
  3608  0010E2  6E24               	movwf	??_I2C2_ISR& (0+255),c
  3609  0010E4  5024               	movf	??_I2C2_ISR,w,c
  3610  0010E6  6E6F               	movwf	3951,c	;volatile
  3611                           
  3612                           ;i2c2.c: 325: if(i2c_address & 0x01)
  3613  0010E8  A01F               	btfss	I2C2_ISR@i2c_address,0,c
  3614  0010EA  D003               	goto	i2l3579
  3615                           
  3616                           ;i2c2.c: 326: {
  3617                           ;i2c2.c: 329: i2c2_state = S_MASTER_10BIT_RESTART;
  3618  0010EC  0E0B               	movlw	11
  3619  0010EE  6E17               	movwf	_i2c2_state,c
  3620                           
  3621                           ;i2c2.c: 330: }
  3622  0010F0  0012               	return	
  3623  0010F2                     i2l3579:
  3624                           
  3625                           ;i2c2.c: 331: else
  3626                           ;i2c2.c: 332: {
  3627                           ;i2c2.c: 334: i2c2_state = S_MASTER_SEND_DATA;
  3628  0010F2  0E03               	movlw	3
  3629  0010F4  6E17               	movwf	_i2c2_state,c
  3630                           
  3631                           ;i2c2.c: 335: }
  3632                           ;i2c2.c: 336: }
  3633                           ;i2c2.c: 338: break;
  3634  0010F6  0012               	return	
  3635  0010F8                     i2l736:
  3636                           
  3637                           ;i2c2.c: 342: if(SSP2CON2bits.ACKSTAT)
  3638  0010F8  AC6B               	btfss	3947,6,c	;volatile
  3639  0010FA  D006               	goto	i2l737
  3640                           
  3641                           ;i2c2.c: 343: {
  3642                           ;i2c2.c: 344: i2c2_object.i2cErrors++;
  3643  0010FC  0100               	movlb	0	; () banked
  3644  0010FE  2B93               	incf	(_i2c2_object+6)& (0+255),f,b
  3645                           
  3646                           ; BSR set to: 0
  3647                           ;i2c2.c: 345: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  3648  001100  0E04               	movlw	4
  3649  001102  EC57  F00C         	call	_I2C2_Stop
  3650                           
  3651                           ;i2c2.c: 346: }
  3652  001106  0012               	return	
  3653  001108                     i2l737:
  3654                           
  3655                           ;i2c2.c: 347: else
  3656                           ;i2c2.c: 348: {
  3657                           ;i2c2.c: 351: SSP2CON2bits.RSEN = 1;
  3658  001108  826B               	bsf	3947,1,c	;volatile
  3659                           
  3660                           ;i2c2.c: 355: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  3661  00110A  C01F  F024         	movff	I2C2_ISR@i2c_address,??_I2C2_ISR
  3662  00110E  C020  F025         	movff	I2C2_ISR@i2c_address+1,??_I2C2_ISR+1
  3663  001112  C025  F024         	movff	??_I2C2_ISR+1,??_I2C2_ISR
  3664  001116  6A25               	clrf	??_I2C2_ISR+1,c
  3665  001118  0E06               	movlw	6
  3666  00111A  1624               	andwf	??_I2C2_ISR,f,c
  3667  00111C  0E00               	movlw	0
  3668  00111E  1625               	andwf	??_I2C2_ISR+1,f,c
  3669  001120  0EF0               	movlw	240
  3670  001122  1024               	iorwf	??_I2C2_ISR,w,c
  3671  001124  6E1F               	movwf	I2C2_ISR@i2c_address,c
  3672  001126  5025               	movf	??_I2C2_ISR+1,w,c
  3673  001128  6E20               	movwf	I2C2_ISR@i2c_address+1,c
  3674                           
  3675                           ;i2c2.c: 358: i2c_address |= 0x0001;
  3676  00112A  801F               	bsf	I2C2_ISR@i2c_address,0,c
  3677                           
  3678                           ;i2c2.c: 361: i2c_10bit_address_restart = 1;
  3679  00112C  0E01               	movlw	1
  3680  00112E  6E07               	movwf	I2C2_ISR@i2c_10bit_address_restart,c
  3681                           
  3682                           ;i2c2.c: 364: i2c2_state = S_MASTER_SEND_ADDR;
  3683  001130  0E02               	movlw	2
  3684  001132  6E17               	movwf	_i2c2_state,c
  3685                           
  3686                           ;i2c2.c: 365: }
  3687                           ;i2c2.c: 367: break;
  3688  001134  0012               	return	
  3689  001136                     i2l3593:
  3690                           
  3691                           ;i2c2.c: 382: if(i2c_10bit_address_restart != 1)
  3692  001136  0407               	decf	I2C2_ISR@i2c_10bit_address_restart,w,c
  3693  001138  B4D8               	btfsc	status,2,c
  3694  00113A  D01A               	goto	i2l741
  3695                           
  3696                           ;i2c2.c: 383: {
  3697                           ;i2c2.c: 385: i2c_address = p_i2c2_trb_current->address;
  3698  00113C  C005  FFD9         	movff	_p_i2c2_trb_current,fsr2l
  3699  001140  C006  FFDA         	movff	_p_i2c2_trb_current+1,fsr2h
  3700  001144  CFDE F01F          	movff	postinc2,I2C2_ISR@i2c_address
  3701  001148  CFDD F020          	movff	postdec2,I2C2_ISR@i2c_address+1
  3702                           
  3703                           ;i2c2.c: 386: pi2c_buf_ptr = p_i2c2_trb_current->pbuffer;
  3704  00114C  EE20 F003          	lfsr	2,3
  3705  001150  5005               	movf	_p_i2c2_trb_current,w,c
  3706  001152  26D9               	addwf	fsr2l,f,c
  3707  001154  5006               	movf	_p_i2c2_trb_current+1,w,c
  3708  001156  22DA               	addwfc	fsr2h,f,c
  3709  001158  CFDE F09A          	movff	postinc2,I2C2_ISR@pi2c_buf_ptr
  3710  00115C  CFDD F09B          	movff	postdec2,I2C2_ISR@pi2c_buf_ptr+1
  3711                           
  3712                           ;i2c2.c: 387: i2c_bytes_left = p_i2c2_trb_current->length;
  3713  001160  EE20 F002          	lfsr	2,2
  3714  001164  5005               	movf	_p_i2c2_trb_current,w,c
  3715  001166  26D9               	addwf	fsr2l,f,c
  3716  001168  5006               	movf	_p_i2c2_trb_current+1,w,c
  3717  00116A  22DA               	addwfc	fsr2h,f,c
  3718  00116C  50DF               	movf	indf2,w,c
  3719  00116E  6E08               	movwf	I2C2_ISR@i2c_bytes_left,c
  3720  001170                     i2l741:
  3721                           
  3722                           ;i2c2.c: 410: else
  3723                           ;i2c2.c: 411: {
  3724                           ;i2c2.c: 413: SSP2BUF = i2c_address;
  3725  001170  C01F  FF6F         	movff	I2C2_ISR@i2c_address,3951	;volatile
  3726                           
  3727                           ;i2c2.c: 414: if(i2c_address & 0x01)
  3728  001174  A01F               	btfss	I2C2_ISR@i2c_address,0,c
  3729  001176  D003               	goto	i2l3613
  3730                           
  3731                           ;i2c2.c: 415: {
  3732                           ;i2c2.c: 417: i2c2_state = S_MASTER_ACK_ADDR;
  3733  001178  0E05               	movlw	5
  3734  00117A  6E17               	movwf	_i2c2_state,c
  3735                           
  3736                           ;i2c2.c: 418: }
  3737  00117C  0012               	return	
  3738  00117E                     i2l3613:
  3739                           
  3740                           ;i2c2.c: 419: else
  3741                           ;i2c2.c: 420: {
  3742                           ;i2c2.c: 422: i2c2_state = S_MASTER_SEND_DATA;
  3743  00117E  0E03               	movlw	3
  3744  001180  6E17               	movwf	_i2c2_state,c
  3745                           
  3746                           ;i2c2.c: 423: }
  3747                           ;i2c2.c: 424: }
  3748                           ;i2c2.c: 425: break;
  3749  001182  0012               	return	
  3750  001184                     i2l747:
  3751                           
  3752                           ;i2c2.c: 430: if(SSP2CON2bits.ACKSTAT)
  3753  001184  AC6B               	btfss	3947,6,c	;volatile
  3754  001186  D007               	goto	i2l3621
  3755                           
  3756                           ;i2c2.c: 431: {
  3757                           ;i2c2.c: 433: i2c2_object.i2cErrors++;
  3758  001188  0100               	movlb	0	; () banked
  3759  00118A  2B93               	incf	(_i2c2_object+6)& (0+255),f,b
  3760                           
  3761                           ; BSR set to: 0
  3762                           ;i2c2.c: 436: SSP2CON2bits.ACKSTAT = 0;
  3763  00118C  9C6B               	bcf	3947,6,c	;volatile
  3764                           
  3765                           ; BSR set to: 0
  3766                           ;i2c2.c: 439: I2C2_Stop(I2C2_DATA_NO_ACK);
  3767  00118E  0E05               	movlw	5
  3768  001190  EC57  F00C         	call	_I2C2_Stop
  3769                           
  3770                           ;i2c2.c: 441: }
  3771  001194  0012               	return	
  3772  001196                     i2l3621:
  3773                           
  3774                           ;i2c2.c: 442: else
  3775                           ;i2c2.c: 443: {
  3776                           ;i2c2.c: 445: if(i2c_bytes_left-- == 0U)
  3777  001196  0608               	decf	I2C2_ISR@i2c_bytes_left,f,c
  3778  001198  2808               	incf	I2C2_ISR@i2c_bytes_left,w,c
  3779  00119A  A4D8               	btfss	status,2,c
  3780  00119C  D00E               	goto	i2l3631
  3781                           
  3782                           ;i2c2.c: 446: {
  3783                           ;i2c2.c: 450: p_i2c2_trb_current++;
  3784  00119E  0E06               	movlw	6
  3785  0011A0  2605               	addwf	_p_i2c2_trb_current,f,c
  3786  0011A2  0E00               	movlw	0
  3787  0011A4  2206               	addwfc	_p_i2c2_trb_current+1,f,c
  3788                           
  3789                           ;i2c2.c: 453: if(--i2c2_trb_count == 0)
  3790  0011A6  2E18               	decfsz	_i2c2_trb_count,f,c
  3791  0011A8  D004               	goto	i2l751
  3792                           
  3793                           ;i2c2.c: 454: {
  3794                           ;i2c2.c: 455: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
  3795  0011AA  0E00               	movlw	0
  3796  0011AC  EC57  F00C         	call	_I2C2_Stop
  3797                           
  3798                           ;i2c2.c: 456: }
  3799  0011B0  0012               	return	
  3800  0011B2                     i2l751:
  3801                           
  3802                           ;i2c2.c: 457: else
  3803                           ;i2c2.c: 458: {
  3804                           ;i2c2.c: 465: SSP2CON2bits.RSEN = 1;
  3805  0011B2  826B               	bsf	3947,1,c	;volatile
  3806                           
  3807                           ;i2c2.c: 468: i2c2_state = S_MASTER_SEND_ADDR;
  3808  0011B4  0E02               	movlw	2
  3809  0011B6  6E17               	movwf	_i2c2_state,c
  3810                           
  3811                           ;i2c2.c: 470: }
  3812                           ;i2c2.c: 471: }
  3813  0011B8  0012               	return	
  3814  0011BA                     i2l3631:
  3815                           
  3816                           ;i2c2.c: 472: else
  3817                           ;i2c2.c: 473: {
  3818                           ;i2c2.c: 475: SSP2BUF = *pi2c_buf_ptr++;
  3819  0011BA  C09A  FFD9         	movff	I2C2_ISR@pi2c_buf_ptr,fsr2l
  3820  0011BE  C09B  FFDA         	movff	I2C2_ISR@pi2c_buf_ptr+1,fsr2h
  3821  0011C2  50DF               	movf	indf2,w,c
  3822  0011C4  6E6F               	movwf	3951,c	;volatile
  3823  0011C6  0100               	movlb	0	; () banked
  3824  0011C8  4B9A               	infsnz	I2C2_ISR@pi2c_buf_ptr& (0+255),f,b
  3825  0011CA  2B9B               	incf	(I2C2_ISR@pi2c_buf_ptr+1)& (0+255),f,b
  3826                           
  3827                           ; BSR set to: 0
  3828                           ;i2c2.c: 476: }
  3829                           ;i2c2.c: 477: }
  3830                           ;i2c2.c: 478: break;
  3831                           
  3832                           ; BSR set to: 0
  3833  0011CC  0012               	return	
  3834  0011CE                     i2l754:
  3835                           
  3836                           ;i2c2.c: 483: if(SSP2CON2bits.ACKSTAT)
  3837  0011CE  AC6B               	btfss	3947,6,c	;volatile
  3838  0011D0  D007               	goto	i2l755
  3839                           
  3840                           ;i2c2.c: 484: {
  3841                           ;i2c2.c: 487: i2c2_object.i2cErrors++;
  3842  0011D2  0100               	movlb	0	; () banked
  3843  0011D4  2B93               	incf	(_i2c2_object+6)& (0+255),f,b
  3844                           
  3845                           ; BSR set to: 0
  3846                           ;i2c2.c: 490: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  3847  0011D6  0E04               	movlw	4
  3848  0011D8  EC57  F00C         	call	_I2C2_Stop
  3849                           
  3850                           ;i2c2.c: 493: SSP2CON2bits.ACKSTAT = 0;
  3851  0011DC  9C6B               	bcf	3947,6,c	;volatile
  3852                           
  3853                           ;i2c2.c: 494: }
  3854  0011DE  0012               	return	
  3855  0011E0                     i2l755:
  3856                           
  3857                           ;i2c2.c: 495: else
  3858                           ;i2c2.c: 496: {
  3859                           ;i2c2.c: 497: SSP2CON2bits.RCEN = 1;
  3860  0011E0  866B               	bsf	3947,3,c	;volatile
  3861                           
  3862                           ;i2c2.c: 498: i2c2_state = S_MASTER_ACK_RCV_DATA;
  3863  0011E2  0E08               	movlw	8
  3864  0011E4  6E17               	movwf	_i2c2_state,c
  3865                           
  3866                           ;i2c2.c: 499: }
  3867                           ;i2c2.c: 500: break;
  3868  0011E6  0012               	return	
  3869  0011E8                     i2l3643:
  3870                           
  3871                           ;i2c2.c: 507: i2c2_state = S_MASTER_ACK_RCV_DATA;
  3872  0011E8  0E08               	movlw	8
  3873  0011EA  6E17               	movwf	_i2c2_state,c
  3874                           
  3875                           ;i2c2.c: 510: SSP2CON2bits.RCEN = 1;
  3876  0011EC  866B               	bsf	3947,3,c	;volatile
  3877                           
  3878                           ;i2c2.c: 512: break;
  3879  0011EE  0012               	return	
  3880  0011F0                     i2l3647:
  3881                           
  3882                           ;i2c2.c: 517: *pi2c_buf_ptr++ = SSP2BUF;
  3883  0011F0  C09A  FFD9         	movff	I2C2_ISR@pi2c_buf_ptr,fsr2l
  3884  0011F4  C09B  FFDA         	movff	I2C2_ISR@pi2c_buf_ptr+1,fsr2h
  3885  0011F8  CF6F FFDF          	movff	3951,indf2	;volatile
  3886  0011FC  0100               	movlb	0	; () banked
  3887  0011FE  4B9A               	infsnz	I2C2_ISR@pi2c_buf_ptr& (0+255),f,b
  3888  001200  2B9B               	incf	(I2C2_ISR@pi2c_buf_ptr+1)& (0+255),f,b
  3889                           
  3890                           ; BSR set to: 0
  3891                           ;i2c2.c: 520: if(--i2c_bytes_left)
  3892  001202  0E01               	movlw	1
  3893  001204  5E08               	subwf	I2C2_ISR@i2c_bytes_left,f,c
  3894  001206  B4D8               	btfsc	status,2,c
  3895  001208  D004               	goto	i2l759
  3896                           
  3897                           ; BSR set to: 0
  3898                           ;i2c2.c: 521: {
  3899                           ;i2c2.c: 527: SSP2CON2bits.ACKDT = 0;
  3900  00120A  9A6B               	bcf	3947,5,c	;volatile
  3901                           
  3902                           ; BSR set to: 0
  3903                           ;i2c2.c: 530: i2c2_state = S_MASTER_RCV_DATA;
  3904  00120C  0E06               	movlw	6
  3905  00120E  6E17               	movwf	_i2c2_state,c
  3906                           
  3907                           ;i2c2.c: 531: }
  3908  001210  D003               	goto	i2l3659
  3909  001212                     i2l759:
  3910                           
  3911                           ; BSR set to: 0
  3912                           ;i2c2.c: 532: else
  3913                           ;i2c2.c: 533: {
  3914                           ;i2c2.c: 537: SSP2CON2bits.ACKDT = 1;
  3915  001212  8A6B               	bsf	3947,5,c	;volatile
  3916                           
  3917                           ; BSR set to: 0
  3918                           ;i2c2.c: 539: I2C2_FunctionComplete();
  3919  001214  EC8A  F00E         	call	_I2C2_FunctionComplete	;wreg free
  3920  001218                     i2l3659:
  3921                           
  3922                           ;i2c2.c: 540: }
  3923                           ;i2c2.c: 543: SSP2CON2bits.ACKEN = 1;
  3924  001218  886B               	bsf	3947,4,c	;volatile
  3925                           
  3926                           ;i2c2.c: 544: break;
  3927  00121A  0012               	return	
  3928  00121C                     i2l3661:
  3929                           
  3930                           ;i2c2.c: 547: case S_MASTER_SEND_STOP:
  3931                           ;i2c2.c: 550: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
  3932  00121C  0E00               	movlw	0
  3933  00121E  EC57  F00C         	call	_I2C2_Stop
  3934                           
  3935                           ;i2c2.c: 551: break;
  3936  001222  0012               	return	
  3937  001224                     i2l3663:
  3938                           
  3939                           ;i2c2.c: 557: i2c2_object.i2cErrors++;
  3940  001224  0100               	movlb	0	; () banked
  3941  001226  2B93               	incf	(_i2c2_object+6)& (0+255),f,b
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;i2c2.c: 558: I2C2_Stop(I2C2_LOST_STATE);
  3945  001228  0E06               	movlw	6
  3946  00122A  EC57  F00C         	call	_I2C2_Stop
  3947                           
  3948                           ;i2c2.c: 561: }
  3949                           
  3950                           ;i2c2.c: 559: break;
  3951  00122E  0012               	return	
  3952  001230                     i2l3669:
  3953  001230  5017               	movf	_i2c2_state,w,c
  3954                           
  3955                           ; Switch size 1, requested type "space"
  3956                           ; Number of cases is 11, Range of values is 0 to 11
  3957                           ; switch strategies available:
  3958                           ; Name         Instructions Cycles
  3959                           ; simple_byte           34    18 (average)
  3960                           ;	Chosen strategy is simple_byte
  3961  001232  0A00               	xorlw	0	; case 0
  3962  001234  B4D8               	btfsc	status,2,c
  3963  001236  D706               	goto	i2l725
  3964  001238  0A01               	xorlw	1	; case 1
  3965  00123A  B4D8               	btfsc	status,2,c
  3966  00123C  D742               	goto	i2l730
  3967  00123E  0A03               	xorlw	3	; case 2
  3968  001240  B4D8               	btfsc	status,2,c
  3969  001242  D779               	goto	i2l3593
  3970  001244  0A01               	xorlw	1	; case 3
  3971  001246  B4D8               	btfsc	status,2,c
  3972  001248  D79D               	goto	i2l747
  3973  00124A  0A07               	xorlw	7	; case 4
  3974  00124C  B4D8               	btfsc	status,2,c
  3975  00124E  D7E6               	goto	i2l3661
  3976  001250  0A01               	xorlw	1	; case 5
  3977  001252  B4D8               	btfsc	status,2,c
  3978  001254  D7BC               	goto	i2l754
  3979  001256  0A03               	xorlw	3	; case 6
  3980  001258  B4D8               	btfsc	status,2,c
  3981  00125A  D7C6               	goto	i2l3643
  3982  00125C  0A01               	xorlw	1	; case 7
  3983  00125E  B4D8               	btfsc	status,2,c
  3984  001260  D7DD               	goto	i2l3661
  3985  001262  0A0F               	xorlw	15	; case 8
  3986  001264  B4D8               	btfsc	status,2,c
  3987  001266  D7C4               	goto	i2l3647
  3988  001268  0A02               	xorlw	2	; case 10
  3989  00126A  B4D8               	btfsc	status,2,c
  3990  00126C  D72E               	goto	i2l731
  3991  00126E  0A01               	xorlw	1	; case 11
  3992  001270  B4D8               	btfsc	status,2,c
  3993  001272  D742               	goto	i2l736
  3994  001274  D7D7               	goto	i2l3663
  3995  001276                     __end_of_I2C2_ISR:
  3996                           	opt stack 0
  3997                           tosu	equ	0xFFF
  3998                           tosh	equ	0xFFE
  3999                           tosl	equ	0xFFD
  4000                           pclatu	equ	0xFFB
  4001                           pclath	equ	0xFFA
  4002                           tblptru	equ	0xFF8
  4003                           tblptrh	equ	0xFF7
  4004                           tblptrl	equ	0xFF6
  4005                           tablat	equ	0xFF5
  4006                           prodh	equ	0xFF4
  4007                           prodl	equ	0xFF3
  4008                           intcon	equ	0xFF2
  4009                           intcon2	equ	0xFF1
  4010                           postinc0	equ	0xFEE
  4011                           plusw0	equ	0xFEB
  4012                           fsr0h	equ	0xFEA
  4013                           fsr0l	equ	0xFE9
  4014                           wreg	equ	0xFE8
  4015                           postdec1	equ	0xFE5
  4016                           fsr1h	equ	0xFE2
  4017                           fsr1l	equ	0xFE1
  4018                           indf2	equ	0xFDF
  4019                           postinc2	equ	0xFDE
  4020                           postdec2	equ	0xFDD
  4021                           plusw2	equ	0xFDB
  4022                           fsr2h	equ	0xFDA
  4023                           fsr2l	equ	0xFD9
  4024                           status	equ	0xFD8
  4025                           
  4026 ;; *************** function _I2C2_Stop *****************
  4027 ;; Defined at:
  4028 ;;		line 582 in file "mcc_generated_files/i2c2.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;  completion_c    1    wreg     enum E7395
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;  completion_c    1    2[COMRAM] enum E7395
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  1    wreg      void 
  4035 ;; Registers used:
  4036 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4043 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4044 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4045 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4046 ;;Total ram usage:        3 bytes
  4047 ;; Hardware stack levels used:    1
  4048 ;; This function calls:
  4049 ;;		Nothing
  4050 ;; This function is called by:
  4051 ;;		_I2C2_ISR
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055                           	psect	text28
  4056  0018AE                     __ptext28:
  4057                           	opt stack 0
  4058  0018AE                     _I2C2_Stop:
  4059                           	opt stack 25
  4060                           
  4061                           ;incstack = 0
  4062                           ;I2C2_Stop@completion_code stored from wreg
  4063  0018AE  6E23               	movwf	I2C2_Stop@completion_code,c
  4064                           
  4065                           ;i2c2.c: 585: SSP2CON2bits.PEN = 1;
  4066  0018B0  846B               	bsf	3947,2,c	;volatile
  4067                           
  4068                           ;i2c2.c: 588: if (p_i2c2_current->pTrFlag != (0))
  4069  0018B2  0100               	movlb	0	; () banked
  4070  0018B4  EE20 F003          	lfsr	2,3
  4071  0018B8  51A8               	movf	_p_i2c2_current& (0+255),w,b
  4072  0018BA  26D9               	addwf	fsr2l,f,c
  4073  0018BC  51A9               	movf	(_p_i2c2_current+1)& (0+255),w,b
  4074  0018BE  22DA               	addwfc	fsr2h,f,c
  4075  0018C0  50DE               	movf	postinc2,w,c
  4076  0018C2  10DE               	iorwf	postinc2,w,c
  4077  0018C4  B4D8               	btfsc	status,2,c
  4078  0018C6  D011               	goto	i2l3433
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;i2c2.c: 589: {
  4082                           ;i2c2.c: 591: *(p_i2c2_current->pTrFlag) = completion_code;
  4083  0018C8  0100               	movlb	0	; () banked
  4084  0018CA  EE20 F003          	lfsr	2,3
  4085  0018CE  51A8               	movf	_p_i2c2_current& (0+255),w,b
  4086  0018D0  26D9               	addwf	fsr2l,f,c
  4087  0018D2  51A9               	movf	(_p_i2c2_current+1)& (0+255),w,b
  4088  0018D4  22DA               	addwfc	fsr2h,f,c
  4089  0018D6  CFDE F021          	movff	postinc2,??_I2C2_Stop
  4090  0018DA  CFDD F022          	movff	postdec2,??_I2C2_Stop+1
  4091  0018DE  C021  FFD9         	movff	??_I2C2_Stop,fsr2l
  4092  0018E2  C022  FFDA         	movff	??_I2C2_Stop+1,fsr2h
  4093  0018E6  C023  FFDF         	movff	I2C2_Stop@completion_code,indf2
  4094  0018EA                     i2l3433:
  4095                           
  4096                           ; BSR set to: 0
  4097                           ;i2c2.c: 592: }
  4098                           ;i2c2.c: 595: i2c2_state = S_MASTER_IDLE;
  4099  0018EA  0E00               	movlw	0
  4100  0018EC  6E17               	movwf	_i2c2_state,c
  4101                           
  4102                           ; BSR set to: 0
  4103  0018EE  0012               	return		;funcret
  4104  0018F0                     __end_of_I2C2_Stop:
  4105                           	opt stack 0
  4106                           tosu	equ	0xFFF
  4107                           tosh	equ	0xFFE
  4108                           tosl	equ	0xFFD
  4109                           pclatu	equ	0xFFB
  4110                           pclath	equ	0xFFA
  4111                           tblptru	equ	0xFF8
  4112                           tblptrh	equ	0xFF7
  4113                           tblptrl	equ	0xFF6
  4114                           tablat	equ	0xFF5
  4115                           prodh	equ	0xFF4
  4116                           prodl	equ	0xFF3
  4117                           intcon	equ	0xFF2
  4118                           intcon2	equ	0xFF1
  4119                           postinc0	equ	0xFEE
  4120                           plusw0	equ	0xFEB
  4121                           fsr0h	equ	0xFEA
  4122                           fsr0l	equ	0xFE9
  4123                           wreg	equ	0xFE8
  4124                           postdec1	equ	0xFE5
  4125                           fsr1h	equ	0xFE2
  4126                           fsr1l	equ	0xFE1
  4127                           indf2	equ	0xFDF
  4128                           postinc2	equ	0xFDE
  4129                           postdec2	equ	0xFDD
  4130                           plusw2	equ	0xFDB
  4131                           fsr2h	equ	0xFDA
  4132                           fsr2l	equ	0xFD9
  4133                           status	equ	0xFD8
  4134                           
  4135 ;; *************** function _I2C2_FunctionComplete *****************
  4136 ;; Defined at:
  4137 ;;		line 564 in file "mcc_generated_files/i2c2.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;		None
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;		None
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  1    wreg      void 
  4144 ;; Registers used:
  4145 ;;		wreg, status,2, status,0
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4155 ;;Total ram usage:        0 bytes
  4156 ;; Hardware stack levels used:    1
  4157 ;; This function calls:
  4158 ;;		Nothing
  4159 ;; This function is called by:
  4160 ;;		_I2C2_ISR
  4161 ;; This function uses a non-reentrant model
  4162 ;;
  4163                           
  4164                           	psect	text29
  4165  001D14                     __ptext29:
  4166                           	opt stack 0
  4167  001D14                     _I2C2_FunctionComplete:
  4168                           	opt stack 25
  4169                           
  4170                           ;i2c2.c: 568: p_i2c2_trb_current++;
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;incstack = 0
  4174  001D14  0E06               	movlw	6
  4175  001D16  2605               	addwf	_p_i2c2_trb_current,f,c
  4176  001D18  0E00               	movlw	0
  4177  001D1A  2206               	addwfc	_p_i2c2_trb_current+1,f,c
  4178                           
  4179                           ;i2c2.c: 571: if(--i2c2_trb_count == 0)
  4180  001D1C  2E18               	decfsz	_i2c2_trb_count,f,c
  4181  001D1E  D003               	goto	i2l3441
  4182                           
  4183                           ;i2c2.c: 572: {
  4184                           ;i2c2.c: 573: i2c2_state = S_MASTER_SEND_STOP;
  4185  001D20  0E04               	movlw	4
  4186  001D22  6E17               	movwf	_i2c2_state,c
  4187                           
  4188                           ;i2c2.c: 574: }
  4189  001D24  0012               	return	
  4190  001D26                     i2l3441:
  4191                           
  4192                           ;i2c2.c: 575: else
  4193                           ;i2c2.c: 576: {
  4194                           ;i2c2.c: 577: i2c2_state = S_MASTER_RESTART;
  4195  001D26  0E01               	movlw	1
  4196  001D28  6E17               	movwf	_i2c2_state,c
  4197  001D2A  0012               	return	
  4198  001D2C                     __end_of_I2C2_FunctionComplete:
  4199                           	opt stack 0
  4200                           tosu	equ	0xFFF
  4201                           tosh	equ	0xFFE
  4202                           tosl	equ	0xFFD
  4203                           pclatu	equ	0xFFB
  4204                           pclath	equ	0xFFA
  4205                           tblptru	equ	0xFF8
  4206                           tblptrh	equ	0xFF7
  4207                           tblptrl	equ	0xFF6
  4208                           tablat	equ	0xFF5
  4209                           prodh	equ	0xFF4
  4210                           prodl	equ	0xFF3
  4211                           intcon	equ	0xFF2
  4212                           intcon2	equ	0xFF1
  4213                           postinc0	equ	0xFEE
  4214                           plusw0	equ	0xFEB
  4215                           fsr0h	equ	0xFEA
  4216                           fsr0l	equ	0xFE9
  4217                           wreg	equ	0xFE8
  4218                           postdec1	equ	0xFE5
  4219                           fsr1h	equ	0xFE2
  4220                           fsr1l	equ	0xFE1
  4221                           indf2	equ	0xFDF
  4222                           postinc2	equ	0xFDE
  4223                           postdec2	equ	0xFDD
  4224                           plusw2	equ	0xFDB
  4225                           fsr2h	equ	0xFDA
  4226                           fsr2l	equ	0xFD9
  4227                           status	equ	0xFD8
  4228                           
  4229 ;; *************** function _I2C2_BusCollisionISR *****************
  4230 ;; Defined at:
  4231 ;;		line 729 in file "mcc_generated_files/i2c2.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;		None
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;		None
  4236 ;; Return value:  Size  Location     Type
  4237 ;;                  1    wreg      void 
  4238 ;; Registers used:
  4239 ;;		None
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4249 ;;Total ram usage:        0 bytes
  4250 ;; Hardware stack levels used:    1
  4251 ;; This function calls:
  4252 ;;		Nothing
  4253 ;; This function is called by:
  4254 ;;		_INTERRUPT_InterruptManager
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           	psect	text30
  4259  001DCE                     __ptext30:
  4260                           	opt stack 0
  4261  001DCE                     _I2C2_BusCollisionISR:
  4262                           	opt stack 26
  4263                           
  4264                           ;incstack = 0
  4265  001DCE  0012               	return		;funcret
  4266  001DD0                     __end_of_I2C2_BusCollisionISR:
  4267                           	opt stack 0
  4268                           tosu	equ	0xFFF
  4269                           tosh	equ	0xFFE
  4270                           tosl	equ	0xFFD
  4271                           pclatu	equ	0xFFB
  4272                           pclath	equ	0xFFA
  4273                           tblptru	equ	0xFF8
  4274                           tblptrh	equ	0xFF7
  4275                           tblptrl	equ	0xFF6
  4276                           tablat	equ	0xFF5
  4277                           prodh	equ	0xFF4
  4278                           prodl	equ	0xFF3
  4279                           intcon	equ	0xFF2
  4280                           intcon2	equ	0xFF1
  4281                           postinc0	equ	0xFEE
  4282                           plusw0	equ	0xFEB
  4283                           fsr0h	equ	0xFEA
  4284                           fsr0l	equ	0xFE9
  4285                           wreg	equ	0xFE8
  4286                           postdec1	equ	0xFE5
  4287                           fsr1h	equ	0xFE2
  4288                           fsr1l	equ	0xFE1
  4289                           indf2	equ	0xFDF
  4290                           postinc2	equ	0xFDE
  4291                           postdec2	equ	0xFDD
  4292                           plusw2	equ	0xFDB
  4293                           fsr2h	equ	0xFDA
  4294                           fsr2l	equ	0xFD9
  4295                           status	equ	0xFD8
  4296                           
  4297 ;; *************** function _EUSART2_Transmit_ISR *****************
  4298 ;; Defined at:
  4299 ;;		line 157 in file "mcc_generated_files/eusart2.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;		None
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;		None
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  1    wreg      void 
  4306 ;; Registers used:
  4307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4317 ;;Total ram usage:        0 bytes
  4318 ;; Hardware stack levels used:    1
  4319 ;; This function calls:
  4320 ;;		Nothing
  4321 ;; This function is called by:
  4322 ;;		_INTERRUPT_InterruptManager
  4323 ;; This function uses a non-reentrant model
  4324 ;;
  4325                           
  4326                           	psect	text31
  4327  001AE6                     __ptext31:
  4328                           	opt stack 0
  4329  001AE6                     _EUSART2_Transmit_ISR:
  4330                           	opt stack 26
  4331                           
  4332                           ;eusart2.c: 161: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
  4333                           
  4334                           ;incstack = 0
  4335  001AE6  0E08               	movlw	8
  4336  001AE8  0100               	movlb	0	; () banked
  4337  001AEA  61EA               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
  4338  001AEC  D013               	goto	i2l439
  4339                           
  4340                           ; BSR set to: 0
  4341                           ;eusart2.c: 162: {
  4342                           ;eusart2.c: 163: TXREG2 = eusart2TxBuffer[eusart2TxTail++];
  4343  001AEE  5016               	movf	_eusart2TxTail,w,c
  4344  001AF0  0D01               	mullw	1
  4345  001AF2  0E85               	movlw	low _eusart2TxBuffer
  4346  001AF4  24F3               	addwf	prodl,w,c
  4347  001AF6  6ED9               	movwf	fsr2l,c
  4348  001AF8  0E00               	movlw	high _eusart2TxBuffer
  4349  001AFA  20F4               	addwfc	prodh,w,c
  4350  001AFC  6EDA               	movwf	fsr2h,c
  4351  001AFE  50DF               	movf	indf2,w,c
  4352  001B00  6E73               	movwf	3955,c	;volatile
  4353                           
  4354                           ; BSR set to: 0
  4355  001B02  2A16               	incf	_eusart2TxTail,f,c
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;eusart2.c: 164: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
  4359  001B04  0E07               	movlw	7
  4360  001B06  6416               	cpfsgt	_eusart2TxTail,c
  4361  001B08  D002               	goto	i2l3681
  4362                           
  4363                           ; BSR set to: 0
  4364                           ;eusart2.c: 165: {
  4365                           ;eusart2.c: 166: eusart2TxTail = 0;
  4366  001B0A  0E00               	movlw	0
  4367  001B0C  6E16               	movwf	_eusart2TxTail,c
  4368  001B0E                     i2l3681:
  4369                           
  4370                           ; BSR set to: 0
  4371                           ;eusart2.c: 167: }
  4372                           ;eusart2.c: 168: eusart2TxBufferRemaining++;
  4373  001B0E  0100               	movlb	0	; () banked
  4374  001B10  2BEA               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
  4375                           
  4376                           ;eusart2.c: 169: }
  4377  001B12  0012               	return	
  4378  001B14                     i2l439:
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;eusart2.c: 170: else
  4382                           ;eusart2.c: 171: {
  4383                           ;eusart2.c: 172: PIE3bits.TX2IE = 0;
  4384  001B14  98A3               	bcf	4003,4,c	;volatile
  4385  001B16  0012               	return	
  4386  001B18                     __end_of_EUSART2_Transmit_ISR:
  4387                           	opt stack 0
  4388                           tosu	equ	0xFFF
  4389                           tosh	equ	0xFFE
  4390                           tosl	equ	0xFFD
  4391                           pclatu	equ	0xFFB
  4392                           pclath	equ	0xFFA
  4393                           tblptru	equ	0xFF8
  4394                           tblptrh	equ	0xFF7
  4395                           tblptrl	equ	0xFF6
  4396                           tablat	equ	0xFF5
  4397                           prodh	equ	0xFF4
  4398                           prodl	equ	0xFF3
  4399                           intcon	equ	0xFF2
  4400                           intcon2	equ	0xFF1
  4401                           postinc0	equ	0xFEE
  4402                           plusw0	equ	0xFEB
  4403                           fsr0h	equ	0xFEA
  4404                           fsr0l	equ	0xFE9
  4405                           wreg	equ	0xFE8
  4406                           postdec1	equ	0xFE5
  4407                           fsr1h	equ	0xFE2
  4408                           fsr1l	equ	0xFE1
  4409                           indf2	equ	0xFDF
  4410                           postinc2	equ	0xFDE
  4411                           postdec2	equ	0xFDD
  4412                           plusw2	equ	0xFDB
  4413                           fsr2h	equ	0xFDA
  4414                           fsr2l	equ	0xFD9
  4415                           status	equ	0xFD8
  4416                           
  4417 ;; *************** function _EUSART2_Receive_ISR *****************
  4418 ;; Defined at:
  4419 ;;		line 176 in file "mcc_generated_files/eusart2.c"
  4420 ;; Parameters:    Size  Location     Type
  4421 ;;		None
  4422 ;; Auto vars:     Size  Location     Type
  4423 ;;		None
  4424 ;; Return value:  Size  Location     Type
  4425 ;;                  1    wreg      void 
  4426 ;; Registers used:
  4427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4428 ;; Tracked objects:
  4429 ;;		On entry : 0/0
  4430 ;;		On exit  : 0/0
  4431 ;;		Unchanged: 0/0
  4432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4437 ;;Total ram usage:        0 bytes
  4438 ;; Hardware stack levels used:    1
  4439 ;; This function calls:
  4440 ;;		Nothing
  4441 ;; This function is called by:
  4442 ;;		_INTERRUPT_InterruptManager
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445                           
  4446                           	psect	text32
  4447  001BD8                     __ptext32:
  4448                           	opt stack 0
  4449  001BD8                     _EUSART2_Receive_ISR:
  4450                           	opt stack 26
  4451                           
  4452                           ;eusart2.c: 178: if(1 == RCSTA2bits.OERR)
  4453                           
  4454                           ; BSR set to: 0
  4455                           ;incstack = 0
  4456  001BD8  A271               	btfss	3953,1,c	;volatile
  4457  001BDA  D002               	goto	i2l3687
  4458                           
  4459                           ;eusart2.c: 179: {
  4460                           ;eusart2.c: 182: RCSTA2bits.CREN = 0;
  4461  001BDC  9871               	bcf	3953,4,c	;volatile
  4462                           
  4463                           ;eusart2.c: 183: RCSTA2bits.CREN = 1;
  4464  001BDE  8871               	bsf	3953,4,c	;volatile
  4465  001BE0                     i2l3687:
  4466                           
  4467                           ;eusart2.c: 184: }
  4468                           ;eusart2.c: 187: eusart2RxBuffer[eusart2RxHead++] = RCREG2;
  4469  001BE0  5013               	movf	_eusart2RxHead,w,c
  4470  001BE2  0D01               	mullw	1
  4471  001BE4  0E7D               	movlw	low _eusart2RxBuffer
  4472  001BE6  24F3               	addwf	prodl,w,c
  4473  001BE8  6ED9               	movwf	fsr2l,c
  4474  001BEA  0E00               	movlw	high _eusart2RxBuffer
  4475  001BEC  20F4               	addwfc	prodh,w,c
  4476  001BEE  6EDA               	movwf	fsr2h,c
  4477  001BF0  CF74 FFDF          	movff	3956,indf2	;volatile
  4478  001BF4  2A13               	incf	_eusart2RxHead,f,c
  4479                           
  4480                           ;eusart2.c: 188: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
  4481  001BF6  0E07               	movlw	7
  4482  001BF8  6413               	cpfsgt	_eusart2RxHead,c
  4483  001BFA  D002               	goto	i2l3695
  4484                           
  4485                           ;eusart2.c: 189: {
  4486                           ;eusart2.c: 190: eusart2RxHead = 0;
  4487  001BFC  0E00               	movlw	0
  4488  001BFE  6E13               	movwf	_eusart2RxHead,c
  4489  001C00                     i2l3695:
  4490                           
  4491                           ;eusart2.c: 191: }
  4492                           ;eusart2.c: 192: eusart2RxCount++;
  4493  001C00  2A12               	incf	_eusart2RxCount,f,c	;volatile
  4494  001C02  0012               	return		;funcret
  4495  001C04                     __end_of_EUSART2_Receive_ISR:
  4496                           	opt stack 0
  4497                           tosu	equ	0xFFF
  4498                           tosh	equ	0xFFE
  4499                           tosl	equ	0xFFD
  4500                           pclatu	equ	0xFFB
  4501                           pclath	equ	0xFFA
  4502                           tblptru	equ	0xFF8
  4503                           tblptrh	equ	0xFF7
  4504                           tblptrl	equ	0xFF6
  4505                           tablat	equ	0xFF5
  4506                           prodh	equ	0xFF4
  4507                           prodl	equ	0xFF3
  4508                           intcon	equ	0xFF2
  4509                           intcon2	equ	0xFF1
  4510                           postinc0	equ	0xFEE
  4511                           plusw0	equ	0xFEB
  4512                           fsr0h	equ	0xFEA
  4513                           fsr0l	equ	0xFE9
  4514                           wreg	equ	0xFE8
  4515                           postdec1	equ	0xFE5
  4516                           fsr1h	equ	0xFE2
  4517                           fsr1l	equ	0xFE1
  4518                           indf2	equ	0xFDF
  4519                           postinc2	equ	0xFDE
  4520                           postdec2	equ	0xFDD
  4521                           plusw2	equ	0xFDB
  4522                           fsr2h	equ	0xFDA
  4523                           fsr2l	equ	0xFD9
  4524                           status	equ	0xFD8
  4525                           
  4526 ;; *************** function _EUSART1_Transmit_ISR *****************
  4527 ;; Defined at:
  4528 ;;		line 168 in file "mcc_generated_files/eusart1.c"
  4529 ;; Parameters:    Size  Location     Type
  4530 ;;		None
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;		None
  4533 ;; Return value:  Size  Location     Type
  4534 ;;                  1    wreg      void 
  4535 ;; Registers used:
  4536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4537 ;; Tracked objects:
  4538 ;;		On entry : 0/0
  4539 ;;		On exit  : 0/0
  4540 ;;		Unchanged: 0/0
  4541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4546 ;;Total ram usage:        0 bytes
  4547 ;; Hardware stack levels used:    1
  4548 ;; This function calls:
  4549 ;;		Nothing
  4550 ;; This function is called by:
  4551 ;;		_INTERRUPT_InterruptManager
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555                           	psect	text33
  4556  001B18                     __ptext33:
  4557                           	opt stack 0
  4558  001B18                     _EUSART1_Transmit_ISR:
  4559                           	opt stack 26
  4560                           
  4561                           ;eusart1.c: 172: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  4562                           
  4563                           ;incstack = 0
  4564  001B18  0E08               	movlw	8
  4565  001B1A  0100               	movlb	0	; () banked
  4566  001B1C  61E9               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
  4567  001B1E  D013               	goto	i2l511
  4568                           
  4569                           ; BSR set to: 0
  4570                           ;eusart1.c: 173: {
  4571                           ;eusart1.c: 174: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  4572  001B20  5011               	movf	_eusart1TxTail,w,c
  4573  001B22  0D01               	mullw	1
  4574  001B24  0E75               	movlw	low _eusart1TxBuffer
  4575  001B26  24F3               	addwf	prodl,w,c
  4576  001B28  6ED9               	movwf	fsr2l,c
  4577  001B2A  0E00               	movlw	high _eusart1TxBuffer
  4578  001B2C  20F4               	addwfc	prodh,w,c
  4579  001B2E  6EDA               	movwf	fsr2h,c
  4580  001B30  50DF               	movf	indf2,w,c
  4581  001B32  6EAD               	movwf	4013,c	;volatile
  4582                           
  4583                           ; BSR set to: 0
  4584  001B34  2A11               	incf	_eusart1TxTail,f,c
  4585                           
  4586                           ; BSR set to: 0
  4587                           ;eusart1.c: 175: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  4588  001B36  0E07               	movlw	7
  4589  001B38  6411               	cpfsgt	_eusart1TxTail,c
  4590  001B3A  D002               	goto	i2l3711
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;eusart1.c: 176: {
  4594                           ;eusart1.c: 177: eusart1TxTail = 0;
  4595  001B3C  0E00               	movlw	0
  4596  001B3E  6E11               	movwf	_eusart1TxTail,c
  4597  001B40                     i2l3711:
  4598                           
  4599                           ; BSR set to: 0
  4600                           ;eusart1.c: 178: }
  4601                           ;eusart1.c: 179: eusart1TxBufferRemaining++;
  4602  001B40  0100               	movlb	0	; () banked
  4603  001B42  2BE9               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  4604                           
  4605                           ;eusart1.c: 180: }
  4606  001B44  0012               	return	
  4607  001B46                     i2l511:
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;eusart1.c: 181: else
  4611                           ;eusart1.c: 182: {
  4612                           ;eusart1.c: 183: PIE1bits.TX1IE = 0;
  4613  001B46  989D               	bcf	3997,4,c	;volatile
  4614  001B48  0012               	return	
  4615  001B4A                     __end_of_EUSART1_Transmit_ISR:
  4616                           	opt stack 0
  4617                           tosu	equ	0xFFF
  4618                           tosh	equ	0xFFE
  4619                           tosl	equ	0xFFD
  4620                           pclatu	equ	0xFFB
  4621                           pclath	equ	0xFFA
  4622                           tblptru	equ	0xFF8
  4623                           tblptrh	equ	0xFF7
  4624                           tblptrl	equ	0xFF6
  4625                           tablat	equ	0xFF5
  4626                           prodh	equ	0xFF4
  4627                           prodl	equ	0xFF3
  4628                           intcon	equ	0xFF2
  4629                           intcon2	equ	0xFF1
  4630                           postinc0	equ	0xFEE
  4631                           plusw0	equ	0xFEB
  4632                           fsr0h	equ	0xFEA
  4633                           fsr0l	equ	0xFE9
  4634                           wreg	equ	0xFE8
  4635                           postdec1	equ	0xFE5
  4636                           fsr1h	equ	0xFE2
  4637                           fsr1l	equ	0xFE1
  4638                           indf2	equ	0xFDF
  4639                           postinc2	equ	0xFDE
  4640                           postdec2	equ	0xFDD
  4641                           plusw2	equ	0xFDB
  4642                           fsr2h	equ	0xFDA
  4643                           fsr2l	equ	0xFD9
  4644                           status	equ	0xFD8
  4645                           
  4646 ;; *************** function _EUSART1_Receive_ISR *****************
  4647 ;; Defined at:
  4648 ;;		line 187 in file "mcc_generated_files/eusart1.c"
  4649 ;; Parameters:    Size  Location     Type
  4650 ;;		None
  4651 ;; Auto vars:     Size  Location     Type
  4652 ;;		None
  4653 ;; Return value:  Size  Location     Type
  4654 ;;                  1    wreg      void 
  4655 ;; Registers used:
  4656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4666 ;;Total ram usage:        0 bytes
  4667 ;; Hardware stack levels used:    1
  4668 ;; This function calls:
  4669 ;;		Nothing
  4670 ;; This function is called by:
  4671 ;;		_INTERRUPT_InterruptManager
  4672 ;; This function uses a non-reentrant model
  4673 ;;
  4674                           
  4675                           	psect	text34
  4676  001C04                     __ptext34:
  4677                           	opt stack 0
  4678  001C04                     _EUSART1_Receive_ISR:
  4679                           	opt stack 26
  4680                           
  4681                           ;eusart1.c: 189: if(1 == RCSTA1bits.OERR)
  4682                           
  4683                           ; BSR set to: 0
  4684                           ;incstack = 0
  4685  001C04  A2AB               	btfss	4011,1,c	;volatile
  4686  001C06  D002               	goto	i2l3717
  4687                           
  4688                           ;eusart1.c: 190: {
  4689                           ;eusart1.c: 193: RCSTA1bits.CREN = 0;
  4690  001C08  98AB               	bcf	4011,4,c	;volatile
  4691                           
  4692                           ;eusart1.c: 194: RCSTA1bits.CREN = 1;
  4693  001C0A  88AB               	bsf	4011,4,c	;volatile
  4694  001C0C                     i2l3717:
  4695                           
  4696                           ;eusart1.c: 195: }
  4697                           ;eusart1.c: 198: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  4698  001C0C  500E               	movf	_eusart1RxHead,w,c
  4699  001C0E  0D01               	mullw	1
  4700  001C10  0E6D               	movlw	low _eusart1RxBuffer
  4701  001C12  24F3               	addwf	prodl,w,c
  4702  001C14  6ED9               	movwf	fsr2l,c
  4703  001C16  0E00               	movlw	high _eusart1RxBuffer
  4704  001C18  20F4               	addwfc	prodh,w,c
  4705  001C1A  6EDA               	movwf	fsr2h,c
  4706  001C1C  CFAE FFDF          	movff	4014,indf2	;volatile
  4707  001C20  2A0E               	incf	_eusart1RxHead,f,c
  4708                           
  4709                           ;eusart1.c: 199: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  4710  001C22  0E07               	movlw	7
  4711  001C24  640E               	cpfsgt	_eusart1RxHead,c
  4712  001C26  D002               	goto	i2l3725
  4713                           
  4714                           ;eusart1.c: 200: {
  4715                           ;eusart1.c: 201: eusart1RxHead = 0;
  4716  001C28  0E00               	movlw	0
  4717  001C2A  6E0E               	movwf	_eusart1RxHead,c
  4718  001C2C                     i2l3725:
  4719                           
  4720                           ;eusart1.c: 202: }
  4721                           ;eusart1.c: 203: eusart1RxCount++;
  4722  001C2C  2A0D               	incf	_eusart1RxCount,f,c	;volatile
  4723                           
  4724                           ;eusart1.c: 206: if (sizeof(eusart1RxBuffer) == 1) {
  4725  001C2E  0012               	return	
  4726  001C30                     __end_of_EUSART1_Receive_ISR:
  4727                           	opt stack 0
  4728                           tosu	equ	0xFFF
  4729                           tosh	equ	0xFFE
  4730                           tosl	equ	0xFFD
  4731                           pclatu	equ	0xFFB
  4732                           pclath	equ	0xFFA
  4733                           tblptru	equ	0xFF8
  4734                           tblptrh	equ	0xFF7
  4735                           tblptrl	equ	0xFF6
  4736                           tablat	equ	0xFF5
  4737                           prodh	equ	0xFF4
  4738                           prodl	equ	0xFF3
  4739                           intcon	equ	0xFF2
  4740                           intcon2	equ	0xFF1
  4741                           postinc0	equ	0xFEE
  4742                           plusw0	equ	0xFEB
  4743                           fsr0h	equ	0xFEA
  4744                           fsr0l	equ	0xFE9
  4745                           wreg	equ	0xFE8
  4746                           postdec1	equ	0xFE5
  4747                           fsr1h	equ	0xFE2
  4748                           fsr1l	equ	0xFE1
  4749                           indf2	equ	0xFDF
  4750                           postinc2	equ	0xFDE
  4751                           postdec2	equ	0xFDD
  4752                           plusw2	equ	0xFDB
  4753                           fsr2h	equ	0xFDA
  4754                           fsr2l	equ	0xFD9
  4755                           status	equ	0xFD8
  4756                           
  4757 ;; *************** function _CCP4_CaptureISR *****************
  4758 ;; Defined at:
  4759 ;;		line 83 in file "mcc_generated_files/ccp4.c"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;		None
  4762 ;; Auto vars:     Size  Location     Type
  4763 ;;  module          2    8[COMRAM] struct CCPR4Reg_tag
  4764 ;; Return value:  Size  Location     Type
  4765 ;;                  1    wreg      void 
  4766 ;; Registers used:
  4767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4768 ;; Tracked objects:
  4769 ;;		On entry : 0/0
  4770 ;;		On exit  : 0/0
  4771 ;;		Unchanged: 0/0
  4772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4774 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4776 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4777 ;;Total ram usage:        2 bytes
  4778 ;; Hardware stack levels used:    1
  4779 ;; Hardware stack levels required when called:    5
  4780 ;; This function calls:
  4781 ;;		_CCP4_CallBack
  4782 ;; This function is called by:
  4783 ;;		_INTERRUPT_InterruptManager
  4784 ;; This function uses a non-reentrant model
  4785 ;;
  4786                           
  4787                           	psect	text35
  4788  001D2C                     __ptext35:
  4789                           	opt stack 0
  4790  001D2C                     _CCP4_CaptureISR:
  4791                           	opt stack 21
  4792                           
  4793                           ;ccp4.c: 85: CCP_PERIOD_REG_T module;
  4794                           ;ccp4.c: 91: module.ccpr4l = CCPR4L;
  4795                           
  4796                           ;incstack = 0
  4797  001D2C  CF58 F029          	movff	3928,CCP4_CaptureISR@module	;volatile
  4798                           
  4799                           ;ccp4.c: 92: module.ccpr4h = CCPR4H;
  4800  001D30  CF59 F02A          	movff	3929,CCP4_CaptureISR@module+1	;volatile
  4801                           
  4802                           ;ccp4.c: 95: CCP4_CallBack(module.ccpr4_16Bit);
  4803  001D34  C029  F027         	movff	CCP4_CaptureISR@module,CCP4_CallBack@capturedValue
  4804  001D38  C02A  F028         	movff	CCP4_CaptureISR@module+1,CCP4_CallBack@capturedValue+1
  4805  001D3C  ECB4  F00C         	call	_CCP4_CallBack	;wreg free
  4806  001D40  0012               	return		;funcret
  4807  001D42                     __end_of_CCP4_CaptureISR:
  4808                           	opt stack 0
  4809                           tosu	equ	0xFFF
  4810                           tosh	equ	0xFFE
  4811                           tosl	equ	0xFFD
  4812                           pclatu	equ	0xFFB
  4813                           pclath	equ	0xFFA
  4814                           tblptru	equ	0xFF8
  4815                           tblptrh	equ	0xFF7
  4816                           tblptrl	equ	0xFF6
  4817                           tablat	equ	0xFF5
  4818                           prodh	equ	0xFF4
  4819                           prodl	equ	0xFF3
  4820                           intcon	equ	0xFF2
  4821                           intcon2	equ	0xFF1
  4822                           postinc0	equ	0xFEE
  4823                           plusw0	equ	0xFEB
  4824                           fsr0h	equ	0xFEA
  4825                           fsr0l	equ	0xFE9
  4826                           wreg	equ	0xFE8
  4827                           postdec1	equ	0xFE5
  4828                           fsr1h	equ	0xFE2
  4829                           fsr1l	equ	0xFE1
  4830                           indf2	equ	0xFDF
  4831                           postinc2	equ	0xFDE
  4832                           postdec2	equ	0xFDD
  4833                           plusw2	equ	0xFDB
  4834                           fsr2h	equ	0xFDA
  4835                           fsr2l	equ	0xFD9
  4836                           status	equ	0xFD8
  4837                           
  4838 ;; *************** function _CCP4_CallBack *****************
  4839 ;; Defined at:
  4840 ;;		line 98 in file "mcc_generated_files/ccp4.c"
  4841 ;; Parameters:    Size  Location     Type
  4842 ;;  capturedValu    2    6[COMRAM] unsigned int 
  4843 ;; Auto vars:     Size  Location     Type
  4844 ;;		None
  4845 ;; Return value:  Size  Location     Type
  4846 ;;                  1    wreg      void 
  4847 ;; Registers used:
  4848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4849 ;; Tracked objects:
  4850 ;;		On entry : 0/0
  4851 ;;		On exit  : 0/0
  4852 ;;		Unchanged: 0/0
  4853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4854 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4857 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4858 ;;Total ram usage:        2 bytes
  4859 ;; Hardware stack levels used:    1
  4860 ;; Hardware stack levels required when called:    4
  4861 ;; This function calls:
  4862 ;;		_delay_25ms_n_times
  4863 ;;		_playPattern
  4864 ;; This function is called by:
  4865 ;;		_CCP4_CaptureISR
  4866 ;; This function uses a non-reentrant model
  4867 ;;
  4868                           
  4869                           	psect	text36
  4870  001968                     __ptext36:
  4871                           	opt stack 0
  4872  001968                     _CCP4_CallBack:
  4873                           	opt stack 21
  4874                           
  4875                           ;ccp4.c: 101: if (capturedValue > 40192) {
  4876                           
  4877                           ;incstack = 0
  4878  001968  0427               	decf	CCP4_CallBack@capturedValue,w,c
  4879  00196A  0E9D               	movlw	157
  4880  00196C  5828               	subwfb	CCP4_CallBack@capturedValue+1,w,c
  4881  00196E  A0D8               	btfss	status,0,c
  4882  001970  D002               	goto	i2l3413
  4883                           
  4884                           ;ccp4.c: 102: PIR4bits.CCP4IF = 0;
  4885  001972  927B               	bcf	3963,1,c	;volatile
  4886                           
  4887                           ;ccp4.c: 103: return;
  4888  001974  0012               	return	
  4889  001976                     i2l3413:
  4890                           
  4891                           ;ccp4.c: 104: }
  4892                           ;ccp4.c: 107: if (last_pattern_was_heal) {
  4893  001976  5019               	movf	_last_pattern_was_heal,w,c
  4894  001978  B4D8               	btfsc	status,2,c
  4895  00197A  D006               	goto	i2l3419
  4896                           
  4897                           ;ccp4.c: 108: last_pattern_was_heal = 0;
  4898  00197C  0E00               	movlw	0
  4899  00197E  6E19               	movwf	_last_pattern_was_heal,c
  4900                           
  4901                           ;ccp4.c: 109: playPattern(LED_DAMAGE);
  4902  001980  0E01               	movlw	1
  4903  001982  EC96  F00C         	call	_playPattern
  4904                           
  4905                           ;ccp4.c: 110: } else {
  4906  001986  D005               	goto	i2l3423
  4907  001988                     i2l3419:
  4908                           
  4909                           ;ccp4.c: 111: last_pattern_was_heal = 1;
  4910  001988  0E01               	movlw	1
  4911  00198A  6E19               	movwf	_last_pattern_was_heal,c
  4912                           
  4913                           ;ccp4.c: 112: playPattern(LED_HEAL);
  4914  00198C  0E02               	movlw	2
  4915  00198E  EC96  F00C         	call	_playPattern
  4916  001992                     i2l3423:
  4917                           
  4918                           ;ccp4.c: 113: }
  4919                           ;ccp4.c: 116: delay_25ms_n_times(80);
  4920  001992  0E00               	movlw	0
  4921  001994  6E22               	movwf	delay_25ms_n_times@n+1,c
  4922  001996  0E50               	movlw	80
  4923  001998  6E21               	movwf	delay_25ms_n_times@n,c
  4924  00199A  ECA5  F00D         	call	_delay_25ms_n_times	;wreg free
  4925                           
  4926                           ;ccp4.c: 117: PIR4bits.CCP4IF = 0;
  4927  00199E  927B               	bcf	3963,1,c	;volatile
  4928  0019A0  0012               	return		;funcret
  4929  0019A2                     __end_of_CCP4_CallBack:
  4930                           	opt stack 0
  4931                           tosu	equ	0xFFF
  4932                           tosh	equ	0xFFE
  4933                           tosl	equ	0xFFD
  4934                           pclatu	equ	0xFFB
  4935                           pclath	equ	0xFFA
  4936                           tblptru	equ	0xFF8
  4937                           tblptrh	equ	0xFF7
  4938                           tblptrl	equ	0xFF6
  4939                           tablat	equ	0xFF5
  4940                           prodh	equ	0xFF4
  4941                           prodl	equ	0xFF3
  4942                           intcon	equ	0xFF2
  4943                           intcon2	equ	0xFF1
  4944                           postinc0	equ	0xFEE
  4945                           plusw0	equ	0xFEB
  4946                           fsr0h	equ	0xFEA
  4947                           fsr0l	equ	0xFE9
  4948                           wreg	equ	0xFE8
  4949                           postdec1	equ	0xFE5
  4950                           fsr1h	equ	0xFE2
  4951                           fsr1l	equ	0xFE1
  4952                           indf2	equ	0xFDF
  4953                           postinc2	equ	0xFDE
  4954                           postdec2	equ	0xFDD
  4955                           plusw2	equ	0xFDB
  4956                           fsr2h	equ	0xFDA
  4957                           fsr2l	equ	0xFD9
  4958                           status	equ	0xFD8
  4959                           
  4960 ;; *************** function _playPattern *****************
  4961 ;; Defined at:
  4962 ;;		line 258 in file "LEDLogic.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;  pattern         1    wreg     enum E7587
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;  pattern         1    5[COMRAM] enum E7587
  4967 ;; Return value:  Size  Location     Type
  4968 ;;                  1    wreg      void 
  4969 ;; Registers used:
  4970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4971 ;; Tracked objects:
  4972 ;;		On entry : 0/0
  4973 ;;		On exit  : 0/0
  4974 ;;		Unchanged: 0/0
  4975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4977 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4979 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4980 ;;Total ram usage:        1 bytes
  4981 ;; Hardware stack levels used:    1
  4982 ;; Hardware stack levels required when called:    3
  4983 ;; This function calls:
  4984 ;;		_clearPattern
  4985 ;;		_playDamage
  4986 ;;		_playHeal
  4987 ;;		_playStun
  4988 ;;		_pulse
  4989 ;; This function is called by:
  4990 ;;		_CCP4_CallBack
  4991 ;;		_stunned
  4992 ;;		_detonate
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           	psect	text37
  4997  00192C                     __ptext37:
  4998                           	opt stack 0
  4999  00192C                     _playPattern:
  5000                           	opt stack 21
  5001                           
  5002                           ;incstack = 0
  5003                           ;playPattern@pattern stored from wreg
  5004  00192C  6E26               	movwf	playPattern@pattern,c
  5005                           
  5006                           ;LEDLogic.c: 263: switch(pattern) {
  5007  00192E  D00C               	goto	i2l3333
  5008  001930                     i2l3323:
  5009                           
  5010                           ;LEDLogic.c: 265: playDamage();
  5011  001930  ECE0  F00A         	call	_playDamage	;wreg free
  5012                           
  5013                           ;LEDLogic.c: 266: break;
  5014  001934  D016               	goto	i2l3335
  5015  001936                     i2l3325:
  5016                           
  5017                           ;LEDLogic.c: 268: playHeal();
  5018  001936  EC29  F00A         	call	_playHeal	;wreg free
  5019                           
  5020                           ;LEDLogic.c: 269: break;
  5021  00193A  D013               	goto	i2l3335
  5022  00193C                     i2l3327:
  5023                           
  5024                           ;LEDLogic.c: 271: playStun();
  5025  00193C  ECB9  F009         	call	_playStun	;wreg free
  5026                           
  5027                           ;LEDLogic.c: 272: break;
  5028  001940  D010               	goto	i2l3335
  5029  001942                     i2l3329:
  5030                           
  5031                           ;LEDLogic.c: 274: pulse();
  5032  001942  EC88  F00A         	call	_pulse	;wreg free
  5033                           
  5034                           ;LEDLogic.c: 276: }
  5035                           
  5036                           ;LEDLogic.c: 275: break;
  5037  001946  D00D               	goto	i2l3335
  5038  001948                     i2l3333:
  5039  001948  5026               	movf	playPattern@pattern,w,c
  5040                           
  5041                           ; Switch size 1, requested type "space"
  5042                           ; Number of cases is 4, Range of values is 1 to 5
  5043                           ; switch strategies available:
  5044                           ; Name         Instructions Cycles
  5045                           ; simple_byte           13     7 (average)
  5046                           ;	Chosen strategy is simple_byte
  5047  00194A  0A01               	xorlw	1	; case 1
  5048  00194C  B4D8               	btfsc	status,2,c
  5049  00194E  D7F0               	goto	i2l3323
  5050  001950  0A03               	xorlw	3	; case 2
  5051  001952  B4D8               	btfsc	status,2,c
  5052  001954  D7F0               	goto	i2l3325
  5053  001956  0A01               	xorlw	1	; case 3
  5054  001958  B4D8               	btfsc	status,2,c
  5055  00195A  D7F0               	goto	i2l3327
  5056  00195C  0A06               	xorlw	6	; case 5
  5057  00195E  B4D8               	btfsc	status,2,c
  5058  001960  D7F0               	goto	i2l3329
  5059  001962                     i2l3335:
  5060                           
  5061                           ;LEDLogic.c: 278: clearPattern();
  5062  001962  EC3F  F00E         	call	_clearPattern	;wreg free
  5063  001966  0012               	return		;funcret
  5064  001968                     __end_of_playPattern:
  5065                           	opt stack 0
  5066                           tosu	equ	0xFFF
  5067                           tosh	equ	0xFFE
  5068                           tosl	equ	0xFFD
  5069                           pclatu	equ	0xFFB
  5070                           pclath	equ	0xFFA
  5071                           tblptru	equ	0xFF8
  5072                           tblptrh	equ	0xFF7
  5073                           tblptrl	equ	0xFF6
  5074                           tablat	equ	0xFF5
  5075                           prodh	equ	0xFF4
  5076                           prodl	equ	0xFF3
  5077                           intcon	equ	0xFF2
  5078                           intcon2	equ	0xFF1
  5079                           postinc0	equ	0xFEE
  5080                           plusw0	equ	0xFEB
  5081                           fsr0h	equ	0xFEA
  5082                           fsr0l	equ	0xFE9
  5083                           wreg	equ	0xFE8
  5084                           postdec1	equ	0xFE5
  5085                           fsr1h	equ	0xFE2
  5086                           fsr1l	equ	0xFE1
  5087                           indf2	equ	0xFDF
  5088                           postinc2	equ	0xFDE
  5089                           postdec2	equ	0xFDD
  5090                           plusw2	equ	0xFDB
  5091                           fsr2h	equ	0xFDA
  5092                           fsr2l	equ	0xFD9
  5093                           status	equ	0xFD8
  5094                           
  5095 ;; *************** function _pulse *****************
  5096 ;; Defined at:
  5097 ;;		line 234 in file "LEDLogic.c"
  5098 ;; Parameters:    Size  Location     Type
  5099 ;;		None
  5100 ;; Auto vars:     Size  Location     Type
  5101 ;;  i               1    4[COMRAM] unsigned char 
  5102 ;;  pixel           1    3[COMRAM] unsigned char 
  5103 ;; Return value:  Size  Location     Type
  5104 ;;                  1    wreg      void 
  5105 ;; Registers used:
  5106 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5107 ;; Tracked objects:
  5108 ;;		On entry : 0/0
  5109 ;;		On exit  : 0/0
  5110 ;;		Unchanged: 0/0
  5111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5113 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5115 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5116 ;;Total ram usage:        2 bytes
  5117 ;; Hardware stack levels used:    1
  5118 ;; Hardware stack levels required when called:    1
  5119 ;; This function calls:
  5120 ;;		_delay_25ms_n_times
  5121 ;;		_draw
  5122 ;; This function is called by:
  5123 ;;		_playPattern
  5124 ;; This function uses a non-reentrant model
  5125 ;;
  5126                           
  5127                           	psect	text38
  5128  001510                     __ptext38:
  5129                           	opt stack 0
  5130  001510                     _pulse:
  5131                           	opt stack 22
  5132                           
  5133                           ;LEDLogic.c: 236: uint8_t pixel;
  5134                           ;LEDLogic.c: 238: for (uint8_t i = 0; i < 64; i++) {
  5135                           
  5136                           ;incstack = 0
  5137  001510  0E00               	movlw	0
  5138  001512  6E25               	movwf	pulse@i,c
  5139  001514                     i2l3295:
  5140  001514  0E3F               	movlw	63
  5141  001516  6425               	cpfsgt	pulse@i,c
  5142  001518  D001               	goto	i2l3299
  5143  00151A  0012               	return	
  5144  00151C                     i2l3299:
  5145                           
  5146                           ;LEDLogic.c: 240: for (pixel = 0; pixel < 24; pixel++) {
  5147  00151C  0E00               	movlw	0
  5148  00151E  6E24               	movwf	pulse@pixel,c
  5149  001520                     i2l3301:
  5150  001520  0E17               	movlw	23
  5151  001522  6424               	cpfsgt	pulse@pixel,c
  5152  001524  D001               	goto	i2l3305
  5153  001526  D042               	goto	i2l3315
  5154  001528                     i2l3305:
  5155                           
  5156                           ;LEDLogic.c: 242: if (i == 0) {
  5157  001528  5025               	movf	pulse@i,w,c
  5158  00152A  A4D8               	btfss	status,2,c
  5159  00152C  D01F               	goto	i2l3309
  5160                           
  5161                           ;LEDLogic.c: 243: greenPixels[i] = 0;
  5162  00152E  5025               	movf	pulse@i,w,c
  5163  001530  0D01               	mullw	1
  5164  001532  0E18               	movlw	low _greenPixels
  5165  001534  24F3               	addwf	prodl,w,c
  5166  001536  6ED9               	movwf	fsr2l,c
  5167  001538  0E01               	movlw	high _greenPixels
  5168  00153A  20F4               	addwfc	prodh,w,c
  5169  00153C  6EDA               	movwf	fsr2h,c
  5170  00153E  0E00               	movlw	0
  5171  001540  6EDF               	movwf	indf2,c
  5172                           
  5173                           ;LEDLogic.c: 244: redPixels[i] = 0;
  5174  001542  5025               	movf	pulse@i,w,c
  5175  001544  0D01               	mullw	1
  5176  001546  0E30               	movlw	low _redPixels
  5177  001548  24F3               	addwf	prodl,w,c
  5178  00154A  6ED9               	movwf	fsr2l,c
  5179  00154C  0E01               	movlw	high _redPixels
  5180  00154E  20F4               	addwfc	prodh,w,c
  5181  001550  6EDA               	movwf	fsr2h,c
  5182  001552  0E00               	movlw	0
  5183  001554  6EDF               	movwf	indf2,c
  5184                           
  5185                           ;LEDLogic.c: 245: bluePixels[i] = 0;
  5186  001556  5025               	movf	pulse@i,w,c
  5187  001558  0D01               	mullw	1
  5188  00155A  0E00               	movlw	low _bluePixels
  5189  00155C  24F3               	addwf	prodl,w,c
  5190  00155E  6ED9               	movwf	fsr2l,c
  5191  001560  0E01               	movlw	high _bluePixels
  5192  001562  20F4               	addwfc	prodh,w,c
  5193  001564  6EDA               	movwf	fsr2h,c
  5194  001566  0E00               	movlw	0
  5195  001568  6EDF               	movwf	indf2,c
  5196                           
  5197                           ;LEDLogic.c: 246: } else {
  5198  00156A  D01E               	goto	i2l3311
  5199  00156C                     i2l3309:
  5200                           
  5201                           ;LEDLogic.c: 247: greenPixels[i] += 4;
  5202  00156C  5025               	movf	pulse@i,w,c
  5203  00156E  0D01               	mullw	1
  5204  001570  0E18               	movlw	low _greenPixels
  5205  001572  24F3               	addwf	prodl,w,c
  5206  001574  6ED9               	movwf	fsr2l,c
  5207  001576  0E01               	movlw	high _greenPixels
  5208  001578  20F4               	addwfc	prodh,w,c
  5209  00157A  6EDA               	movwf	fsr2h,c
  5210  00157C  0E04               	movlw	4
  5211  00157E  26DF               	addwf	indf2,f,c
  5212                           
  5213                           ;LEDLogic.c: 248: redPixels[i] += 4;
  5214  001580  5025               	movf	pulse@i,w,c
  5215  001582  0D01               	mullw	1
  5216  001584  0E30               	movlw	low _redPixels
  5217  001586  24F3               	addwf	prodl,w,c
  5218  001588  6ED9               	movwf	fsr2l,c
  5219  00158A  0E01               	movlw	high _redPixels
  5220  00158C  20F4               	addwfc	prodh,w,c
  5221  00158E  6EDA               	movwf	fsr2h,c
  5222  001590  0E04               	movlw	4
  5223  001592  26DF               	addwf	indf2,f,c
  5224                           
  5225                           ;LEDLogic.c: 249: bluePixels[i] += 4;
  5226  001594  5025               	movf	pulse@i,w,c
  5227  001596  0D01               	mullw	1
  5228  001598  0E00               	movlw	low _bluePixels
  5229  00159A  24F3               	addwf	prodl,w,c
  5230  00159C  6ED9               	movwf	fsr2l,c
  5231  00159E  0E01               	movlw	high _bluePixels
  5232  0015A0  20F4               	addwfc	prodh,w,c
  5233  0015A2  6EDA               	movwf	fsr2h,c
  5234  0015A4  0E04               	movlw	4
  5235  0015A6  26DF               	addwf	indf2,f,c
  5236  0015A8                     i2l3311:
  5237  0015A8  2A24               	incf	pulse@pixel,f,c
  5238  0015AA  D7BA               	goto	i2l3301
  5239  0015AC                     i2l3315:
  5240                           
  5241                           ;LEDLogic.c: 250: }
  5242                           ;LEDLogic.c: 251: }
  5243                           ;LEDLogic.c: 253: draw();
  5244  0015AC  ECD1  F00C         	call	_draw	;wreg free
  5245                           
  5246                           ;LEDLogic.c: 254: delay_25ms_n_times(3);
  5247  0015B0  0E00               	movlw	0
  5248  0015B2  6E22               	movwf	delay_25ms_n_times@n+1,c
  5249  0015B4  0E03               	movlw	3
  5250  0015B6  6E21               	movwf	delay_25ms_n_times@n,c
  5251  0015B8  ECA5  F00D         	call	_delay_25ms_n_times	;wreg free
  5252  0015BC  2A25               	incf	pulse@i,f,c
  5253  0015BE  D7AA               	goto	i2l3295
  5254  0015C0                     __end_of_pulse:
  5255                           	opt stack 0
  5256                           tosu	equ	0xFFF
  5257                           tosh	equ	0xFFE
  5258                           tosl	equ	0xFFD
  5259                           pclatu	equ	0xFFB
  5260                           pclath	equ	0xFFA
  5261                           tblptru	equ	0xFF8
  5262                           tblptrh	equ	0xFF7
  5263                           tblptrl	equ	0xFF6
  5264                           tablat	equ	0xFF5
  5265                           prodh	equ	0xFF4
  5266                           prodl	equ	0xFF3
  5267                           intcon	equ	0xFF2
  5268                           intcon2	equ	0xFF1
  5269                           postinc0	equ	0xFEE
  5270                           plusw0	equ	0xFEB
  5271                           fsr0h	equ	0xFEA
  5272                           fsr0l	equ	0xFE9
  5273                           wreg	equ	0xFE8
  5274                           postdec1	equ	0xFE5
  5275                           fsr1h	equ	0xFE2
  5276                           fsr1l	equ	0xFE1
  5277                           indf2	equ	0xFDF
  5278                           postinc2	equ	0xFDE
  5279                           postdec2	equ	0xFDD
  5280                           plusw2	equ	0xFDB
  5281                           fsr2h	equ	0xFDA
  5282                           fsr2l	equ	0xFD9
  5283                           status	equ	0xFD8
  5284                           
  5285 ;; *************** function _draw *****************
  5286 ;; Defined at:
  5287 ;;		line 293 in file "LEDLogic.c"
  5288 ;; Parameters:    Size  Location     Type
  5289 ;;		None
  5290 ;; Auto vars:     Size  Location     Type
  5291 ;;  bitCount        1    1[COMRAM] char 
  5292 ;;  pixel           1    0[COMRAM] unsigned char 
  5293 ;; Return value:  Size  Location     Type
  5294 ;;                  1    wreg      void 
  5295 ;; Registers used:
  5296 ;;		wreg, status,2, status,0
  5297 ;; Tracked objects:
  5298 ;;		On entry : 0/0
  5299 ;;		On exit  : 0/0
  5300 ;;		Unchanged: 0/0
  5301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5303 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5305 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5306 ;;Total ram usage:        2 bytes
  5307 ;; Hardware stack levels used:    1
  5308 ;; This function calls:
  5309 ;;		Nothing
  5310 ;; This function is called by:
  5311 ;;		_pulse
  5312 ;;		_init_logic
  5313 ;; This function uses a non-reentrant model
  5314 ;;
  5315                           
  5316                           	psect	text39
  5317  0019A2                     __ptext39:
  5318                           	opt stack 0
  5319  0019A2                     _draw:
  5320                           	opt stack 22
  5321                           
  5322                           ;LEDLogic.c: 295: uint8_t pixel;
  5323                           ;LEDLogic.c: 296: int8_t bitCount;
  5324                           ;LEDLogic.c: 298: for (pixel = 0; pixel < 24; pixel++) {
  5325                           
  5326                           ;incstack = 0
  5327  0019A2  0E00               	movlw	0
  5328  0019A4  6E21               	movwf	draw@pixel,c
  5329  0019A6                     i2l3245:
  5330  0019A6  0E17               	movlw	23
  5331  0019A8  6421               	cpfsgt	draw@pixel,c
  5332  0019AA  D001               	goto	i2l3249
  5333  0019AC  D014               	goto	i2l224
  5334  0019AE                     i2l3249:
  5335                           
  5336                           ;LEDLogic.c: 300: for (bitCount = 7; bitCount >= 0; bitCount--) {
  5337  0019AE  0E07               	movlw	7
  5338  0019B0  6E22               	movwf	draw@bitCount,c
  5339  0019B2                     i2l3251:
  5340  0019B2  BE22               	btfsc	draw@bitCount,7,c
  5341  0019B4  D002               	goto	i2l3259
  5342  0019B6  0622               	decf	draw@bitCount,f,c
  5343  0019B8  D7FC               	goto	i2l3251
  5344  0019BA                     i2l3259:
  5345                           
  5346                           ;LEDLogic.c: 311: }
  5347                           ;LEDLogic.c: 313: for (bitCount = 7; bitCount >= 0; bitCount--) {
  5348  0019BA  0E07               	movlw	7
  5349  0019BC  6E22               	movwf	draw@bitCount,c
  5350  0019BE                     i2l3261:
  5351  0019BE  BE22               	btfsc	draw@bitCount,7,c
  5352  0019C0  D002               	goto	i2l3269
  5353  0019C2  0622               	decf	draw@bitCount,f,c
  5354  0019C4  D7FC               	goto	i2l3261
  5355  0019C6                     i2l3269:
  5356                           
  5357                           ;LEDLogic.c: 324: }
  5358                           ;LEDLogic.c: 326: for (bitCount = 7; bitCount >= 0; bitCount--) {
  5359  0019C6  0E07               	movlw	7
  5360  0019C8  6E22               	movwf	draw@bitCount,c
  5361  0019CA                     i2l3271:
  5362  0019CA  BE22               	btfsc	draw@bitCount,7,c
  5363  0019CC  D002               	goto	i2l3279
  5364  0019CE  0622               	decf	draw@bitCount,f,c
  5365  0019D0  D7FC               	goto	i2l3271
  5366  0019D2                     i2l3279:
  5367  0019D2  2A21               	incf	draw@pixel,f,c
  5368  0019D4  D7E8               	goto	i2l3245
  5369  0019D6                     i2l224:
  5370                           
  5371                           ;LEDLogic.c: 337: }
  5372                           ;LEDLogic.c: 338: }
  5373                           ;LEDLogic.c: 340: LATBbits.LATB5 = 0;
  5374  0019D6  9A8A               	bcf	3978,5,c	;volatile
  5375  0019D8  0012               	return		;funcret
  5376  0019DA                     __end_of_draw:
  5377                           	opt stack 0
  5378                           tosu	equ	0xFFF
  5379                           tosh	equ	0xFFE
  5380                           tosl	equ	0xFFD
  5381                           pclatu	equ	0xFFB
  5382                           pclath	equ	0xFFA
  5383                           tblptru	equ	0xFF8
  5384                           tblptrh	equ	0xFF7
  5385                           tblptrl	equ	0xFF6
  5386                           tablat	equ	0xFF5
  5387                           prodh	equ	0xFF4
  5388                           prodl	equ	0xFF3
  5389                           intcon	equ	0xFF2
  5390                           intcon2	equ	0xFF1
  5391                           postinc0	equ	0xFEE
  5392                           plusw0	equ	0xFEB
  5393                           fsr0h	equ	0xFEA
  5394                           fsr0l	equ	0xFE9
  5395                           wreg	equ	0xFE8
  5396                           postdec1	equ	0xFE5
  5397                           fsr1h	equ	0xFE2
  5398                           fsr1l	equ	0xFE1
  5399                           indf2	equ	0xFDF
  5400                           postinc2	equ	0xFDE
  5401                           postdec2	equ	0xFDD
  5402                           plusw2	equ	0xFDB
  5403                           fsr2h	equ	0xFDA
  5404                           fsr2l	equ	0xFD9
  5405                           status	equ	0xFD8
  5406                           
  5407 ;; *************** function _delay_25ms_n_times *****************
  5408 ;; Defined at:
  5409 ;;		line 10 in file "util_functions.c"
  5410 ;; Parameters:    Size  Location     Type
  5411 ;;  n               2    0[COMRAM] unsigned int 
  5412 ;; Auto vars:     Size  Location     Type
  5413 ;;		None
  5414 ;; Return value:  Size  Location     Type
  5415 ;;                  1    wreg      void 
  5416 ;; Registers used:
  5417 ;;		wreg, status,2, status,0
  5418 ;; Tracked objects:
  5419 ;;		On entry : 0/0
  5420 ;;		On exit  : 0/0
  5421 ;;		Unchanged: 0/0
  5422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5423 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5425 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5426 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5427 ;;Total ram usage:        3 bytes
  5428 ;; Hardware stack levels used:    1
  5429 ;; This function calls:
  5430 ;;		Nothing
  5431 ;; This function is called by:
  5432 ;;		_pulse
  5433 ;;		_CCP4_CallBack
  5434 ;;		_stunned
  5435 ;;		_detonate
  5436 ;;		_reset
  5437 ;; This function uses a non-reentrant model
  5438 ;;
  5439                           
  5440                           	psect	text40
  5441  001B4A                     __ptext40:
  5442                           	opt stack 0
  5443  001B4A                     _delay_25ms_n_times:
  5444                           	opt stack 22
  5445  001B4A                     i2l3283:
  5446  001B4A  5022               	movf	delay_25ms_n_times@n+1,w,c
  5447  001B4C  E104               	bnz	i2l3287
  5448  001B4E  0E02               	movlw	2
  5449  001B50  5C21               	subwf	delay_25ms_n_times@n,w,c
  5450  001B52  A0D8               	btfss	status,0,c
  5451  001B54  D00B               	goto	i2l3291
  5452  001B56                     i2l3287:
  5453                           
  5454                           ;util_functions.c: 13: _delay((unsigned long)((25)*(16000000/4000.0)));
  5455  001B56  0E82               	movlw	130
  5456  001B58  6E23               	movwf	??_delay_25ms_n_times& (0+255),c
  5457  001B5A  0EDE               	movlw	222
  5458  001B5C                     i2u336_47:
  5459  001B5C  2EE8               	decfsz	wreg,f,c
  5460  001B5E  D7FE               	goto	i2u336_47
  5461  001B60  2E23               	decfsz	??_delay_25ms_n_times& (0+255),f,c
  5462  001B62  D7FC               	goto	i2u336_47
  5463  001B64  0621               	decf	delay_25ms_n_times@n,f,c
  5464  001B66  A0D8               	btfss	status,0,c
  5465  001B68  0622               	decf	delay_25ms_n_times@n+1,f,c
  5466  001B6A  D7EF               	goto	i2l3283
  5467  001B6C                     i2l3291:
  5468                           
  5469                           ;util_functions.c: 14: }
  5470                           ;util_functions.c: 16: _delay((unsigned long)((25)*(16000000/4000.0)));
  5471  001B6C  0E82               	movlw	130
  5472  001B6E  6E23               	movwf	??_delay_25ms_n_times& (0+255),c
  5473  001B70  0EDE               	movlw	222
  5474  001B72                     i2u337_47:
  5475  001B72  2EE8               	decfsz	wreg,f,c
  5476  001B74  D7FE               	goto	i2u337_47
  5477  001B76  2E23               	decfsz	??_delay_25ms_n_times& (0+255),f,c
  5478  001B78  D7FC               	goto	i2u337_47
  5479  001B7A  0012               	return		;funcret
  5480  001B7C                     __end_of_delay_25ms_n_times:
  5481                           	opt stack 0
  5482                           tosu	equ	0xFFF
  5483                           tosh	equ	0xFFE
  5484                           tosl	equ	0xFFD
  5485                           pclatu	equ	0xFFB
  5486                           pclath	equ	0xFFA
  5487                           tblptru	equ	0xFF8
  5488                           tblptrh	equ	0xFF7
  5489                           tblptrl	equ	0xFF6
  5490                           tablat	equ	0xFF5
  5491                           prodh	equ	0xFF4
  5492                           prodl	equ	0xFF3
  5493                           intcon	equ	0xFF2
  5494                           intcon2	equ	0xFF1
  5495                           postinc0	equ	0xFEE
  5496                           plusw0	equ	0xFEB
  5497                           fsr0h	equ	0xFEA
  5498                           fsr0l	equ	0xFE9
  5499                           wreg	equ	0xFE8
  5500                           postdec1	equ	0xFE5
  5501                           fsr1h	equ	0xFE2
  5502                           fsr1l	equ	0xFE1
  5503                           indf2	equ	0xFDF
  5504                           postinc2	equ	0xFDE
  5505                           postdec2	equ	0xFDD
  5506                           plusw2	equ	0xFDB
  5507                           fsr2h	equ	0xFDA
  5508                           fsr2l	equ	0xFD9
  5509                           status	equ	0xFD8
  5510                           
  5511 ;; *************** function _playStun *****************
  5512 ;; Defined at:
  5513 ;;		line 208 in file "LEDLogic.c"
  5514 ;; Parameters:    Size  Location     Type
  5515 ;;		None
  5516 ;; Auto vars:     Size  Location     Type
  5517 ;;  i               2    1[COMRAM] int 
  5518 ;; Return value:  Size  Location     Type
  5519 ;;                  1    wreg      void 
  5520 ;; Registers used:
  5521 ;;		wreg, status,2, status,0, cstack
  5522 ;; Tracked objects:
  5523 ;;		On entry : 0/0
  5524 ;;		On exit  : 0/0
  5525 ;;		Unchanged: 0/0
  5526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5528 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5529 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5530 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5531 ;;Total ram usage:        3 bytes
  5532 ;; Hardware stack levels used:    1
  5533 ;; Hardware stack levels required when called:    2
  5534 ;; This function calls:
  5535 ;;		_colorGreen
  5536 ;;		_colorYellow
  5537 ;; This function is called by:
  5538 ;;		_playPattern
  5539 ;; This function uses a non-reentrant model
  5540 ;;
  5541                           
  5542                           	psect	text41
  5543  001372                     __ptext41:
  5544                           	opt stack 0
  5545  001372                     _playStun:
  5546                           	opt stack 21
  5547                           
  5548                           ;LEDLogic.c: 210: int i;
  5549                           ;LEDLogic.c: 212: for (i = 0; i < 12; i++) {
  5550                           
  5551                           ;incstack = 0
  5552  001372  0E00               	movlw	0
  5553  001374  6E23               	movwf	playStun@i+1,c
  5554  001376  0E00               	movlw	0
  5555  001378  6E22               	movwf	playStun@i,c
  5556  00137A                     i2l2007:
  5557  00137A  BE23               	btfsc	playStun@i+1,7,c
  5558  00137C  D006               	goto	i2l2011
  5559  00137E  5023               	movf	playStun@i+1,w,c
  5560  001380  E109               	bnz	i2l2017
  5561  001382  0E0C               	movlw	12
  5562  001384  5C22               	subwf	playStun@i,w,c
  5563  001386  B0D8               	btfsc	status,0,c
  5564  001388  D005               	goto	i2l2017
  5565  00138A                     i2l2011:
  5566                           
  5567                           ;LEDLogic.c: 213: colorYellow();
  5568  00138A  EC38  F00B         	call	_colorYellow	;wreg free
  5569  00138E  4A22               	infsnz	playStun@i,f,c
  5570  001390  2A23               	incf	playStun@i+1,f,c
  5571  001392  D7F3               	goto	i2l2007
  5572  001394                     i2l2017:
  5573                           
  5574                           ;LEDLogic.c: 214: }
  5575                           ;LEDLogic.c: 216: for (i = 0; i < 12; i++) {
  5576  001394  0E00               	movlw	0
  5577  001396  6E23               	movwf	playStun@i+1,c
  5578  001398  0E00               	movlw	0
  5579  00139A  6E22               	movwf	playStun@i,c
  5580  00139C                     i2l2019:
  5581  00139C  BE23               	btfsc	playStun@i+1,7,c
  5582  00139E  D006               	goto	i2l2023
  5583  0013A0  5023               	movf	playStun@i+1,w,c
  5584  0013A2  E109               	bnz	i2l2029
  5585  0013A4  0E0C               	movlw	12
  5586  0013A6  5C22               	subwf	playStun@i,w,c
  5587  0013A8  B0D8               	btfsc	status,0,c
  5588  0013AA  D005               	goto	i2l2029
  5589  0013AC                     i2l2023:
  5590                           
  5591                           ;LEDLogic.c: 217: colorGreen();
  5592  0013AC  EC69  F00B         	call	_colorGreen	;wreg free
  5593  0013B0  4A22               	infsnz	playStun@i,f,c
  5594  0013B2  2A23               	incf	playStun@i+1,f,c
  5595  0013B4  D7F3               	goto	i2l2019
  5596  0013B6                     i2l2029:
  5597                           
  5598                           ;LEDLogic.c: 218: }
  5599                           ;LEDLogic.c: 220: _delay((unsigned long)((25)*(16000000/4000.0)));
  5600  0013B6  0E82               	movlw	130
  5601  0013B8  6E21               	movwf	??_playStun& (0+255),c
  5602  0013BA  0EDE               	movlw	222
  5603  0013BC                     i2u338_47:
  5604  0013BC  2EE8               	decfsz	wreg,f,c
  5605  0013BE  D7FE               	goto	i2u338_47
  5606  0013C0  2E21               	decfsz	??_playStun& (0+255),f,c
  5607  0013C2  D7FC               	goto	i2u338_47
  5608                           
  5609                           ;LEDLogic.c: 221: _delay((unsigned long)((25)*(16000000/4000.0)));
  5610  0013C4  0E82               	movlw	130
  5611  0013C6  6E21               	movwf	??_playStun& (0+255),c
  5612  0013C8  0EDE               	movlw	222
  5613  0013CA                     i2u339_47:
  5614  0013CA  2EE8               	decfsz	wreg,f,c
  5615  0013CC  D7FE               	goto	i2u339_47
  5616  0013CE  2E21               	decfsz	??_playStun& (0+255),f,c
  5617  0013D0  D7FC               	goto	i2u339_47
  5618                           
  5619                           ;LEDLogic.c: 222: _delay((unsigned long)((25)*(16000000/4000.0)));
  5620  0013D2  0E82               	movlw	130
  5621  0013D4  6E21               	movwf	??_playStun& (0+255),c
  5622  0013D6  0EDE               	movlw	222
  5623  0013D8                     i2u340_47:
  5624  0013D8  2EE8               	decfsz	wreg,f,c
  5625  0013DA  D7FE               	goto	i2u340_47
  5626  0013DC  2E21               	decfsz	??_playStun& (0+255),f,c
  5627  0013DE  D7FC               	goto	i2u340_47
  5628                           
  5629                           ;LEDLogic.c: 223: _delay((unsigned long)((25)*(16000000/4000.0)));
  5630  0013E0  0E82               	movlw	130
  5631  0013E2  6E21               	movwf	??_playStun& (0+255),c
  5632  0013E4  0EDE               	movlw	222
  5633  0013E6                     i2u341_47:
  5634  0013E6  2EE8               	decfsz	wreg,f,c
  5635  0013E8  D7FE               	goto	i2u341_47
  5636  0013EA  2E21               	decfsz	??_playStun& (0+255),f,c
  5637  0013EC  D7FC               	goto	i2u341_47
  5638                           
  5639                           ;LEDLogic.c: 224: _delay((unsigned long)((25)*(16000000/4000.0)));
  5640  0013EE  0E82               	movlw	130
  5641  0013F0  6E21               	movwf	??_playStun& (0+255),c
  5642  0013F2  0EDE               	movlw	222
  5643  0013F4                     i2u342_47:
  5644  0013F4  2EE8               	decfsz	wreg,f,c
  5645  0013F6  D7FE               	goto	i2u342_47
  5646  0013F8  2E21               	decfsz	??_playStun& (0+255),f,c
  5647  0013FA  D7FC               	goto	i2u342_47
  5648                           
  5649                           ;LEDLogic.c: 225: _delay((unsigned long)((25)*(16000000/4000.0)));
  5650  0013FC  0E82               	movlw	130
  5651  0013FE  6E21               	movwf	??_playStun& (0+255),c
  5652  001400  0EDE               	movlw	222
  5653  001402                     i2u343_47:
  5654  001402  2EE8               	decfsz	wreg,f,c
  5655  001404  D7FE               	goto	i2u343_47
  5656  001406  2E21               	decfsz	??_playStun& (0+255),f,c
  5657  001408  D7FC               	goto	i2u343_47
  5658                           
  5659                           ;LEDLogic.c: 226: _delay((unsigned long)((25)*(16000000/4000.0)));
  5660  00140A  0E82               	movlw	130
  5661  00140C  6E21               	movwf	??_playStun& (0+255),c
  5662  00140E  0EDE               	movlw	222
  5663  001410                     i2u344_47:
  5664  001410  2EE8               	decfsz	wreg,f,c
  5665  001412  D7FE               	goto	i2u344_47
  5666  001414  2E21               	decfsz	??_playStun& (0+255),f,c
  5667  001416  D7FC               	goto	i2u344_47
  5668                           
  5669                           ;LEDLogic.c: 227: _delay((unsigned long)((25)*(16000000/4000.0)));
  5670  001418  0E82               	movlw	130
  5671  00141A  6E21               	movwf	??_playStun& (0+255),c
  5672  00141C  0EDE               	movlw	222
  5673  00141E                     i2u345_47:
  5674  00141E  2EE8               	decfsz	wreg,f,c
  5675  001420  D7FE               	goto	i2u345_47
  5676  001422  2E21               	decfsz	??_playStun& (0+255),f,c
  5677  001424  D7FC               	goto	i2u345_47
  5678                           
  5679                           ;LEDLogic.c: 228: _delay((unsigned long)((25)*(16000000/4000.0)));
  5680  001426  0E82               	movlw	130
  5681  001428  6E21               	movwf	??_playStun& (0+255),c
  5682  00142A  0EDE               	movlw	222
  5683  00142C                     i2u346_47:
  5684  00142C  2EE8               	decfsz	wreg,f,c
  5685  00142E  D7FE               	goto	i2u346_47
  5686  001430  2E21               	decfsz	??_playStun& (0+255),f,c
  5687  001432  D7FC               	goto	i2u346_47
  5688                           
  5689                           ;LEDLogic.c: 229: _delay((unsigned long)((25)*(16000000/4000.0)));
  5690  001434  0E82               	movlw	130
  5691  001436  6E21               	movwf	??_playStun& (0+255),c
  5692  001438  0EDE               	movlw	222
  5693  00143A                     i2u347_47:
  5694  00143A  2EE8               	decfsz	wreg,f,c
  5695  00143C  D7FE               	goto	i2u347_47
  5696  00143E  2E21               	decfsz	??_playStun& (0+255),f,c
  5697  001440  D7FC               	goto	i2u347_47
  5698                           
  5699                           ;LEDLogic.c: 230: _delay((unsigned long)((25)*(16000000/4000.0)));
  5700  001442  0E82               	movlw	130
  5701  001444  6E21               	movwf	??_playStun& (0+255),c
  5702  001446  0EDE               	movlw	222
  5703  001448                     i2u348_47:
  5704  001448  2EE8               	decfsz	wreg,f,c
  5705  00144A  D7FE               	goto	i2u348_47
  5706  00144C  2E21               	decfsz	??_playStun& (0+255),f,c
  5707  00144E  D7FC               	goto	i2u348_47
  5708  001450  0012               	return		;funcret
  5709  001452                     __end_of_playStun:
  5710                           	opt stack 0
  5711                           tosu	equ	0xFFF
  5712                           tosh	equ	0xFFE
  5713                           tosl	equ	0xFFD
  5714                           pclatu	equ	0xFFB
  5715                           pclath	equ	0xFFA
  5716                           tblptru	equ	0xFF8
  5717                           tblptrh	equ	0xFF7
  5718                           tblptrl	equ	0xFF6
  5719                           tablat	equ	0xFF5
  5720                           prodh	equ	0xFF4
  5721                           prodl	equ	0xFF3
  5722                           intcon	equ	0xFF2
  5723                           intcon2	equ	0xFF1
  5724                           postinc0	equ	0xFEE
  5725                           plusw0	equ	0xFEB
  5726                           fsr0h	equ	0xFEA
  5727                           fsr0l	equ	0xFE9
  5728                           wreg	equ	0xFE8
  5729                           postdec1	equ	0xFE5
  5730                           fsr1h	equ	0xFE2
  5731                           fsr1l	equ	0xFE1
  5732                           indf2	equ	0xFDF
  5733                           postinc2	equ	0xFDE
  5734                           postdec2	equ	0xFDD
  5735                           plusw2	equ	0xFDB
  5736                           fsr2h	equ	0xFDA
  5737                           fsr2l	equ	0xFD9
  5738                           status	equ	0xFD8
  5739                           
  5740 ;; *************** function _colorYellow *****************
  5741 ;; Defined at:
  5742 ;;		line 104 in file "LEDLogic.c"
  5743 ;; Parameters:    Size  Location     Type
  5744 ;;		None
  5745 ;; Auto vars:     Size  Location     Type
  5746 ;;		None
  5747 ;; Return value:  Size  Location     Type
  5748 ;;                  1    wreg      void 
  5749 ;; Registers used:
  5750 ;;		cstack
  5751 ;; Tracked objects:
  5752 ;;		On entry : 0/0
  5753 ;;		On exit  : 0/0
  5754 ;;		Unchanged: 0/0
  5755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5760 ;;Total ram usage:        0 bytes
  5761 ;; Hardware stack levels used:    1
  5762 ;; Hardware stack levels required when called:    1
  5763 ;; This function calls:
  5764 ;;		_LEDOne
  5765 ;;		_LEDZero
  5766 ;; This function is called by:
  5767 ;;		_playStun
  5768 ;; This function uses a non-reentrant model
  5769 ;;
  5770                           
  5771                           	psect	text42
  5772  001670                     __ptext42:
  5773                           	opt stack 0
  5774  001670                     _colorYellow:
  5775                           	opt stack 21
  5776                           
  5777                           ;LEDLogic.c: 105: LEDOne();
  5778                           
  5779                           ;incstack = 0
  5780  001670  ECCD  F00E         	call	_LEDOne	;wreg free
  5781                           
  5782                           ;LEDLogic.c: 106: LEDOne();
  5783  001674  ECCD  F00E         	call	_LEDOne	;wreg free
  5784                           
  5785                           ;LEDLogic.c: 107: LEDOne();
  5786  001678  ECCD  F00E         	call	_LEDOne	;wreg free
  5787                           
  5788                           ;LEDLogic.c: 108: LEDOne();
  5789  00167C  ECCD  F00E         	call	_LEDOne	;wreg free
  5790                           
  5791                           ;LEDLogic.c: 109: LEDOne();
  5792  001680  ECCD  F00E         	call	_LEDOne	;wreg free
  5793                           
  5794                           ;LEDLogic.c: 110: LEDOne();
  5795  001684  ECCD  F00E         	call	_LEDOne	;wreg free
  5796                           
  5797                           ;LEDLogic.c: 111: LEDOne();
  5798  001688  ECCD  F00E         	call	_LEDOne	;wreg free
  5799                           
  5800                           ;LEDLogic.c: 112: LEDOne();
  5801  00168C  ECCD  F00E         	call	_LEDOne	;wreg free
  5802                           
  5803                           ;LEDLogic.c: 113: LEDOne();
  5804  001690  ECCD  F00E         	call	_LEDOne	;wreg free
  5805                           
  5806                           ;LEDLogic.c: 114: LEDOne();
  5807  001694  ECCD  F00E         	call	_LEDOne	;wreg free
  5808                           
  5809                           ;LEDLogic.c: 115: LEDOne();
  5810  001698  ECCD  F00E         	call	_LEDOne	;wreg free
  5811                           
  5812                           ;LEDLogic.c: 116: LEDOne();
  5813  00169C  ECCD  F00E         	call	_LEDOne	;wreg free
  5814                           
  5815                           ;LEDLogic.c: 117: LEDOne();
  5816  0016A0  ECCD  F00E         	call	_LEDOne	;wreg free
  5817                           
  5818                           ;LEDLogic.c: 118: LEDOne();
  5819  0016A4  ECCD  F00E         	call	_LEDOne	;wreg free
  5820                           
  5821                           ;LEDLogic.c: 119: LEDOne();
  5822  0016A8  ECCD  F00E         	call	_LEDOne	;wreg free
  5823                           
  5824                           ;LEDLogic.c: 120: LEDOne();
  5825  0016AC  ECCD  F00E         	call	_LEDOne	;wreg free
  5826                           
  5827                           ;LEDLogic.c: 121: LEDZero();
  5828  0016B0  ECD8  F00E         	call	_LEDZero	;wreg free
  5829                           
  5830                           ;LEDLogic.c: 122: LEDZero();
  5831  0016B4  ECD8  F00E         	call	_LEDZero	;wreg free
  5832                           
  5833                           ;LEDLogic.c: 123: LEDZero();
  5834  0016B8  ECD8  F00E         	call	_LEDZero	;wreg free
  5835                           
  5836                           ;LEDLogic.c: 124: LEDZero();
  5837  0016BC  ECD8  F00E         	call	_LEDZero	;wreg free
  5838                           
  5839                           ;LEDLogic.c: 125: LEDZero();
  5840  0016C0  ECD8  F00E         	call	_LEDZero	;wreg free
  5841                           
  5842                           ;LEDLogic.c: 126: LEDZero();
  5843  0016C4  ECD8  F00E         	call	_LEDZero	;wreg free
  5844                           
  5845                           ;LEDLogic.c: 127: LEDZero();
  5846  0016C8  ECD8  F00E         	call	_LEDZero	;wreg free
  5847                           
  5848                           ;LEDLogic.c: 128: LEDZero();
  5849  0016CC  ECD8  F00E         	call	_LEDZero	;wreg free
  5850  0016D0  0012               	return		;funcret
  5851  0016D2                     __end_of_colorYellow:
  5852                           	opt stack 0
  5853                           tosu	equ	0xFFF
  5854                           tosh	equ	0xFFE
  5855                           tosl	equ	0xFFD
  5856                           pclatu	equ	0xFFB
  5857                           pclath	equ	0xFFA
  5858                           tblptru	equ	0xFF8
  5859                           tblptrh	equ	0xFF7
  5860                           tblptrl	equ	0xFF6
  5861                           tablat	equ	0xFF5
  5862                           prodh	equ	0xFF4
  5863                           prodl	equ	0xFF3
  5864                           intcon	equ	0xFF2
  5865                           intcon2	equ	0xFF1
  5866                           postinc0	equ	0xFEE
  5867                           plusw0	equ	0xFEB
  5868                           fsr0h	equ	0xFEA
  5869                           fsr0l	equ	0xFE9
  5870                           wreg	equ	0xFE8
  5871                           postdec1	equ	0xFE5
  5872                           fsr1h	equ	0xFE2
  5873                           fsr1l	equ	0xFE1
  5874                           indf2	equ	0xFDF
  5875                           postinc2	equ	0xFDE
  5876                           postdec2	equ	0xFDD
  5877                           plusw2	equ	0xFDB
  5878                           fsr2h	equ	0xFDA
  5879                           fsr2l	equ	0xFD9
  5880                           status	equ	0xFD8
  5881                           
  5882 ;; *************** function _playHeal *****************
  5883 ;; Defined at:
  5884 ;;		line 188 in file "LEDLogic.c"
  5885 ;; Parameters:    Size  Location     Type
  5886 ;;		None
  5887 ;; Auto vars:     Size  Location     Type
  5888 ;;  i               2    1[COMRAM] int 
  5889 ;; Return value:  Size  Location     Type
  5890 ;;                  1    wreg      void 
  5891 ;; Registers used:
  5892 ;;		wreg, status,2, status,0, cstack
  5893 ;; Tracked objects:
  5894 ;;		On entry : 0/0
  5895 ;;		On exit  : 0/0
  5896 ;;		Unchanged: 0/0
  5897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5899 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5900 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5901 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5902 ;;Total ram usage:        3 bytes
  5903 ;; Hardware stack levels used:    1
  5904 ;; Hardware stack levels required when called:    2
  5905 ;; This function calls:
  5906 ;;		_colorGreen
  5907 ;; This function is called by:
  5908 ;;		_playPattern
  5909 ;; This function uses a non-reentrant model
  5910 ;;
  5911                           
  5912                           	psect	text43
  5913  001452                     __ptext43:
  5914                           	opt stack 0
  5915  001452                     _playHeal:
  5916                           	opt stack 21
  5917                           
  5918                           ;LEDLogic.c: 191: for (int i = 0; i < 24; i++) {
  5919                           
  5920                           ;incstack = 0
  5921  001452  0E00               	movlw	0
  5922  001454  6E23               	movwf	playHeal@i+1,c
  5923  001456  0E00               	movlw	0
  5924  001458  6E22               	movwf	playHeal@i,c
  5925  00145A                     i2l1993:
  5926  00145A  BE23               	btfsc	playHeal@i+1,7,c
  5927  00145C  D006               	goto	i2l1997
  5928  00145E  5023               	movf	playHeal@i+1,w,c
  5929  001460  E109               	bnz	i2l2003
  5930  001462  0E18               	movlw	24
  5931  001464  5C22               	subwf	playHeal@i,w,c
  5932  001466  B0D8               	btfsc	status,0,c
  5933  001468  D005               	goto	i2l2003
  5934  00146A                     i2l1997:
  5935                           
  5936                           ;LEDLogic.c: 192: colorGreen();
  5937  00146A  EC69  F00B         	call	_colorGreen	;wreg free
  5938  00146E  4A22               	infsnz	playHeal@i,f,c
  5939  001470  2A23               	incf	playHeal@i+1,f,c
  5940  001472  D7F3               	goto	i2l1993
  5941  001474                     i2l2003:
  5942                           
  5943                           ;LEDLogic.c: 193: }
  5944                           ;LEDLogic.c: 194: _delay((unsigned long)((25)*(16000000/4000.0)));
  5945  001474  0E82               	movlw	130
  5946  001476  6E21               	movwf	??_playHeal& (0+255),c
  5947  001478  0EDE               	movlw	222
  5948  00147A                     i2u349_47:
  5949  00147A  2EE8               	decfsz	wreg,f,c
  5950  00147C  D7FE               	goto	i2u349_47
  5951  00147E  2E21               	decfsz	??_playHeal& (0+255),f,c
  5952  001480  D7FC               	goto	i2u349_47
  5953                           
  5954                           ;LEDLogic.c: 195: _delay((unsigned long)((25)*(16000000/4000.0)));
  5955  001482  0E82               	movlw	130
  5956  001484  6E21               	movwf	??_playHeal& (0+255),c
  5957  001486  0EDE               	movlw	222
  5958  001488                     i2u350_47:
  5959  001488  2EE8               	decfsz	wreg,f,c
  5960  00148A  D7FE               	goto	i2u350_47
  5961  00148C  2E21               	decfsz	??_playHeal& (0+255),f,c
  5962  00148E  D7FC               	goto	i2u350_47
  5963                           
  5964                           ;LEDLogic.c: 196: _delay((unsigned long)((25)*(16000000/4000.0)));
  5965  001490  0E82               	movlw	130
  5966  001492  6E21               	movwf	??_playHeal& (0+255),c
  5967  001494  0EDE               	movlw	222
  5968  001496                     i2u351_47:
  5969  001496  2EE8               	decfsz	wreg,f,c
  5970  001498  D7FE               	goto	i2u351_47
  5971  00149A  2E21               	decfsz	??_playHeal& (0+255),f,c
  5972  00149C  D7FC               	goto	i2u351_47
  5973                           
  5974                           ;LEDLogic.c: 197: _delay((unsigned long)((25)*(16000000/4000.0)));
  5975  00149E  0E82               	movlw	130
  5976  0014A0  6E21               	movwf	??_playHeal& (0+255),c
  5977  0014A2  0EDE               	movlw	222
  5978  0014A4                     i2u352_47:
  5979  0014A4  2EE8               	decfsz	wreg,f,c
  5980  0014A6  D7FE               	goto	i2u352_47
  5981  0014A8  2E21               	decfsz	??_playHeal& (0+255),f,c
  5982  0014AA  D7FC               	goto	i2u352_47
  5983                           
  5984                           ;LEDLogic.c: 198: _delay((unsigned long)((25)*(16000000/4000.0)));
  5985  0014AC  0E82               	movlw	130
  5986  0014AE  6E21               	movwf	??_playHeal& (0+255),c
  5987  0014B0  0EDE               	movlw	222
  5988  0014B2                     i2u353_47:
  5989  0014B2  2EE8               	decfsz	wreg,f,c
  5990  0014B4  D7FE               	goto	i2u353_47
  5991  0014B6  2E21               	decfsz	??_playHeal& (0+255),f,c
  5992  0014B8  D7FC               	goto	i2u353_47
  5993                           
  5994                           ;LEDLogic.c: 199: _delay((unsigned long)((25)*(16000000/4000.0)));
  5995  0014BA  0E82               	movlw	130
  5996  0014BC  6E21               	movwf	??_playHeal& (0+255),c
  5997  0014BE  0EDE               	movlw	222
  5998  0014C0                     i2u354_47:
  5999  0014C0  2EE8               	decfsz	wreg,f,c
  6000  0014C2  D7FE               	goto	i2u354_47
  6001  0014C4  2E21               	decfsz	??_playHeal& (0+255),f,c
  6002  0014C6  D7FC               	goto	i2u354_47
  6003                           
  6004                           ;LEDLogic.c: 200: _delay((unsigned long)((25)*(16000000/4000.0)));
  6005  0014C8  0E82               	movlw	130
  6006  0014CA  6E21               	movwf	??_playHeal& (0+255),c
  6007  0014CC  0EDE               	movlw	222
  6008  0014CE                     i2u355_47:
  6009  0014CE  2EE8               	decfsz	wreg,f,c
  6010  0014D0  D7FE               	goto	i2u355_47
  6011  0014D2  2E21               	decfsz	??_playHeal& (0+255),f,c
  6012  0014D4  D7FC               	goto	i2u355_47
  6013                           
  6014                           ;LEDLogic.c: 201: _delay((unsigned long)((25)*(16000000/4000.0)));
  6015  0014D6  0E82               	movlw	130
  6016  0014D8  6E21               	movwf	??_playHeal& (0+255),c
  6017  0014DA  0EDE               	movlw	222
  6018  0014DC                     i2u356_47:
  6019  0014DC  2EE8               	decfsz	wreg,f,c
  6020  0014DE  D7FE               	goto	i2u356_47
  6021  0014E0  2E21               	decfsz	??_playHeal& (0+255),f,c
  6022  0014E2  D7FC               	goto	i2u356_47
  6023                           
  6024                           ;LEDLogic.c: 202: _delay((unsigned long)((25)*(16000000/4000.0)));
  6025  0014E4  0E82               	movlw	130
  6026  0014E6  6E21               	movwf	??_playHeal& (0+255),c
  6027  0014E8  0EDE               	movlw	222
  6028  0014EA                     i2u357_47:
  6029  0014EA  2EE8               	decfsz	wreg,f,c
  6030  0014EC  D7FE               	goto	i2u357_47
  6031  0014EE  2E21               	decfsz	??_playHeal& (0+255),f,c
  6032  0014F0  D7FC               	goto	i2u357_47
  6033                           
  6034                           ;LEDLogic.c: 203: _delay((unsigned long)((25)*(16000000/4000.0)));
  6035  0014F2  0E82               	movlw	130
  6036  0014F4  6E21               	movwf	??_playHeal& (0+255),c
  6037  0014F6  0EDE               	movlw	222
  6038  0014F8                     i2u358_47:
  6039  0014F8  2EE8               	decfsz	wreg,f,c
  6040  0014FA  D7FE               	goto	i2u358_47
  6041  0014FC  2E21               	decfsz	??_playHeal& (0+255),f,c
  6042  0014FE  D7FC               	goto	i2u358_47
  6043                           
  6044                           ;LEDLogic.c: 204: _delay((unsigned long)((25)*(16000000/4000.0)));
  6045  001500  0E82               	movlw	130
  6046  001502  6E21               	movwf	??_playHeal& (0+255),c
  6047  001504  0EDE               	movlw	222
  6048  001506                     i2u359_47:
  6049  001506  2EE8               	decfsz	wreg,f,c
  6050  001508  D7FE               	goto	i2u359_47
  6051  00150A  2E21               	decfsz	??_playHeal& (0+255),f,c
  6052  00150C  D7FC               	goto	i2u359_47
  6053  00150E  0012               	return		;funcret
  6054  001510                     __end_of_playHeal:
  6055                           	opt stack 0
  6056                           tosu	equ	0xFFF
  6057                           tosh	equ	0xFFE
  6058                           tosl	equ	0xFFD
  6059                           pclatu	equ	0xFFB
  6060                           pclath	equ	0xFFA
  6061                           tblptru	equ	0xFF8
  6062                           tblptrh	equ	0xFF7
  6063                           tblptrl	equ	0xFF6
  6064                           tablat	equ	0xFF5
  6065                           prodh	equ	0xFF4
  6066                           prodl	equ	0xFF3
  6067                           intcon	equ	0xFF2
  6068                           intcon2	equ	0xFF1
  6069                           postinc0	equ	0xFEE
  6070                           plusw0	equ	0xFEB
  6071                           fsr0h	equ	0xFEA
  6072                           fsr0l	equ	0xFE9
  6073                           wreg	equ	0xFE8
  6074                           postdec1	equ	0xFE5
  6075                           fsr1h	equ	0xFE2
  6076                           fsr1l	equ	0xFE1
  6077                           indf2	equ	0xFDF
  6078                           postinc2	equ	0xFDE
  6079                           postdec2	equ	0xFDD
  6080                           plusw2	equ	0xFDB
  6081                           fsr2h	equ	0xFDA
  6082                           fsr2l	equ	0xFD9
  6083                           status	equ	0xFD8
  6084                           
  6085 ;; *************** function _colorGreen *****************
  6086 ;; Defined at:
  6087 ;;		line 77 in file "LEDLogic.c"
  6088 ;; Parameters:    Size  Location     Type
  6089 ;;		None
  6090 ;; Auto vars:     Size  Location     Type
  6091 ;;		None
  6092 ;; Return value:  Size  Location     Type
  6093 ;;                  1    wreg      void 
  6094 ;; Registers used:
  6095 ;;		cstack
  6096 ;; Tracked objects:
  6097 ;;		On entry : 0/0
  6098 ;;		On exit  : 0/0
  6099 ;;		Unchanged: 0/0
  6100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6105 ;;Total ram usage:        0 bytes
  6106 ;; Hardware stack levels used:    1
  6107 ;; Hardware stack levels required when called:    1
  6108 ;; This function calls:
  6109 ;;		_LEDOne
  6110 ;;		_LEDZero
  6111 ;; This function is called by:
  6112 ;;		_playHeal
  6113 ;;		_playStun
  6114 ;; This function uses a non-reentrant model
  6115 ;;
  6116                           
  6117                           	psect	text44
  6118  0016D2                     __ptext44:
  6119                           	opt stack 0
  6120  0016D2                     _colorGreen:
  6121                           	opt stack 21
  6122                           
  6123                           ;LEDLogic.c: 78: LEDOne();
  6124                           
  6125                           ;incstack = 0
  6126  0016D2  ECCD  F00E         	call	_LEDOne	;wreg free
  6127                           
  6128                           ;LEDLogic.c: 79: LEDOne();
  6129  0016D6  ECCD  F00E         	call	_LEDOne	;wreg free
  6130                           
  6131                           ;LEDLogic.c: 80: LEDOne();
  6132  0016DA  ECCD  F00E         	call	_LEDOne	;wreg free
  6133                           
  6134                           ;LEDLogic.c: 81: LEDOne();
  6135  0016DE  ECCD  F00E         	call	_LEDOne	;wreg free
  6136                           
  6137                           ;LEDLogic.c: 82: LEDOne();
  6138  0016E2  ECCD  F00E         	call	_LEDOne	;wreg free
  6139                           
  6140                           ;LEDLogic.c: 83: LEDOne();
  6141  0016E6  ECCD  F00E         	call	_LEDOne	;wreg free
  6142                           
  6143                           ;LEDLogic.c: 84: LEDOne();
  6144  0016EA  ECCD  F00E         	call	_LEDOne	;wreg free
  6145                           
  6146                           ;LEDLogic.c: 85: LEDOne();
  6147  0016EE  ECCD  F00E         	call	_LEDOne	;wreg free
  6148                           
  6149                           ;LEDLogic.c: 86: LEDZero();
  6150  0016F2  ECD8  F00E         	call	_LEDZero	;wreg free
  6151                           
  6152                           ;LEDLogic.c: 87: LEDZero();
  6153  0016F6  ECD8  F00E         	call	_LEDZero	;wreg free
  6154                           
  6155                           ;LEDLogic.c: 88: LEDZero();
  6156  0016FA  ECD8  F00E         	call	_LEDZero	;wreg free
  6157                           
  6158                           ;LEDLogic.c: 89: LEDZero();
  6159  0016FE  ECD8  F00E         	call	_LEDZero	;wreg free
  6160                           
  6161                           ;LEDLogic.c: 90: LEDZero();
  6162  001702  ECD8  F00E         	call	_LEDZero	;wreg free
  6163                           
  6164                           ;LEDLogic.c: 91: LEDZero();
  6165  001706  ECD8  F00E         	call	_LEDZero	;wreg free
  6166                           
  6167                           ;LEDLogic.c: 92: LEDZero();
  6168  00170A  ECD8  F00E         	call	_LEDZero	;wreg free
  6169                           
  6170                           ;LEDLogic.c: 93: LEDZero();
  6171  00170E  ECD8  F00E         	call	_LEDZero	;wreg free
  6172                           
  6173                           ;LEDLogic.c: 94: LEDZero();
  6174  001712  ECD8  F00E         	call	_LEDZero	;wreg free
  6175                           
  6176                           ;LEDLogic.c: 95: LEDZero();
  6177  001716  ECD8  F00E         	call	_LEDZero	;wreg free
  6178                           
  6179                           ;LEDLogic.c: 96: LEDZero();
  6180  00171A  ECD8  F00E         	call	_LEDZero	;wreg free
  6181                           
  6182                           ;LEDLogic.c: 97: LEDZero();
  6183  00171E  ECD8  F00E         	call	_LEDZero	;wreg free
  6184                           
  6185                           ;LEDLogic.c: 98: LEDZero();
  6186  001722  ECD8  F00E         	call	_LEDZero	;wreg free
  6187                           
  6188                           ;LEDLogic.c: 99: LEDZero();
  6189  001726  ECD8  F00E         	call	_LEDZero	;wreg free
  6190                           
  6191                           ;LEDLogic.c: 100: LEDZero();
  6192  00172A  ECD8  F00E         	call	_LEDZero	;wreg free
  6193                           
  6194                           ;LEDLogic.c: 101: LEDZero();
  6195  00172E  ECD8  F00E         	call	_LEDZero	;wreg free
  6196  001732  0012               	return		;funcret
  6197  001734                     __end_of_colorGreen:
  6198                           	opt stack 0
  6199                           tosu	equ	0xFFF
  6200                           tosh	equ	0xFFE
  6201                           tosl	equ	0xFFD
  6202                           pclatu	equ	0xFFB
  6203                           pclath	equ	0xFFA
  6204                           tblptru	equ	0xFF8
  6205                           tblptrh	equ	0xFF7
  6206                           tblptrl	equ	0xFF6
  6207                           tablat	equ	0xFF5
  6208                           prodh	equ	0xFF4
  6209                           prodl	equ	0xFF3
  6210                           intcon	equ	0xFF2
  6211                           intcon2	equ	0xFF1
  6212                           postinc0	equ	0xFEE
  6213                           plusw0	equ	0xFEB
  6214                           fsr0h	equ	0xFEA
  6215                           fsr0l	equ	0xFE9
  6216                           wreg	equ	0xFE8
  6217                           postdec1	equ	0xFE5
  6218                           fsr1h	equ	0xFE2
  6219                           fsr1l	equ	0xFE1
  6220                           indf2	equ	0xFDF
  6221                           postinc2	equ	0xFDE
  6222                           postdec2	equ	0xFDD
  6223                           plusw2	equ	0xFDB
  6224                           fsr2h	equ	0xFDA
  6225                           fsr2l	equ	0xFD9
  6226                           status	equ	0xFD8
  6227                           
  6228 ;; *************** function _playDamage *****************
  6229 ;; Defined at:
  6230 ;;		line 169 in file "LEDLogic.c"
  6231 ;; Parameters:    Size  Location     Type
  6232 ;;		None
  6233 ;; Auto vars:     Size  Location     Type
  6234 ;;  i               2    1[COMRAM] int 
  6235 ;; Return value:  Size  Location     Type
  6236 ;;                  1    wreg      void 
  6237 ;; Registers used:
  6238 ;;		wreg, status,2, status,0, cstack
  6239 ;; Tracked objects:
  6240 ;;		On entry : 0/0
  6241 ;;		On exit  : 0/0
  6242 ;;		Unchanged: 0/0
  6243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6245 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6246 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6247 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6248 ;;Total ram usage:        3 bytes
  6249 ;; Hardware stack levels used:    1
  6250 ;; Hardware stack levels required when called:    2
  6251 ;; This function calls:
  6252 ;;		_colorRed
  6253 ;; This function is called by:
  6254 ;;		_playPattern
  6255 ;; This function uses a non-reentrant model
  6256 ;;
  6257                           
  6258                           	psect	text45
  6259  0015C0                     __ptext45:
  6260                           	opt stack 0
  6261  0015C0                     _playDamage:
  6262                           	opt stack 21
  6263                           
  6264                           ;LEDLogic.c: 172: for (int i = 0; i < 24; i++) {
  6265                           
  6266                           ;incstack = 0
  6267  0015C0  0E00               	movlw	0
  6268  0015C2  6E23               	movwf	playDamage@i+1,c
  6269  0015C4  0E00               	movlw	0
  6270  0015C6  6E22               	movwf	playDamage@i,c
  6271  0015C8                     i2l1979:
  6272  0015C8  BE23               	btfsc	playDamage@i+1,7,c
  6273  0015CA  D006               	goto	i2l1983
  6274  0015CC  5023               	movf	playDamage@i+1,w,c
  6275  0015CE  E109               	bnz	i2l1989
  6276  0015D0  0E18               	movlw	24
  6277  0015D2  5C22               	subwf	playDamage@i,w,c
  6278  0015D4  B0D8               	btfsc	status,0,c
  6279  0015D6  D005               	goto	i2l1989
  6280  0015D8                     i2l1983:
  6281                           
  6282                           ;LEDLogic.c: 173: colorRed();
  6283  0015D8  EC9A  F00B         	call	_colorRed	;wreg free
  6284  0015DC  4A22               	infsnz	playDamage@i,f,c
  6285  0015DE  2A23               	incf	playDamage@i+1,f,c
  6286  0015E0  D7F3               	goto	i2l1979
  6287  0015E2                     i2l1989:
  6288                           
  6289                           ;LEDLogic.c: 174: }
  6290                           ;LEDLogic.c: 175: _delay((unsigned long)((25)*(16000000/4000.0)));
  6291  0015E2  0E82               	movlw	130
  6292  0015E4  6E21               	movwf	??_playDamage& (0+255),c
  6293  0015E6  0EDE               	movlw	222
  6294  0015E8                     i2u360_47:
  6295  0015E8  2EE8               	decfsz	wreg,f,c
  6296  0015EA  D7FE               	goto	i2u360_47
  6297  0015EC  2E21               	decfsz	??_playDamage& (0+255),f,c
  6298  0015EE  D7FC               	goto	i2u360_47
  6299                           
  6300                           ;LEDLogic.c: 176: _delay((unsigned long)((25)*(16000000/4000.0)));
  6301  0015F0  0E82               	movlw	130
  6302  0015F2  6E21               	movwf	??_playDamage& (0+255),c
  6303  0015F4  0EDE               	movlw	222
  6304  0015F6                     i2u361_47:
  6305  0015F6  2EE8               	decfsz	wreg,f,c
  6306  0015F8  D7FE               	goto	i2u361_47
  6307  0015FA  2E21               	decfsz	??_playDamage& (0+255),f,c
  6308  0015FC  D7FC               	goto	i2u361_47
  6309                           
  6310                           ;LEDLogic.c: 177: _delay((unsigned long)((25)*(16000000/4000.0)));
  6311  0015FE  0E82               	movlw	130
  6312  001600  6E21               	movwf	??_playDamage& (0+255),c
  6313  001602  0EDE               	movlw	222
  6314  001604                     i2u362_47:
  6315  001604  2EE8               	decfsz	wreg,f,c
  6316  001606  D7FE               	goto	i2u362_47
  6317  001608  2E21               	decfsz	??_playDamage& (0+255),f,c
  6318  00160A  D7FC               	goto	i2u362_47
  6319                           
  6320                           ;LEDLogic.c: 178: _delay((unsigned long)((25)*(16000000/4000.0)));
  6321  00160C  0E82               	movlw	130
  6322  00160E  6E21               	movwf	??_playDamage& (0+255),c
  6323  001610  0EDE               	movlw	222
  6324  001612                     i2u363_47:
  6325  001612  2EE8               	decfsz	wreg,f,c
  6326  001614  D7FE               	goto	i2u363_47
  6327  001616  2E21               	decfsz	??_playDamage& (0+255),f,c
  6328  001618  D7FC               	goto	i2u363_47
  6329                           
  6330                           ;LEDLogic.c: 179: _delay((unsigned long)((25)*(16000000/4000.0)));
  6331  00161A  0E82               	movlw	130
  6332  00161C  6E21               	movwf	??_playDamage& (0+255),c
  6333  00161E  0EDE               	movlw	222
  6334  001620                     i2u364_47:
  6335  001620  2EE8               	decfsz	wreg,f,c
  6336  001622  D7FE               	goto	i2u364_47
  6337  001624  2E21               	decfsz	??_playDamage& (0+255),f,c
  6338  001626  D7FC               	goto	i2u364_47
  6339                           
  6340                           ;LEDLogic.c: 180: _delay((unsigned long)((25)*(16000000/4000.0)));
  6341  001628  0E82               	movlw	130
  6342  00162A  6E21               	movwf	??_playDamage& (0+255),c
  6343  00162C  0EDE               	movlw	222
  6344  00162E                     i2u365_47:
  6345  00162E  2EE8               	decfsz	wreg,f,c
  6346  001630  D7FE               	goto	i2u365_47
  6347  001632  2E21               	decfsz	??_playDamage& (0+255),f,c
  6348  001634  D7FC               	goto	i2u365_47
  6349                           
  6350                           ;LEDLogic.c: 181: _delay((unsigned long)((25)*(16000000/4000.0)));
  6351  001636  0E82               	movlw	130
  6352  001638  6E21               	movwf	??_playDamage& (0+255),c
  6353  00163A  0EDE               	movlw	222
  6354  00163C                     i2u366_47:
  6355  00163C  2EE8               	decfsz	wreg,f,c
  6356  00163E  D7FE               	goto	i2u366_47
  6357  001640  2E21               	decfsz	??_playDamage& (0+255),f,c
  6358  001642  D7FC               	goto	i2u366_47
  6359                           
  6360                           ;LEDLogic.c: 182: _delay((unsigned long)((25)*(16000000/4000.0)));
  6361  001644  0E82               	movlw	130
  6362  001646  6E21               	movwf	??_playDamage& (0+255),c
  6363  001648  0EDE               	movlw	222
  6364  00164A                     i2u367_47:
  6365  00164A  2EE8               	decfsz	wreg,f,c
  6366  00164C  D7FE               	goto	i2u367_47
  6367  00164E  2E21               	decfsz	??_playDamage& (0+255),f,c
  6368  001650  D7FC               	goto	i2u367_47
  6369                           
  6370                           ;LEDLogic.c: 183: _delay((unsigned long)((25)*(16000000/4000.0)));
  6371  001652  0E82               	movlw	130
  6372  001654  6E21               	movwf	??_playDamage& (0+255),c
  6373  001656  0EDE               	movlw	222
  6374  001658                     i2u368_47:
  6375  001658  2EE8               	decfsz	wreg,f,c
  6376  00165A  D7FE               	goto	i2u368_47
  6377  00165C  2E21               	decfsz	??_playDamage& (0+255),f,c
  6378  00165E  D7FC               	goto	i2u368_47
  6379                           
  6380                           ;LEDLogic.c: 184: _delay((unsigned long)((25)*(16000000/4000.0)));
  6381  001660  0E82               	movlw	130
  6382  001662  6E21               	movwf	??_playDamage& (0+255),c
  6383  001664  0EDE               	movlw	222
  6384  001666                     i2u369_47:
  6385  001666  2EE8               	decfsz	wreg,f,c
  6386  001668  D7FE               	goto	i2u369_47
  6387  00166A  2E21               	decfsz	??_playDamage& (0+255),f,c
  6388  00166C  D7FC               	goto	i2u369_47
  6389  00166E  0012               	return		;funcret
  6390  001670                     __end_of_playDamage:
  6391                           	opt stack 0
  6392                           tosu	equ	0xFFF
  6393                           tosh	equ	0xFFE
  6394                           tosl	equ	0xFFD
  6395                           pclatu	equ	0xFFB
  6396                           pclath	equ	0xFFA
  6397                           tblptru	equ	0xFF8
  6398                           tblptrh	equ	0xFF7
  6399                           tblptrl	equ	0xFF6
  6400                           tablat	equ	0xFF5
  6401                           prodh	equ	0xFF4
  6402                           prodl	equ	0xFF3
  6403                           intcon	equ	0xFF2
  6404                           intcon2	equ	0xFF1
  6405                           postinc0	equ	0xFEE
  6406                           plusw0	equ	0xFEB
  6407                           fsr0h	equ	0xFEA
  6408                           fsr0l	equ	0xFE9
  6409                           wreg	equ	0xFE8
  6410                           postdec1	equ	0xFE5
  6411                           fsr1h	equ	0xFE2
  6412                           fsr1l	equ	0xFE1
  6413                           indf2	equ	0xFDF
  6414                           postinc2	equ	0xFDE
  6415                           postdec2	equ	0xFDD
  6416                           plusw2	equ	0xFDB
  6417                           fsr2h	equ	0xFDA
  6418                           fsr2l	equ	0xFD9
  6419                           status	equ	0xFD8
  6420                           
  6421 ;; *************** function _colorRed *****************
  6422 ;; Defined at:
  6423 ;;		line 50 in file "LEDLogic.c"
  6424 ;; Parameters:    Size  Location     Type
  6425 ;;		None
  6426 ;; Auto vars:     Size  Location     Type
  6427 ;;		None
  6428 ;; Return value:  Size  Location     Type
  6429 ;;                  1    wreg      void 
  6430 ;; Registers used:
  6431 ;;		cstack
  6432 ;; Tracked objects:
  6433 ;;		On entry : 0/0
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6441 ;;Total ram usage:        0 bytes
  6442 ;; Hardware stack levels used:    1
  6443 ;; Hardware stack levels required when called:    1
  6444 ;; This function calls:
  6445 ;;		_LEDOne
  6446 ;;		_LEDZero
  6447 ;; This function is called by:
  6448 ;;		_playDamage
  6449 ;; This function uses a non-reentrant model
  6450 ;;
  6451                           
  6452                           	psect	text46
  6453  001734                     __ptext46:
  6454                           	opt stack 0
  6455  001734                     _colorRed:
  6456                           	opt stack 21
  6457                           
  6458                           ;LEDLogic.c: 51: LEDZero();
  6459                           
  6460                           ;incstack = 0
  6461  001734  ECD8  F00E         	call	_LEDZero	;wreg free
  6462                           
  6463                           ;LEDLogic.c: 52: LEDZero();
  6464  001738  ECD8  F00E         	call	_LEDZero	;wreg free
  6465                           
  6466                           ;LEDLogic.c: 53: LEDZero();
  6467  00173C  ECD8  F00E         	call	_LEDZero	;wreg free
  6468                           
  6469                           ;LEDLogic.c: 54: LEDZero();
  6470  001740  ECD8  F00E         	call	_LEDZero	;wreg free
  6471                           
  6472                           ;LEDLogic.c: 55: LEDZero();
  6473  001744  ECD8  F00E         	call	_LEDZero	;wreg free
  6474                           
  6475                           ;LEDLogic.c: 56: LEDZero();
  6476  001748  ECD8  F00E         	call	_LEDZero	;wreg free
  6477                           
  6478                           ;LEDLogic.c: 57: LEDZero();
  6479  00174C  ECD8  F00E         	call	_LEDZero	;wreg free
  6480                           
  6481                           ;LEDLogic.c: 58: LEDZero();
  6482  001750  ECD8  F00E         	call	_LEDZero	;wreg free
  6483                           
  6484                           ;LEDLogic.c: 59: LEDOne();
  6485  001754  ECCD  F00E         	call	_LEDOne	;wreg free
  6486                           
  6487                           ;LEDLogic.c: 60: LEDOne();
  6488  001758  ECCD  F00E         	call	_LEDOne	;wreg free
  6489                           
  6490                           ;LEDLogic.c: 61: LEDOne();
  6491  00175C  ECCD  F00E         	call	_LEDOne	;wreg free
  6492                           
  6493                           ;LEDLogic.c: 62: LEDOne();
  6494  001760  ECCD  F00E         	call	_LEDOne	;wreg free
  6495                           
  6496                           ;LEDLogic.c: 63: LEDOne();
  6497  001764  ECCD  F00E         	call	_LEDOne	;wreg free
  6498                           
  6499                           ;LEDLogic.c: 64: LEDOne();
  6500  001768  ECCD  F00E         	call	_LEDOne	;wreg free
  6501                           
  6502                           ;LEDLogic.c: 65: LEDOne();
  6503  00176C  ECCD  F00E         	call	_LEDOne	;wreg free
  6504                           
  6505                           ;LEDLogic.c: 66: LEDOne();
  6506  001770  ECCD  F00E         	call	_LEDOne	;wreg free
  6507                           
  6508                           ;LEDLogic.c: 67: LEDZero();
  6509  001774  ECD8  F00E         	call	_LEDZero	;wreg free
  6510                           
  6511                           ;LEDLogic.c: 68: LEDZero();
  6512  001778  ECD8  F00E         	call	_LEDZero	;wreg free
  6513                           
  6514                           ;LEDLogic.c: 69: LEDZero();
  6515  00177C  ECD8  F00E         	call	_LEDZero	;wreg free
  6516                           
  6517                           ;LEDLogic.c: 70: LEDZero();
  6518  001780  ECD8  F00E         	call	_LEDZero	;wreg free
  6519                           
  6520                           ;LEDLogic.c: 71: LEDZero();
  6521  001784  ECD8  F00E         	call	_LEDZero	;wreg free
  6522                           
  6523                           ;LEDLogic.c: 72: LEDZero();
  6524  001788  ECD8  F00E         	call	_LEDZero	;wreg free
  6525                           
  6526                           ;LEDLogic.c: 73: LEDZero();
  6527  00178C  ECD8  F00E         	call	_LEDZero	;wreg free
  6528                           
  6529                           ;LEDLogic.c: 74: LEDZero();
  6530  001790  ECD8  F00E         	call	_LEDZero	;wreg free
  6531  001794  0012               	return		;funcret
  6532  001796                     __end_of_colorRed:
  6533                           	opt stack 0
  6534                           tosu	equ	0xFFF
  6535                           tosh	equ	0xFFE
  6536                           tosl	equ	0xFFD
  6537                           pclatu	equ	0xFFB
  6538                           pclath	equ	0xFFA
  6539                           tblptru	equ	0xFF8
  6540                           tblptrh	equ	0xFF7
  6541                           tblptrl	equ	0xFF6
  6542                           tablat	equ	0xFF5
  6543                           prodh	equ	0xFF4
  6544                           prodl	equ	0xFF3
  6545                           intcon	equ	0xFF2
  6546                           intcon2	equ	0xFF1
  6547                           postinc0	equ	0xFEE
  6548                           plusw0	equ	0xFEB
  6549                           fsr0h	equ	0xFEA
  6550                           fsr0l	equ	0xFE9
  6551                           wreg	equ	0xFE8
  6552                           postdec1	equ	0xFE5
  6553                           fsr1h	equ	0xFE2
  6554                           fsr1l	equ	0xFE1
  6555                           indf2	equ	0xFDF
  6556                           postinc2	equ	0xFDE
  6557                           postdec2	equ	0xFDD
  6558                           plusw2	equ	0xFDB
  6559                           fsr2h	equ	0xFDA
  6560                           fsr2l	equ	0xFD9
  6561                           status	equ	0xFD8
  6562                           
  6563 ;; *************** function _LEDOne *****************
  6564 ;; Defined at:
  6565 ;;		line 8 in file "LEDLogic.c"
  6566 ;; Parameters:    Size  Location     Type
  6567 ;;		None
  6568 ;; Auto vars:     Size  Location     Type
  6569 ;;		None
  6570 ;; Return value:  Size  Location     Type
  6571 ;;                  1    wreg      void 
  6572 ;; Registers used:
  6573 ;;		None
  6574 ;; Tracked objects:
  6575 ;;		On entry : 0/0
  6576 ;;		On exit  : 0/0
  6577 ;;		Unchanged: 0/0
  6578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6583 ;;Total ram usage:        0 bytes
  6584 ;; Hardware stack levels used:    1
  6585 ;; This function calls:
  6586 ;;		Nothing
  6587 ;; This function is called by:
  6588 ;;		_colorRed
  6589 ;;		_colorGreen
  6590 ;;		_colorYellow
  6591 ;;		_colorOrange
  6592 ;; This function uses a non-reentrant model
  6593 ;;
  6594                           
  6595                           	psect	text47
  6596  001D9A                     __ptext47:
  6597                           	opt stack 0
  6598  001D9A                     _LEDOne:
  6599                           	opt stack 21
  6600                           
  6601                           ;LEDLogic.c: 9: LATBbits.LATB5 = 1;
  6602                           
  6603                           ;incstack = 0
  6604  001D9A  8A8A               	bsf	3978,5,c	;volatile
  6605                           
  6606                           ;LEDLogic.c: 10: __nop();
  6607  001D9C  F000               	nop	
  6608                           
  6609                           ;LEDLogic.c: 11: __nop();
  6610  001D9E  F000               	nop	
  6611                           
  6612                           ;LEDLogic.c: 12: LATBbits.LATB5 = 0;
  6613  001DA0  9A8A               	bcf	3978,5,c	;volatile
  6614                           
  6615                           ;LEDLogic.c: 13: __nop();
  6616  001DA2  F000               	nop	
  6617  001DA4  0012               	return		;funcret
  6618  001DA6                     __end_of_LEDOne:
  6619                           	opt stack 0
  6620                           tosu	equ	0xFFF
  6621                           tosh	equ	0xFFE
  6622                           tosl	equ	0xFFD
  6623                           pclatu	equ	0xFFB
  6624                           pclath	equ	0xFFA
  6625                           tblptru	equ	0xFF8
  6626                           tblptrh	equ	0xFF7
  6627                           tblptrl	equ	0xFF6
  6628                           tablat	equ	0xFF5
  6629                           prodh	equ	0xFF4
  6630                           prodl	equ	0xFF3
  6631                           intcon	equ	0xFF2
  6632                           intcon2	equ	0xFF1
  6633                           postinc0	equ	0xFEE
  6634                           plusw0	equ	0xFEB
  6635                           fsr0h	equ	0xFEA
  6636                           fsr0l	equ	0xFE9
  6637                           wreg	equ	0xFE8
  6638                           postdec1	equ	0xFE5
  6639                           fsr1h	equ	0xFE2
  6640                           fsr1l	equ	0xFE1
  6641                           indf2	equ	0xFDF
  6642                           postinc2	equ	0xFDE
  6643                           postdec2	equ	0xFDD
  6644                           plusw2	equ	0xFDB
  6645                           fsr2h	equ	0xFDA
  6646                           fsr2l	equ	0xFD9
  6647                           status	equ	0xFD8
  6648                           
  6649 ;; *************** function _clearPattern *****************
  6650 ;; Defined at:
  6651 ;;		line 163 in file "LEDLogic.c"
  6652 ;; Parameters:    Size  Location     Type
  6653 ;;		None
  6654 ;; Auto vars:     Size  Location     Type
  6655 ;;  i               2    0[COMRAM] int 
  6656 ;; Return value:  Size  Location     Type
  6657 ;;                  1    wreg      void 
  6658 ;; Registers used:
  6659 ;;		wreg, status,2, status,0, cstack
  6660 ;; Tracked objects:
  6661 ;;		On entry : 0/0
  6662 ;;		On exit  : 0/0
  6663 ;;		Unchanged: 0/0
  6664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6666 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6668 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6669 ;;Total ram usage:        2 bytes
  6670 ;; Hardware stack levels used:    1
  6671 ;; Hardware stack levels required when called:    2
  6672 ;; This function calls:
  6673 ;;		_colorBlack
  6674 ;; This function is called by:
  6675 ;;		_playPattern
  6676 ;; This function uses a non-reentrant model
  6677 ;;
  6678                           
  6679                           	psect	text48
  6680  001C7E                     __ptext48:
  6681                           	opt stack 0
  6682  001C7E                     _clearPattern:
  6683                           	opt stack 21
  6684                           
  6685                           ;LEDLogic.c: 164: for (int i = 0; i < 24; i++) {
  6686                           
  6687                           ;incstack = 0
  6688  001C7E  0E00               	movlw	0
  6689  001C80  6E22               	movwf	clearPattern@i+1,c
  6690  001C82  0E00               	movlw	0
  6691  001C84  6E21               	movwf	clearPattern@i,c
  6692  001C86                     i2l1967:
  6693  001C86  BE22               	btfsc	clearPattern@i+1,7,c
  6694  001C88  D006               	goto	i2l1971
  6695  001C8A  5022               	movf	clearPattern@i+1,w,c
  6696  001C8C  E109               	bnz	i2l180
  6697  001C8E  0E18               	movlw	24
  6698  001C90  5C21               	subwf	clearPattern@i,w,c
  6699  001C92  B0D8               	btfsc	status,0,c
  6700  001C94  0012               	return	
  6701  001C96                     i2l1971:
  6702                           
  6703                           ;LEDLogic.c: 165: colorBlack();
  6704  001C96  ECCB  F00B         	call	_colorBlack	;wreg free
  6705  001C9A  4A21               	infsnz	clearPattern@i,f,c
  6706  001C9C  2A22               	incf	clearPattern@i+1,f,c
  6707  001C9E  D7F3               	goto	i2l1967
  6708  001CA0                     i2l180:
  6709  001CA0  0012               	return		;funcret
  6710  001CA2                     __end_of_clearPattern:
  6711                           	opt stack 0
  6712                           tosu	equ	0xFFF
  6713                           tosh	equ	0xFFE
  6714                           tosl	equ	0xFFD
  6715                           pclatu	equ	0xFFB
  6716                           pclath	equ	0xFFA
  6717                           tblptru	equ	0xFF8
  6718                           tblptrh	equ	0xFF7
  6719                           tblptrl	equ	0xFF6
  6720                           tablat	equ	0xFF5
  6721                           prodh	equ	0xFF4
  6722                           prodl	equ	0xFF3
  6723                           intcon	equ	0xFF2
  6724                           intcon2	equ	0xFF1
  6725                           postinc0	equ	0xFEE
  6726                           plusw0	equ	0xFEB
  6727                           fsr0h	equ	0xFEA
  6728                           fsr0l	equ	0xFE9
  6729                           wreg	equ	0xFE8
  6730                           postdec1	equ	0xFE5
  6731                           fsr1h	equ	0xFE2
  6732                           fsr1l	equ	0xFE1
  6733                           indf2	equ	0xFDF
  6734                           postinc2	equ	0xFDE
  6735                           postdec2	equ	0xFDD
  6736                           plusw2	equ	0xFDB
  6737                           fsr2h	equ	0xFDA
  6738                           fsr2l	equ	0xFD9
  6739                           status	equ	0xFD8
  6740                           
  6741 ;; *************** function _colorBlack *****************
  6742 ;; Defined at:
  6743 ;;		line 23 in file "LEDLogic.c"
  6744 ;; Parameters:    Size  Location     Type
  6745 ;;		None
  6746 ;; Auto vars:     Size  Location     Type
  6747 ;;		None
  6748 ;; Return value:  Size  Location     Type
  6749 ;;                  1    wreg      void 
  6750 ;; Registers used:
  6751 ;;		cstack
  6752 ;; Tracked objects:
  6753 ;;		On entry : 0/0
  6754 ;;		On exit  : 0/0
  6755 ;;		Unchanged: 0/0
  6756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6761 ;;Total ram usage:        0 bytes
  6762 ;; Hardware stack levels used:    1
  6763 ;; Hardware stack levels required when called:    1
  6764 ;; This function calls:
  6765 ;;		_LEDZero
  6766 ;; This function is called by:
  6767 ;;		_clearPattern
  6768 ;; This function uses a non-reentrant model
  6769 ;;
  6770                           
  6771                           	psect	text49
  6772  001796                     __ptext49:
  6773                           	opt stack 0
  6774  001796                     _colorBlack:
  6775                           	opt stack 21
  6776                           
  6777                           ;LEDLogic.c: 24: LEDZero();
  6778                           
  6779                           ;incstack = 0
  6780  001796  ECD8  F00E         	call	_LEDZero	;wreg free
  6781                           
  6782                           ;LEDLogic.c: 25: LEDZero();
  6783  00179A  ECD8  F00E         	call	_LEDZero	;wreg free
  6784                           
  6785                           ;LEDLogic.c: 26: LEDZero();
  6786  00179E  ECD8  F00E         	call	_LEDZero	;wreg free
  6787                           
  6788                           ;LEDLogic.c: 27: LEDZero();
  6789  0017A2  ECD8  F00E         	call	_LEDZero	;wreg free
  6790                           
  6791                           ;LEDLogic.c: 28: LEDZero();
  6792  0017A6  ECD8  F00E         	call	_LEDZero	;wreg free
  6793                           
  6794                           ;LEDLogic.c: 29: LEDZero();
  6795  0017AA  ECD8  F00E         	call	_LEDZero	;wreg free
  6796                           
  6797                           ;LEDLogic.c: 30: LEDZero();
  6798  0017AE  ECD8  F00E         	call	_LEDZero	;wreg free
  6799                           
  6800                           ;LEDLogic.c: 31: LEDZero();
  6801  0017B2  ECD8  F00E         	call	_LEDZero	;wreg free
  6802                           
  6803                           ;LEDLogic.c: 32: LEDZero();
  6804  0017B6  ECD8  F00E         	call	_LEDZero	;wreg free
  6805                           
  6806                           ;LEDLogic.c: 33: LEDZero();
  6807  0017BA  ECD8  F00E         	call	_LEDZero	;wreg free
  6808                           
  6809                           ;LEDLogic.c: 34: LEDZero();
  6810  0017BE  ECD8  F00E         	call	_LEDZero	;wreg free
  6811                           
  6812                           ;LEDLogic.c: 35: LEDZero();
  6813  0017C2  ECD8  F00E         	call	_LEDZero	;wreg free
  6814                           
  6815                           ;LEDLogic.c: 36: LEDZero();
  6816  0017C6  ECD8  F00E         	call	_LEDZero	;wreg free
  6817                           
  6818                           ;LEDLogic.c: 37: LEDZero();
  6819  0017CA  ECD8  F00E         	call	_LEDZero	;wreg free
  6820                           
  6821                           ;LEDLogic.c: 38: LEDZero();
  6822  0017CE  ECD8  F00E         	call	_LEDZero	;wreg free
  6823                           
  6824                           ;LEDLogic.c: 39: LEDZero();
  6825  0017D2  ECD8  F00E         	call	_LEDZero	;wreg free
  6826                           
  6827                           ;LEDLogic.c: 40: LEDZero();
  6828  0017D6  ECD8  F00E         	call	_LEDZero	;wreg free
  6829                           
  6830                           ;LEDLogic.c: 41: LEDZero();
  6831  0017DA  ECD8  F00E         	call	_LEDZero	;wreg free
  6832                           
  6833                           ;LEDLogic.c: 42: LEDZero();
  6834  0017DE  ECD8  F00E         	call	_LEDZero	;wreg free
  6835                           
  6836                           ;LEDLogic.c: 43: LEDZero();
  6837  0017E2  ECD8  F00E         	call	_LEDZero	;wreg free
  6838                           
  6839                           ;LEDLogic.c: 44: LEDZero();
  6840  0017E6  ECD8  F00E         	call	_LEDZero	;wreg free
  6841                           
  6842                           ;LEDLogic.c: 45: LEDZero();
  6843  0017EA  ECD8  F00E         	call	_LEDZero	;wreg free
  6844                           
  6845                           ;LEDLogic.c: 46: LEDZero();
  6846  0017EE  ECD8  F00E         	call	_LEDZero	;wreg free
  6847                           
  6848                           ;LEDLogic.c: 47: LEDZero();
  6849  0017F2  ECD8  F00E         	call	_LEDZero	;wreg free
  6850  0017F6  0012               	return		;funcret
  6851  0017F8                     __end_of_colorBlack:
  6852                           	opt stack 0
  6853                           tosu	equ	0xFFF
  6854                           tosh	equ	0xFFE
  6855                           tosl	equ	0xFFD
  6856                           pclatu	equ	0xFFB
  6857                           pclath	equ	0xFFA
  6858                           tblptru	equ	0xFF8
  6859                           tblptrh	equ	0xFF7
  6860                           tblptrl	equ	0xFF6
  6861                           tablat	equ	0xFF5
  6862                           prodh	equ	0xFF4
  6863                           prodl	equ	0xFF3
  6864                           intcon	equ	0xFF2
  6865                           intcon2	equ	0xFF1
  6866                           postinc0	equ	0xFEE
  6867                           plusw0	equ	0xFEB
  6868                           fsr0h	equ	0xFEA
  6869                           fsr0l	equ	0xFE9
  6870                           wreg	equ	0xFE8
  6871                           postdec1	equ	0xFE5
  6872                           fsr1h	equ	0xFE2
  6873                           fsr1l	equ	0xFE1
  6874                           indf2	equ	0xFDF
  6875                           postinc2	equ	0xFDE
  6876                           postdec2	equ	0xFDD
  6877                           plusw2	equ	0xFDB
  6878                           fsr2h	equ	0xFDA
  6879                           fsr2l	equ	0xFD9
  6880                           status	equ	0xFD8
  6881                           
  6882 ;; *************** function _LEDZero *****************
  6883 ;; Defined at:
  6884 ;;		line 16 in file "LEDLogic.c"
  6885 ;; Parameters:    Size  Location     Type
  6886 ;;		None
  6887 ;; Auto vars:     Size  Location     Type
  6888 ;;		None
  6889 ;; Return value:  Size  Location     Type
  6890 ;;                  1    wreg      void 
  6891 ;; Registers used:
  6892 ;;		None
  6893 ;; Tracked objects:
  6894 ;;		On entry : 0/0
  6895 ;;		On exit  : 0/0
  6896 ;;		Unchanged: 0/0
  6897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6902 ;;Total ram usage:        0 bytes
  6903 ;; Hardware stack levels used:    1
  6904 ;; This function calls:
  6905 ;;		Nothing
  6906 ;; This function is called by:
  6907 ;;		_colorBlack
  6908 ;;		_colorRed
  6909 ;;		_colorGreen
  6910 ;;		_colorYellow
  6911 ;;		_colorOrange
  6912 ;; This function uses a non-reentrant model
  6913 ;;
  6914                           
  6915                           	psect	text50
  6916  001DB0                     __ptext50:
  6917                           	opt stack 0
  6918  001DB0                     _LEDZero:
  6919                           	opt stack 21
  6920                           
  6921                           ;LEDLogic.c: 17: LATBbits.LATB5 = 1;
  6922                           
  6923                           ;incstack = 0
  6924  001DB0  8A8A               	bsf	3978,5,c	;volatile
  6925                           
  6926                           ;LEDLogic.c: 18: __nop();
  6927  001DB2  F000               	nop	
  6928                           
  6929                           ;LEDLogic.c: 19: LATBbits.LATB5 = 0;
  6930  001DB4  9A8A               	bcf	3978,5,c	;volatile
  6931                           
  6932                           ;LEDLogic.c: 20: __nop();
  6933  001DB6  F000               	nop	
  6934  001DB8  0012               	return		;funcret
  6935  001DBA                     __end_of_LEDZero:
  6936                           	opt stack 0
  6937                           tosu	equ	0xFFF
  6938                           tosh	equ	0xFFE
  6939                           tosl	equ	0xFFD
  6940                           pclatu	equ	0xFFB
  6941                           pclath	equ	0xFFA
  6942                           tblptru	equ	0xFF8
  6943                           tblptrh	equ	0xFF7
  6944                           tblptrl	equ	0xFF6
  6945                           tablat	equ	0xFF5
  6946                           prodh	equ	0xFF4
  6947                           prodl	equ	0xFF3
  6948                           intcon	equ	0xFF2
  6949                           intcon2	equ	0xFF1
  6950                           postinc0	equ	0xFEE
  6951                           plusw0	equ	0xFEB
  6952                           fsr0h	equ	0xFEA
  6953                           fsr0l	equ	0xFE9
  6954                           wreg	equ	0xFE8
  6955                           postdec1	equ	0xFE5
  6956                           fsr1h	equ	0xFE2
  6957                           fsr1l	equ	0xFE1
  6958                           indf2	equ	0xFDF
  6959                           postinc2	equ	0xFDE
  6960                           postdec2	equ	0xFDD
  6961                           plusw2	equ	0xFDB
  6962                           fsr2h	equ	0xFDA
  6963                           fsr2l	equ	0xFD9
  6964                           status	equ	0xFD8
  6965                           tosu	equ	0xFFF
  6966                           tosh	equ	0xFFE
  6967                           tosl	equ	0xFFD
  6968                           pclatu	equ	0xFFB
  6969                           pclath	equ	0xFFA
  6970                           tblptru	equ	0xFF8
  6971                           tblptrh	equ	0xFF7
  6972                           tblptrl	equ	0xFF6
  6973                           tablat	equ	0xFF5
  6974                           prodh	equ	0xFF4
  6975                           prodl	equ	0xFF3
  6976                           intcon	equ	0xFF2
  6977                           intcon2	equ	0xFF1
  6978                           postinc0	equ	0xFEE
  6979                           plusw0	equ	0xFEB
  6980                           fsr0h	equ	0xFEA
  6981                           fsr0l	equ	0xFE9
  6982                           wreg	equ	0xFE8
  6983                           postdec1	equ	0xFE5
  6984                           fsr1h	equ	0xFE2
  6985                           fsr1l	equ	0xFE1
  6986                           indf2	equ	0xFDF
  6987                           postinc2	equ	0xFDE
  6988                           postdec2	equ	0xFDD
  6989                           plusw2	equ	0xFDB
  6990                           fsr2h	equ	0xFDA
  6991                           fsr2l	equ	0xFD9
  6992                           status	equ	0xFD8
  6993                           
  6994                           	psect	text51
  6995  000000                     __ptext51:
  6996                           	opt stack 0
  6997                           tosu	equ	0xFFF
  6998                           tosh	equ	0xFFE
  6999                           tosl	equ	0xFFD
  7000                           pclatu	equ	0xFFB
  7001                           pclath	equ	0xFFA
  7002                           tblptru	equ	0xFF8
  7003                           tblptrh	equ	0xFF7
  7004                           tblptrl	equ	0xFF6
  7005                           tablat	equ	0xFF5
  7006                           prodh	equ	0xFF4
  7007                           prodl	equ	0xFF3
  7008                           intcon	equ	0xFF2
  7009                           intcon2	equ	0xFF1
  7010                           postinc0	equ	0xFEE
  7011                           plusw0	equ	0xFEB
  7012                           fsr0h	equ	0xFEA
  7013                           fsr0l	equ	0xFE9
  7014                           wreg	equ	0xFE8
  7015                           postdec1	equ	0xFE5
  7016                           fsr1h	equ	0xFE2
  7017                           fsr1l	equ	0xFE1
  7018                           indf2	equ	0xFDF
  7019                           postinc2	equ	0xFDE
  7020                           postdec2	equ	0xFDD
  7021                           plusw2	equ	0xFDB
  7022                           fsr2h	equ	0xFDA
  7023                           fsr2l	equ	0xFD9
  7024                           status	equ	0xFD8
  7025                           
  7026                           	psect	rparam
  7027  0000                     tosu	equ	0xFFF
  7028                           tosh	equ	0xFFE
  7029                           tosl	equ	0xFFD
  7030                           pclatu	equ	0xFFB
  7031                           pclath	equ	0xFFA
  7032                           tblptru	equ	0xFF8
  7033                           tblptrh	equ	0xFF7
  7034                           tblptrl	equ	0xFF6
  7035                           tablat	equ	0xFF5
  7036                           prodh	equ	0xFF4
  7037                           prodl	equ	0xFF3
  7038                           intcon	equ	0xFF2
  7039                           intcon2	equ	0xFF1
  7040                           postinc0	equ	0xFEE
  7041                           plusw0	equ	0xFEB
  7042                           fsr0h	equ	0xFEA
  7043                           fsr0l	equ	0xFE9
  7044                           wreg	equ	0xFE8
  7045                           postdec1	equ	0xFE5
  7046                           fsr1h	equ	0xFE2
  7047                           fsr1l	equ	0xFE1
  7048                           indf2	equ	0xFDF
  7049                           postinc2	equ	0xFDE
  7050                           postdec2	equ	0xFDD
  7051                           plusw2	equ	0xFDB
  7052                           fsr2h	equ	0xFDA
  7053                           fsr2l	equ	0xFD9
  7054                           status	equ	0xFD8
  7055                           
  7056                           	psect	temp
  7057  000043                     btemp:
  7058                           	opt stack 0
  7059  000043                     	ds	1
  7060  0000                     int$flags	set	btemp
  7061                           tosu	equ	0xFFF
  7062                           tosh	equ	0xFFE
  7063                           tosl	equ	0xFFD
  7064                           pclatu	equ	0xFFB
  7065                           pclath	equ	0xFFA
  7066                           tblptru	equ	0xFF8
  7067                           tblptrh	equ	0xFF7
  7068                           tblptrl	equ	0xFF6
  7069                           tablat	equ	0xFF5
  7070                           prodh	equ	0xFF4
  7071                           prodl	equ	0xFF3
  7072                           intcon	equ	0xFF2
  7073                           intcon2	equ	0xFF1
  7074                           postinc0	equ	0xFEE
  7075                           plusw0	equ	0xFEB
  7076                           fsr0h	equ	0xFEA
  7077                           fsr0l	equ	0xFE9
  7078                           wreg	equ	0xFE8
  7079                           postdec1	equ	0xFE5
  7080                           fsr1h	equ	0xFE2
  7081                           fsr1l	equ	0xFE1
  7082                           indf2	equ	0xFDF
  7083                           postinc2	equ	0xFDE
  7084                           postdec2	equ	0xFDD
  7085                           plusw2	equ	0xFDB
  7086                           fsr2h	equ	0xFDA
  7087                           fsr2l	equ	0xFD9
  7088                           status	equ	0xFD8


Data Sizes:
    Strings     4
    Constant    2
    Data        21
    BSS         217
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      66
    BANK0           160      5     144
    BANK1           256     23      95
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    i2c2_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c2_tr_queue.pTrFlag	PTR enum E7395 size(2) Largest target is 0

    i2c2_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C2_MasterRead@trBlock(BANK0[6]), I2C2_MasterWrite@trBlock(BANK0[6]), 

    memcpy@d1	PTR void  size(2) Largest target is 15
		 -> main@char_buff(BANK1[15]), piu_buff(BANK0[13]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 15
		 -> main@char_buff(BANK1[15]), piu_buff(BANK0[13]), 

    memcpy@s1	PTR const void  size(3) Largest target is 65535
		 -> ROM(CODE[65535]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 65535
		 -> ROM(CODE[65535]), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR3_DefaultInterruptHandler(), 

    I2C2_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 0

    I2C2_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c2_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c2_object.pTrTail.pTrFlag	PTR enum E7395 size(2) Largest target is 0

    i2c2_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK0[6]), I2C2_MasterWrite@trBlock(BANK0[6]), 

    F7507.pbuffer	PTR unsigned char  size(2) Largest target is 0

    F7502.pbuffer	PTR unsigned char  size(2) Largest target is 0

    I2C2_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 0
		 -> I2C2_ISR@i2c_address(COMRAM[2]), NULL(NULL[0]), 

    S1918$pbuffer	PTR unsigned char  size(2) Largest target is 0

    p_i2c2_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 0

    p_i2c2_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK0[6]), I2C2_MasterWrite@trBlock(BANK0[6]), NULL(NULL[0]), 

    i2c2_object.pTrHead.pTrFlag	PTR enum E7395 size(2) Largest target is 0

    i2c2_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK0[6]), I2C2_MasterWrite@trBlock(BANK0[6]), 

    S1930$pTrFlag	PTR enum E7395 size(2) Largest target is 0

    p_i2c2_current.pTrFlag	PTR enum E7395 size(2) Largest target is 0

    S1930$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK0[6]), I2C2_MasterWrite@trBlock(BANK0[6]), 

    p_i2c2_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK0[6]), I2C2_MasterWrite@trBlock(BANK0[6]), 

    p_i2c2_current	PTR struct . size(2) Largest target is 7
		 -> i2c2_tr_queue(BANK0[6]), NULL(NULL[0]), 

    S1941$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c2_tr_queue(BANK0[6]), 

    i2c2_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c2_tr_queue(BANK0[6]), 

    S1941$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c2_tr_queue(BANK0[6]), 

    i2c2_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c2_tr_queue(BANK0[6]), 

    sp__memcpy	PTR void  size(2) Largest target is 15
		 -> main@char_buff(BANK1[15]), piu_buff(BANK0[13]), 


Critical Paths under _main in COMRAM

    _main->_PIU_bt_transmit_packet
    _main->_memcpy
    _TMR3_Initialize->_TMR3_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_CCP4_CaptureISR
    _I2C2_ISR->_I2C2_Stop
    _CCP4_CaptureISR->_CCP4_CallBack
    _CCP4_CallBack->_playPattern
    _playPattern->_pulse
    _pulse->_delay_25ms_n_times

Critical Paths under _main in BANK0

    _main->_memcpy

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0    1914
                                              0 BANK1     23    23      0
                       _EUSART1_Read
             _PIU_bt_transmit_packet
                  _SYSTEM_Initialize
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _memcpy                                              12     5      7     867
                                             24 COMRAM     7     0      7
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     108
                    _CCP4_Initialize
                 _EUSART1_Initialize
                 _EUSART2_Initialize
                    _I2C2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM5_Initialize
                    _SPI1_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
                    _TMR4_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     108
           _TMR3_SetInterruptHandler
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR3_SetInterruptHandler                             2     0      2     108
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIU_bt_transmit_packet                               7     1      6     451
                                             24 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         1     1      0      37
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0    1487
                                             10 COMRAM    14    14      0
                    _CCP4_CaptureISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
                _EUSART2_Receive_ISR
               _EUSART2_Transmit_ISR
               _I2C2_BusCollisionISR
                           _I2C2_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR3_ISR                                             0     0      0       0
                      _TMR3_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR3_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR3_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C2_ISR                                             2     2      0      22
                                              3 COMRAM     2     2      0
              _I2C2_FunctionComplete
                          _I2C2_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C2_Stop                                            3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (6) _I2C2_FunctionComplete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C2_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _CCP4_CaptureISR                                      2     2      0    1465
                                              8 COMRAM     2     2      0
                      _CCP4_CallBack
 ---------------------------------------------------------------------------------
 (6) _CCP4_CallBack                                        2     0      2    1418
                                              6 COMRAM     2     0      2
                 _delay_25ms_n_times
                        _playPattern
 ---------------------------------------------------------------------------------
 (7) _playPattern                                          1     1      0     967
                                              5 COMRAM     1     1      0
                       _clearPattern
                         _playDamage
                           _playHeal
                           _playStun
                              _pulse
 ---------------------------------------------------------------------------------
 (8) _pulse                                                2     2      0     795
                                              3 COMRAM     2     2      0
                 _delay_25ms_n_times
                               _draw
 ---------------------------------------------------------------------------------
 (9) _draw                                                 2     2      0     184
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (9) _delay_25ms_n_times                                   3     1      2     365
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (8) _playStun                                             3     3      0      60
                                              0 COMRAM     3     3      0
                         _colorGreen
                        _colorYellow
 ---------------------------------------------------------------------------------
 (9) _colorYellow                                          0     0      0       0
                             _LEDOne
                            _LEDZero
 ---------------------------------------------------------------------------------
 (8) _playHeal                                             3     3      0      30
                                              0 COMRAM     3     3      0
                         _colorGreen
 ---------------------------------------------------------------------------------
 (9) _colorGreen                                           0     0      0       0
                             _LEDOne
                            _LEDZero
 ---------------------------------------------------------------------------------
 (8) _playDamage                                           3     3      0      30
                                              0 COMRAM     3     3      0
                           _colorRed
 ---------------------------------------------------------------------------------
 (9) _colorRed                                             0     0      0       0
                             _LEDOne
                            _LEDZero
 ---------------------------------------------------------------------------------
 (10) _LEDOne                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _clearPattern                                         2     2      0      30
                                              0 COMRAM     2     2      0
                         _colorBlack
 ---------------------------------------------------------------------------------
 (9) _colorBlack                                           0     0      0       0
                            _LEDZero
 ---------------------------------------------------------------------------------
 (10) _LEDZero                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _PIU_bt_transmit_packet
   _SYSTEM_Initialize
     _CCP4_Initialize
     _EUSART1_Initialize
     _EUSART2_Initialize
     _I2C2_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM5_Initialize
     _SPI1_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
       _TMR3_StartTimer
     _TMR4_Initialize
       _TMR4_StartTimer
   _memcpy

 _INTERRUPT_InterruptManager (ROOT)
   _CCP4_CaptureISR
     _CCP4_CallBack
       _delay_25ms_n_times
       _playPattern
         _clearPattern
           _colorBlack
             _LEDZero
         _playDamage
           _colorRed
             _LEDOne
             _LEDZero
         _playHeal
           _colorGreen
             _LEDOne
             _LEDZero
         _playStun
           _colorGreen
             _LEDOne
             _LEDZero
           _colorYellow
             _LEDOne
             _LEDZero
         _pulse
           _delay_25ms_n_times
           _draw
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR
   _EUSART2_Receive_ISR
   _EUSART2_Transmit_ISR
   _I2C2_BusCollisionISR
   _I2C2_ISR
     _I2C2_FunctionComplete
     _I2C2_Stop
   _TMR3_ISR
     _TMR3_CallBack
       Absolute function(Fake) *
       _TMR3_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     17      5F       7       37.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5      90       5       90.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1F      42       1       70.2%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     131      12        0.0%
DATA                 0      0     131       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Thu Mar 31 13:30:45 2016

                         _CCP4_Initialize 1CC0                                _VOLUME_MAX 00DD  
                              _VOLUME_MIN 00DF                  _eusart1TxBufferRemaining 00E9  
                                       _a 009E                                         _b 00A0  
                                       _i 00A4                                         _j 00A6  
                                       _k 0001                                         _p 0003  
                            ?_colorYellow 0021                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                              __CFG_CPB$OFF 000000  
                                     _PR2 000FBB                                       _PR4 000F52  
                            __CFG_CPD$OFF 000000                   _bluetooth_to_PIU_online 000A  
                         _timer1ReloadVal 00E7                                       _num 001B  
                         _TMR2_Initialize 1D56                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
                 __end_of_CCP4_CaptureISR 1D42                              __CFG_LVP$OFF 000000  
                        __end_of_I2C2_ISR 1276                           __end_of_LEDZero 1DBA  
                         _timer3ReloadVal 0040                                      l4413 189C  
                                    l4407 186E                                      l4447 1AB6  
                                    l4457 1ADE                                      l4583 12FC  
                                    l4575 12E6                                      l4595 1334  
                                    l4579 12F2                                      STR_1 1003  
                                    _HALT 00D9                                      u3021 12DA  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      u3307 1280  
                                    u3317 128C                                      u3327 12BA  
                                    u3337 12C6                                      u3347 133A  
                                    u3357 1346                                      _RBIF 007F90  
                                    _TMR1 000FCE                                      _TMR2 000FBC  
                                    _TMR3 000FB2                                      _TMR4 000F53  
            PIU_bt_transmit_packet@packet 0039                                      _WPUB 000F61  
                   ??_EUSART2_Receive_ISR 0021                                      _id_h 1001  
                                    _id_l 1002                                      _draw 19A2  
                                    _main 1276                                      _mask 00D1  
                           ?_EUSART1_Read 0021                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                                    btemp 0043                             __CFG_BORV$190 000000  
                                    pclat 000FFA                               main@to_send 0159  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00DC                           _bit_test_result 00AA  
                           __CFG_IESO$OFF 000000              __end_of_EUSART2_Transmit_ISR 1B18  
                         _TMR3_Initialize 1BAC                           _PWM5_Initialize 1CA2  
                            ___param_bank 000010                        playPattern@pattern 0026  
                    __end_of_clearPattern 1CA2                                _i2c2_state 0017  
                        _self_test_passed 001E            __size_of_OSCILLATOR_Initialize 000E  
           __end_of_OSCILLATOR_Initialize 1D9A                                     ?_draw 0021  
                                   ?_main 0021                         __end_of_I2C2_Stop 18F0  
                         _TMR1_StartTimer 1DC8                                     _T1CON 000FCD  
                                   _T2CON 000FBA                                     _IOCB4 007B14  
                                   _LATC2 007C5A                                     _T3CON 000FB1  
                                   _LATC3 007C5B                                     _LATC5 007C5D  
                                   _T4CON 000F51                            __CFG_DEBUG$OFF 000000  
          __size_of_I2C2_FunctionComplete 0018                                     i2l224 19D6  
                                   i2l180 1CA0                                     i2l511 1B46  
                                   i2l371 0066                                     i2l373 0072  
                                   i2l439 1B14                                     i2l375 007E  
                                   i2l383 00A0                                     i2l367 004E  
                                   i2l377 008A                                     i2l369 005A  
                                   i2l730 10C2                                     i2l731 10CA  
                                   i2l379 0096                                     i2l741 1170  
                                   i2l725 1044                                     i2l751 11B2  
                                   i2l736 10F8                                     i2l728 10BA  
                                   i2l737 1108                                     i2l754 11CE  
                                   i2l755 11E0                                     i2l747 1184  
                                   i2l759 1212             __end_of_I2C2_FunctionComplete 1D2C  
                                   _TMR1H 000FCF                                     _TMR3H 000FB3  
                                   _TMR1L 000FCE                                     _TMR3L 000FB2  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                             __CFG_WRT0$OFF 000000  
                         _TMR4_Initialize 1CFA                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000         __size_of_TMR3_SetInterruptHandler 000A  
                           __CFG_WRT3$OFF 000000                      _EUSART1_Transmit_ISR 1B18  
               ?_TMR3_SetInterruptHandler 0039                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                           __CFG_WRTB$OFF 000000                          __end_of_TMR3_ISR 1BAC  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          __CFG_EBTRB$OFF 000000            ??_TMR3_DefaultInterruptHandler 0021  
                                   _mirp0 0094                        __CFG_MCLRE$EXTMCLR 000000  
                                   _state 00AF                                     _pulse 1510  
                                   main@i 0158                   __end_of_TMR1_Initialize 1CFA  
                                   pclath 000FFA                                     tablat 000FF5  
                          ??_EUSART1_Read 0039                                     plusw0 000FEB  
                                   plusw2 000FDB                    __size_of_CCP4_CallBack 003A  
                                   status 000FD8                   __end_of_CCP4_Initialize 1CDE  
                          __CFG_HFOFST$ON 000000                           _TMR2_StartTimer 1DC4  
                __size_of_SPI1_Initialize 000E                            __CFG_PBADEN$ON 000000  
                       ??_I2C2_Initialize 0039                           __initialization 17F8  
                            __end_of_id_h 1002                              __end_of_id_l 1003  
                            __end_of_draw 19DA                __end_of_EUSART1_Initialize 1AB2  
                            __end_of_main 1372                             main@char_buff 0148  
                 __end_of_TMR2_Initialize 1D6A               ?_INTERRUPT_InterruptManager 0021  
                                  ??_draw 0021                                    ??_main 0040  
                             _i2c2_object 008D                              ?_playPattern 0021  
                         _TMR3_StartTimer 1DC0                             __activetblptr 000003  
                   _TMR3_InterruptHandler 00E5                                 ??_LEDZero 0021  
                   ?_EUSART1_Transmit_ISR 0021                  ??_PIU_bt_transmit_packet 003F  
                        ?_CCP4_CaptureISR 0021                __end_of_EUSART2_Initialize 1A7C  
             __size_of_delay_25ms_n_times 0032                  _eusart2TxBufferRemaining 00EA  
                                  _CCPR4H 000F59                                    _CCPR5H 000F56  
                                  _CCPR4L 000F58                                    _CCPR5L 000F55  
                                  ?_pulse 0021                                    _ANSELA 000F38  
                                  _ANSELB 000F39                                    _ANSELC 000F3A  
                                  _T1GCON 000FCC                                    _T3GCON 000FB4  
            __end_of_I2C2_BusCollisionISR 1DD0                                    i2l2003 1474  
                                  i2l2011 138A                   __end_of_PWM5_Initialize 1CC0  
                 __end_of_TMR3_Initialize 1BD8                                    i2l2023 13AC  
                                  i2l2007 137A                                    i2l2017 1394  
                                  i2l2019 139C                                    i2l2029 13B6  
                                  _LEDOne 1D9A                                    i2l3301 1520  
                                  i2l3311 15A8                                    i2l3305 1528  
                                  i2l3251 19B2                                    i2l3315 15AC  
                                  i2l3323 1930                                    i2l3261 19BE  
                                  i2l3245 19A6                                    i2l3309 156C  
                                  i2l3325 1936                                    i2l3333 1948  
                                  i2l3413 1976                            __CFG_WDTEN$OFF 000000  
                                  i2l3271 19CA                                    i2l3327 193C  
                                  i2l3335 1962                                    i2l3423 1992  
                                  i2l3249 19AE                                    i2l3329 1942  
                                  i2l3441 1D26                                    i2l3433 18EA  
                                  i2l3291 1B6C                                    i2l3283 1B4A  
                                  i2l3259 19BA                                    i2l3419 1988  
                                  i2l3269 19C6                                    i2l3621 1196  
                                  i2l3613 117E                                    i2l3287 1B56  
                                  i2l3279 19D2                                    i2l3295 1514  
                                  i2l3711 1B40                                    i2l3631 11BA  
                                  i2l3561 109C                                    i2l1971 1C96  
                                  i2l3299 151C                                    i2l3643 11E8  
                                  i2l3725 1C2C                                    i2l3717 1C0C  
                                  i2l3661 121C                                    i2l3573 10DA  
                                  i2l1967 1C86                                    i2l1983 15D8  
                                  i2l3663 1224                                    i2l3647 11F0  
                                  i2l1993 145A                                    i2l3681 1B0E  
                                  i2l3593 1136                                    i2l1979 15C8  
                                  i2l3659 1218                                    i2l3579 10F2  
                                  i2l1989 15E2                                    i2l1997 146A  
                                  i2l3669 1230                                    i2l3695 1C00  
                                  i2l3687 1BE0                                    _RCREG1 000FAE  
                                  _RCREG2 000F74                                    _RCSTA1 000FAB  
                                  _RCSTA2 000F71                                    _OSCCON 000FD3  
                                  _SPBRG1 000FAF                                    _SPBRG2 000F75  
                                  _TX1REG 000FAD                                    _TX2REG 000F73  
                                  _TXREG1 000FAD                                    _TXREG2 000F73  
                                  _TXSTA1 000FAC                                    _TXSTA2 000F72  
                         _TMR4_StartTimer 1DBA                             main@read_byte 0157  
                          __CFG_XINST$OFF 000000                              _CCPTMRS1bits 000F48  
                        __end_of_colorRed 1796                   __end_of_TMR1_StartTimer 1DCC  
                          _p_i2c2_current 00A8                            __CFG_STVREN$ON 000000  
                                  _length 00E3                                    _memcpy 1858  
                 __end_of_TMR4_Initialize 1D14                                 ?_I2C2_ISR 0021  
                                  clear_0 17FE                                    clear_1 180A  
                                  clear_2 1816                  I2C2_Stop@completion_code 0023  
                           _CCP4_CallBack 1968                          __end_of_playHeal 1510  
                    __size_of_colorYellow 0062                          __end_of_playStun 1452  
                            __pdataCOMRAM 0042                              __mediumconst 0000  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                      _EUSART2_Transmit_ISR 1AE6  
                                  pulse@i 0025                   __end_of_TMR2_StartTimer 1DC8  
TMR3_SetInterruptHandler@InterruptHandler 0039                           _eusart1RxBuffer 006D  
           __size_of_INTERRUPT_Initialize 0014                           _eusart2RxBuffer 007D  
                         _eusart1TxBuffer 0075                          ?_TMR1_Initialize 0021  
                       _SYSTEM_Initialize 19DA                           _eusart2TxBuffer 0085  
                              __accesstop 0060                   __end_of__initialization 184E  
                        ?_CCP4_Initialize 0021                        ?_SYSTEM_Initialize 0021  
                           ___rparam_used 000001                     __end_of_TMR3_CallBack 1C7E  
                   __size_of_clearPattern 0024                            __pcstackCOMRAM 0021  
                            __pidataBANK0 1D42                       ??_SYSTEM_Initialize 003B  
                 __end_of_TMR3_StartTimer 1DC4                                 ?_TMR3_ISR 0021  
                       ??_SPI1_Initialize 0039                            _i2c2_trb_count 0018  
                           __end_of_pulse 15C0                                ??_I2C2_ISR 0024  
                        ?_TMR2_Initialize 0021                            ?_CCP4_CallBack 0027  
                    __end_of_EUSART1_Read 1AE6                    ??_EUSART1_Transmit_ISR 0021  
                   TMR3_ISR@CountCallBack 009C                     ?_EUSART2_Transmit_ISR 0021  
             __end_of_EUSART1_Receive_ISR 1C30           __size_of_PIU_bt_transmit_packet 002A  
                 __end_of_TMR4_StartTimer 1DC0                 __end_of_SYSTEM_Initialize 1A10  
                             playDamage@i 0022                                   ??_pulse 0024  
                           _eusart1RxHead 000E                             _eusart2RxHead 0013  
                           _eusart1TxHead 0010                             _eusart1RxTail 000F  
                           _eusart2TxHead 0015                                __pbssBANK0 0060  
                              __pbssBANK1 0100                             _eusart2RxTail 0014  
                           _eusart1TxTail 0011                                   ?_LEDOne 0021  
                           _eusart2TxTail 0016                              _clearPattern 1C7E  
                        ?_PWM5_Initialize 0021                          ?_TMR3_Initialize 0021  
                         __CFG_PLLCFG$OFF 000000                                __pnvCOMRAM 0040  
                      __CFG_CCP2MX$PORTC1 000000          __end_of_TMR3_SetInterruptHandler 1DB0  
                        ?_TMR1_StartTimer 0021                                ??_TMR3_ISR 0021  
                      __CFG_CCP3MX$PORTB5 000000                                   _CCP4CON 000F57  
                                 _CCP5CON 000F54                                   ?_memcpy 0039  
                        ?_TMR4_Initialize 0021                                _bluePixels 0100  
                    _I2C2_BusCollisionISR 1DCE                                   _LEDZero 1DB0  
       I2C2_ISR@i2c_10bit_address_restart 0007                      __size_of_playPattern 003C  
                                 _OSCCON2 000FD2               __end_of_EUSART2_Receive_ISR 1C04  
                              _colorBlack 1796                                 _I2C2_Stop 18AE  
                                 _OSCTUNE 000F9B                                   _SPBRGH1 000FB0  
                                 _SPBRGH2 000F76                                _colorGreen 16D2  
                                 _SSP1ADD 000FC8                                   _SSP2ADD 000F6E  
                                 _SSP1BUF 000FC9                                   _SSP2BUF 000F6F  
                        ?_TMR2_StartTimer 0021                                 ?_colorRed 0021  
                         _I2C2_Initialize 18F0                           __size_of_LEDOne 000C  
                  I2C2_MasterRead@trBlock 00BF                                 ?_playHeal 0021  
                         __CFG_PWRTEN$OFF 000000                                 ?_playStun 0021  
                                 __Hparam 0000                              _device_state 00AD  
                                 __Lparam 0000                    _PIU_bt_transmit_packet 1C30  
                         ??_CCP4_CallBack 0029                          ?_TMR3_StartTimer 0021  
                            __psmallconst 1000                                _currentBit 000C  
                   ?_I2C2_BusCollisionISR 0021                                   __pcinit 17F8  
                         __size_of_memcpy 0056                                   __ramtop 1000  
                                 __ptext0 1276                                   __ptext1 1858  
                                 __ptext2 19DA                                   __ptext3 1CFA  
                                 __ptext4 1DBA                                   __ptext5 1BAC  
                                 __ptext6 1DC0                                   __ptext7 1DA6  
                                 __ptext8 1D56                                   __ptext9 1DC4  
                               _T1CONbits 000FCD                                   _counter 00A2  
                   _OSCILLATOR_Initialize 1D8C                    ??_EUSART2_Transmit_ISR 0021  
                               _T2CONbits 000FBA                                 _T3CONbits 000FB1  
                                 _nextBit 001A                                 _T4CONbits 000F51  
                      _EUSART1_Initialize 1A7C                  ??_PIN_MANAGER_Initialize 0039  
                              ?_I2C2_Stop 0021                     _I2C2_FunctionComplete 1D14  
                              _playDamage 15C0                     _last_pattern_was_heal 0019  
                     delay_25ms_n_times@n 0021                __size_of_SYSTEM_Initialize 0036  
                        ?_TMR4_StartTimer 0021                                ??_colorRed 0021  
                    end_of_initialization 184E                       ?_EUSART1_Initialize 0021  
                                 memcpy@d 00EE                                   memcpy@n 003E  
                                 memcpy@s 00EB                                ??_playHeal 0021  
                              ??_playStun 0021                        _EUSART2_Initialize 1A46  
                      _p_i2c2_trb_current 0005                             __busyPinState 00E1  
                                 postdec1 000FE5                                   postdec2 000FDD  
                  I2C2_ISR@i2c_bytes_left 0008                                   postinc0 000FEE  
                                 postinc2 000FDE                     __size_of_EUSART1_Read 0034  
                    ??_EUSART1_Initialize 0039                       ?_EUSART2_Initialize 0021  
                               _PORTCbits 000F82                  _TMR3_SetInterruptHandler 1DA6  
                       __size_of_I2C2_ISR 026E                   __end_of_I2C2_Initialize 192C  
              __end_of_delay_25ms_n_times 1B7C                               ?_colorBlack 0021  
                             ?_colorGreen 0021                      ??_EUSART2_Initialize 0039  
                          __end_of_LEDOne 1DA6                           _SPI1_Initialize 1D7E  
                            _EUSART1_Read 1AB2                  __size_of_CCP4_CaptureISR 0016  
                           clearPattern@i 0021              __end_of_INTERRUPT_Initialize 1D7E  
                  ??_I2C2_BusCollisionISR 0021                             ??_colorYellow 0021  
                           __pidataCOMRAM 1DD0                         __size_of_TMR3_ISR 0030  
                          __end_of_memcpy 18AE                    ?_OSCILLATOR_Initialize 0021  
                  ?_I2C2_FunctionComplete 0021                       start_initialization 17F8  
                             ??_I2C2_Stop 0021           __size_of_PIN_MANAGER_Initialize 0036  
                             ?_playDamage 0021                                  ??_LEDOne 0021  
                __size_of_TMR1_Initialize 001C                       __size_of_colorBlack 0062  
                     __size_of_colorGreen 0062                      I2C2_ISR@pi2c_buf_ptr 009A  
                __size_of_CCP4_Initialize 001E                               __pdataBANK0 00D1  
                                ??_memcpy 0040                   _audio_controller_online 0009  
                          _eusart1RxCount 000D                     CCP4_CaptureISR@module 0029  
                          _eusart2RxCount 0012                                  ?_LEDZero 0021  
                     __end_of_colorYellow 16D2                               __pbssCOMRAM 0001  
                        ?_I2C2_Initialize 0021             __size_of_EUSART1_Transmit_ISR 0032  
                           __pcstackBANK0 00EB                             __pcstackBANK1 0148  
                __size_of_TMR2_Initialize 0014                    __size_of_TMR3_CallBack 0024  
                 __end_of_SPI1_Initialize 1D8C                             _i2c2_tr_queue 00CB  
                            _byte_to_test 00AC              __size_of_EUSART1_Receive_ISR 002C  
                       __size_of_colorRed 0062                   ?_PIU_bt_transmit_packet 0039  
                               __pnvBANK0 00E5                    _PIN_MANAGER_Initialize 1A10  
                __size_of_PWM5_Initialize 001E                  __size_of_TMR3_Initialize 002C  
                       __size_of_playHeal 00BE                                 __pintcode 0008  
                       __size_of_playStun 00E0                       __size_of_playDamage 00B0  
                       ??_CCP4_CaptureISR 0029                                  _I2C2_ISR 1008  
            ??_INTERRUPT_InterruptManager 002B                          __CFG_PRICLKEN$ON 000000  
                           ??_playPattern 0026                               __smallconst 1000  
                             _bit_to_test 00AB                                  _BAUDCON1 000FB8  
                                _BAUDCON2 000F70                  __size_of_TMR1_StartTimer 0004  
                __size_of_TMR4_Initialize 001A                                 _redPixels 0130  
                          __size_of_pulse 00B0                      _INTERRUPT_Initialize 1D6A  
          __end_of_PIU_bt_transmit_packet 1C5A              __size_of_EUSART2_Receive_ISR 002C  
                                _LATBbits 000F8A                                  _IPR1bits 000F9F  
                                _IPR2bits 000FA2                                  _PIE1bits 000F9D  
                                _IPR3bits 000FA5                                  _PIE2bits 000FA0  
                                _IPR4bits 000F7C                                  _PIE3bits 000FA3  
                                _PIE4bits 000F7A                  __size_of_TMR2_StartTimer 0004  
                                i2u204_40 1B9C       __size_of_INTERRUPT_InterruptManager 00D4  
                                i2u340_47 13D8                                  i2u341_47 13E6  
                                i2u350_47 1488                                  i2u342_47 13F4  
                                i2u351_47 1496                                  i2u343_47 1402  
                                i2u360_47 15E8                                  i2u352_47 14A4  
                                i2u344_47 1410                                  i2u336_47 1B5C  
                                i2u176_48 1C6A                                  _PIR1bits 000F9E  
                                i2u361_47 15F6                                  i2u353_47 14B2  
                                i2u345_47 141E                                  i2u337_47 1B72  
                                i2u362_47 1604                                  i2u354_47 14C0  
                                i2u346_47 142C                                  i2u338_47 13BC  
                                _PIR2bits 000FA1                                  i2u363_47 1612  
                                i2u355_47 14CE                                  i2u347_47 143A  
                                i2u339_47 13CA                                  i2u364_47 1620  
                                i2u356_47 14DC                                  i2u348_47 1448  
                                _PIR3bits 000FA4                                  i2u365_47 162E  
                                i2u357_47 14EA                                  i2u349_47 147A  
                                i2u366_47 163C                                  i2u358_47 14F8  
                                _PIR4bits 000F7B                                  i2u367_47 164A  
                                i2u359_47 1506                ??_TMR3_SetInterruptHandler 003B  
                           _TMR3_CallBack 1C5A                                  i2u368_47 1658  
                                _PIR5bits 000F7E                                  i2u369_47 1666  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                                _SSP1CON1 000FC6                                  _SSP2CON1 000F6C  
                                _SSP2CON3 000F69                                  _TMR3_ISR 1B7C  
                                _SSP1STAT 000FC7                                  _SSP2STAT 000F6D  
                             _colorYellow 1670                     __end_of_CCP4_CallBack 19A2  
                               _to_return 00B0                         bt_to_PIU@piu_buff 0060  
              _bluetooth_to_remote_online 000B                         ??_TMR1_Initialize 0039  
                               draw@pixel 0021                         ??_CCP4_Initialize 0039  
                __size_of_TMR3_StartTimer 0004                              ??_colorBlack 0021  
                        __size_of_LEDZero 000A             __size_of_EUSART2_Transmit_ISR 0032  
                            ??_colorGreen 0021                       __end_of_playPattern 1968  
                        ?_SPI1_Initialize 0021                               _INTCON2bits 000FF1  
                               copy_data0 1830                     ?_INTERRUPT_Initialize 0021  
                             _greenPixels 0118                         ??_TMR2_Initialize 0039  
                              pulse@pixel 0024                     EUSART1_Read@readValue 0039  
                      _delay_25ms_n_times 1B4A                  __size_of_TMR4_StartTimer 0006  
                          ?_TMR3_CallBack 0021                                  __Hrparam 0000  
                                __Lrparam 0000                               _packet_uuid 001C  
                      __CFG_BOREN$SBORDIS 000000                       ?_delay_25ms_n_times 0021  
                       __CFG_P2BMX$PORTB5 000000                        __end_of_colorBlack 17F8  
                 ??_OSCILLATOR_Initialize 0039                        __end_of_colorGreen 1734  
             __size_of_EUSART1_Initialize 0036                   ??_I2C2_FunctionComplete 0021  
                       ??_TMR3_Initialize 003B                         ??_PWM5_Initialize 0039  
              CCP4_CallBack@capturedValue 0027                                 playHeal@i 0022  
                            _piu_bt_state 00AE                              ??_playDamage 0021  
                    ??_delay_25ms_n_times 0023                                  __ptext10 1CDE  
                                __ptext11 1DC8                                  __ptext20 1CC0  
                                __ptext12 1D7E                                  __ptext21 1C30  
                                __ptext13 1CA2                                _T1GCONbits 000FCC  
                                __ptext30 1DCE                                  __ptext22 1AB2  
                                __ptext14 1A10                                  __ptext31 1AE6  
                                __ptext15 1D8C                                  __ptext40 1B4A  
                                __ptext32 1BD8                                  __ptext24 1B7C  
                                __ptext16 1D6A                                  __ptext41 1372  
                                __ptext33 1B18                                  __ptext25 1C5A  
                                __ptext17 18F0                                  __ptext50 1DB0  
                                __ptext42 1670                                  __ptext34 1C04  
                                __ptext26 1DCC                                  __ptext18 1A46  
                                __ptext51 0000                                  __ptext43 1452  
                                __ptext35 1D2C                                  __ptext27 1008  
                                __ptext19 1A7C                                  __ptext44 16D2  
                                __ptext36 1968                                  __ptext28 18AE  
                                __ptext45 15C0                                  __ptext37 192C  
                                __ptext29 1D14                                  __ptext46 1734  
                                __ptext38 1510                                  __ptext47 1D9A  
                                __ptext39 19A2                                  __ptext48 1C7E  
                                __ptext49 1796                              _SSP1CON1bits 000FC6  
                               playStun@i 0022                                  _colorRed 1734  
                            _SSP2CON1bits 000F6C                              _SSP2CON2bits 000F6B  
                       ??_TMR1_StartTimer 0039                                _T3GCONbits 000FB4  
                           ?_clearPattern 0021               __size_of_EUSART2_Initialize 0036  
                       ??_TMR4_Initialize 0039                             __size_of_draw 0038  
                           __size_of_main 00FC                                  _playHeal 1452  
                                _playStun 1372                                  _selector 0042  
                                _piu_buff 00B2                                  int$flags 0043  
                      __end_of_playDamage 1670                         ??_TMR2_StartTimer 0039  
      __end_of_INTERRUPT_InterruptManager 00DC                _INTERRUPT_InterruptManager 0008  
                 I2C2_MasterWrite@trBlock 00C5                              _SSP1STATbits 000FC7  
    __end_of_TMR3_DefaultInterruptHandler 1DCE     __size_of_TMR3_DefaultInterruptHandler 0002  
            _TMR3_DefaultInterruptHandler 1DCC             __size_of_I2C2_BusCollisionISR 0002  
                     _EUSART1_Receive_ISR 1C04                               _playPattern 192C  
                              _INTCONbits 000FF2                                  memcpy@d1 0039  
                                memcpy@s1 003B                    ??_INTERRUPT_Initialize 0039  
                          ??_clearPattern 0021                         ??_TMR3_StartTimer 0039  
                                intlevel2 0000                      ?_EUSART1_Receive_ISR 0021  
                         _CCP4_CaptureISR 1D2C                       I2C2_ISR@i2c_address 001F  
                 ?_PIN_MANAGER_Initialize 0021                           ??_TMR3_CallBack 0021  
                              _RCSTA1bits 000FAB                                _RCSTA2bits 000F71  
            __end_of_EUSART1_Transmit_ISR 1B4A                                _PLAY_PAUSE 00DB  
                       ??_TMR4_StartTimer 0039                       _EUSART2_Receive_ISR 1BD8  
           ?_TMR3_DefaultInterruptHandler 0021                         __CFG_T3CMX$PORTC0 000000  
                   bt_to_PIU@piu_bt_state 00B1                              draw@bitCount 0022  
                   ??_EUSART1_Receive_ISR 0021            __end_of_PIN_MANAGER_Initialize 1A46  
                             _previousBit 001D                  __size_of_I2C2_Initialize 003C  
                    ?_EUSART2_Receive_ISR 0021                        __size_of_I2C2_Stop 0042  
                       __CFG_FOSC$INTIO67 000000                           _TMR1_Initialize 1CDE  
